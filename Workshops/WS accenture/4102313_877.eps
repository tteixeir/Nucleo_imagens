%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: Windows Cyrillic
%%Title: cloud_technology_04.eps
%%Creator: Adobe Illustrator(R) 21.0
%%For: Руслан Олегович Холяев
%%CreationDate: 12/18/2018
%%BoundingBox: 0 0 600 400
%%HiResBoundingBox: 0 0 600 400
%%CropBox: 0 0 600 400
%%LanguageLevel: 2
%%DocumentData: Clean7Bit
%ADOBeginClientInjection: DocumentHeader "AI11EPS"
%%AI8_CreatorVersion: 21.0.0%AI9_PrintingDataBegin%ADO_BuildNumber: Adobe Illustrator(R) 21.0.0 x223 R agm 4.7740 ct 5.3840%ADO_ContainsXMP: MainFirst%AI7_Thumbnail: 128 88 8%%BeginData: 9766 Hex Bytes%0000330000660000990000CC0033000033330033660033990033CC0033FF
%0066000066330066660066990066CC0066FF009900009933009966009999
%0099CC0099FF00CC0000CC3300CC6600CC9900CCCC00CCFF00FF3300FF66
%00FF9900FFCC3300003300333300663300993300CC3300FF333300333333
%3333663333993333CC3333FF3366003366333366663366993366CC3366FF
%3399003399333399663399993399CC3399FF33CC0033CC3333CC6633CC99
%33CCCC33CCFF33FF0033FF3333FF6633FF9933FFCC33FFFF660000660033
%6600666600996600CC6600FF6633006633336633666633996633CC6633FF
%6666006666336666666666996666CC6666FF669900669933669966669999
%6699CC6699FF66CC0066CC3366CC6666CC9966CCCC66CCFF66FF0066FF33
%66FF6666FF9966FFCC66FFFF9900009900339900669900999900CC9900FF
%9933009933339933669933999933CC9933FF996600996633996666996699
%9966CC9966FF9999009999339999669999999999CC9999FF99CC0099CC33
%99CC6699CC9999CCCC99CCFF99FF0099FF3399FF6699FF9999FFCC99FFFF
%CC0000CC0033CC0066CC0099CC00CCCC00FFCC3300CC3333CC3366CC3399
%CC33CCCC33FFCC6600CC6633CC6666CC6699CC66CCCC66FFCC9900CC9933
%CC9966CC9999CC99CCCC99FFCCCC00CCCC33CCCC66CCCC99CCCCCCCCCCFF
%CCFF00CCFF33CCFF66CCFF99CCFFCCCCFFFFFF0033FF0066FF0099FF00CC
%FF3300FF3333FF3366FF3399FF33CCFF33FFFF6600FF6633FF6666FF6699
%FF66CCFF66FFFF9900FF9933FF9966FF9999FF99CCFF99FFFFCC00FFCC33
%FFCC66FFCC99FFCCCCFFCCFFFFFF33FFFF66FFFF99FFFFCC110000001100
%000011111111220000002200000022222222440000004400000044444444
%550000005500000055555555770000007700000077777777880000008800
%000088888888AA000000AA000000AAAAAAAABB000000BB000000BBBBBBBB
%DD000000DD000000DDDDDDDDEE000000EE000000EEEEEEEE0000000000FF
%00FF0000FFFFFF0000FF00FFFFFF00FFFFFF
%524C45FFAFFFA9FFAFFFA9FFAFFFA9FFAFFFA9FFAFFFA9FFAFFFA9FD68FF
%A9AFA9AFA9AFA9AFA9AFA9AFA9AFA9AFA9AFA9AFA9AFA9AFFD68FFAFA9FF
%AFAFA9FFAFAFA9FFAFAFA9FFAFAFA9FFAFAFA9FFAFFD68FFA9AFA9AFA9AF
%A9AFA9AFA9AFA9AFA9AFA9AFA9AFA9AFA9FD6AFFA9FFAFFFA9FFAFFFA9FF
%AFFFA9FFAFFFA9FFAFFFA9FD6AFFA9AFA9AFA9AFA9AFA9AFA9AFA9AFA9AF
%A9AFA9AFA9AFA9FD6AFFAFAFA9FFAFAFA9FFAFAFA9FFAFAFA9FFAFAFA9FF
%AFFD6AFFA9AFA9AFA9AFA9AFA9AFA9AFA9AFA9AFA9AFA9AFA9FD4FFF8484
%84FD1AFFAFFFA9FFAFFFA9FFAFFFA9FFAFFFA9FFAFFFA9FD4FFF7E85A9FF
%A9AFFD17FFA9AFA9AFA9AFA9AFA9AFA9AFA9AFA9AFA9AFA9AFA9FD4DFF84
%AFA9FFA98430A9FD16FFAFA9FFAFAFA9FFAFAFA9FFAFAFA9FFAFAFA9FFAF
%FD4DFF85362F305AFF5A5A36FD16FFA9AFA9AFA9AFA9AFA9AFA9AFA9AFA9
%AFA9AFA9AFFD4BFFAF5A84FD042F59FF365A5AFD16FFA9FFAFFFA9FFAFFF
%A9FFAFFFA9FFAFFFA9FFAFFD4BFF84A95A5A2F302F5A84A95A5BA9FD14FF
%A9AFA9AFA9AFA9AFA9AFA9AFA9AFA9AFA9AFA9FD4BFF84302F2F2F302F2F
%2F5AA95A3085FD15FFAFAFA9FFAFAFA9FFAFAFA9FFAFAFA9FFAFFD4CFF84
%2F362F302F362F302FA9845A5AFD14FFA9AFA9AFA9AFA9AFA9AFA9AFA9AF
%A9AFA9FD4DFF7EFD092F59A9365A305AA9FD12FFAFFFA9FFAFFFA9FFAFFF
%A9FFAFFD50FFAF2F5A2F302F5A2F7E2F5AAFAF5A5B5A5AAFFD10FFA9AFA9
%AFA9AFA9AFA9AFA9FD53FFAF7E2F302F2F2FAFA9842F305AAF7E5A5A85FD
%10FFAFA9FFAFAFA9FFAFFD57FFA95A2F362F5AA9FFA95A2F362FFF84FFAF
%AFFD11FFA9FFA9FFA9FD59FFA95A2F2F2F7EA9AF5AFD042FFFA8855AFD70
%FFAFA92F305AFFA9852F5A2F3084A95A5AA9FD71FFAF5A2F2F852F2F2F30
%2F5AA85A365A7EFD70FFA985A97E2F362F302F362FA9A9855A5A84FD70FF
%2F847E85FD072F5AA85A365AFD67FF8485A9FD06FF85848530FF845A2F5A
%2F302F85A95A5AFD67FF85FFA95AAFFD04FF84FFA85AFF5A847E2F302F2F
%2FFF365AA8FD66FF84FFFFFF8485FFFFFFA9FFFF5AFF5A5AFFAF5A362F30
%845A5AFD67FF85FD04FFA98484FF84FFFF85FF845AFFFFFF845A2FAF5AA9
%FD67FF84FD07FF5A85FFFF84FFA9FD05FFAFFFA9FD69FFA9FD08FF84FFFF
%A9FFAFA8FD60FFA9FD0FFF84FD05FFA9FD05FF84FFA9AFFD27FF84A9A8A9
%FFFF84FFA8A8A8A9A8A8A8FFFFA884A984A8A8A984FFA8FFA8AF84FF84FF
%84A9FFA8A8FF84A9FFFF84AFA8FFA8AFFD07FF855A857EAFFD04FFA9FD06
%FF85FFFFFFA98485A8FD04FF85FFAFA8FD26FF5353067E53FF532F06A806
%AF5353292FA8FF2F2F532F53A9065353597E537E2F7E2F595329A906AF84
%2F2F845353068453537EFD07FF84FF5A5A3685AFFFA9FFAFFD05FF7EFFFF
%FFA9FFAF85FD04FF84FFFF85A9FD25FF29A8535353FF2984537E2884532F
%7E2F7EFFFF06FF067E7E29A87E2F5A2F7E062F065359535928847E2F7E2F
%29A8537E2906FD08FF85FFFF5A5A84A95AA97EA9A9AFA9FF84A9FFFFFFAF
%A9AF84FD04FF85FFFFFF857EFD24FF06A9FF7E2FFF06A92F8406A92F597E
%5359FFFF29FF2F2F8406FFFF53282F7E29062F2F7E2F7E06A959597E5306
%7E2FAF2F5AFD08FF84FFFFFFAF7E5A842F5A2F5AA9AFA9FD05FFAFAF85AF
%AFFFFFFF84FD05FF84A9FD22FF0684295353FF2F842F7D2984532F7E2F7E
%FFFF06FF06A9840684532F7E2F7E0659065959535929847E2F7E2F2F842F
%847E59FD08FF85FFAFA9AFA9302F5A5A5A2F36A9AFA9AFA8FFFFFFA985FD
%05FF85FD06FFA88484FD20FF532F297E2859592F28AF292F53592F2FA9FF
%FF2FFF2F2F84282F59537E597E2FA82FA82F06AF06537E2F297E532F06A9
%7E84FD08FF84FFA8FFAFFF85615A855A5B8485A9FFAF85FD0AFF84FD08FF
%AF7EFD20FFA8FD05FFA8FFFFFFA8FD0DFFA8FD09FFA9FD09FFA8FD0CFFA9
%FF5A5AFFAFAFA9855A845A5AA8FF5A5A7EFD09FFA9A9FD04FF84A9FFFFFF
%A984FD58FF84FF5A7E3085FFFFA9FFA9A9FFA92F302FAFFFFFA9FFAFFD04
%FF85A9FFFFAFA9FF84FD04FFA9FD58FF84FFA95A2F2F2F84FFA9FFA8542F
%2F2FA984AFA9AFA9AFA9FF8484A8FFFFFFAFAFA9A9A8FFFFFF84FD1EFFA9
%FFA9FFFFFFAFFFAFFFA9FFAFFD05FFAFFFAFFD05FFA9FFA9FFFFFFA8FFA9
%FFAFFD14FF85A9FF5AA95A5A2F3030855A302F5A5AAFA9FFAFA9305A7EFF
%A9FD07FFA9FFAF85FFFFFFA9FD1EFFA97E847E7EA8847E845A847EA97EA9
%7EFF7E7E7EAFA8A97E845A847E847EA97E847E847EA97EA9FD10FF8485A8
%FFFF362F5A845A2F3030362F5A84A9A9AF845A2F5A305A2F85A9AFA9FD04
%FFAFA9A9A9FFFFFF84FD1EFFA8AFA9AFA8FFA9AFA8AFA9AFA8AFAFFFA9AF
%A8AFA8FFA9A9A8FFA9A9A8AFAFAFA8A9A9AFA8A9A9FD0FFF7EAFFD04FF7E
%5A7E5A5AA95A5A2F858485AFFFAF85365A5A85365A5AAFA9FFA9FD0AFFA9
%FD1EFFA97EA9A8A984FF84AF84A9A8A984A984A984A9A8A984A9848484A9
%A8A9FD16FFA98484FD06FF855A362F2F2F8584852F2F2F84A8FFA9A95A5A
%365A84AFA9FF845AFD0AFF7EFD1EFF84A9A8AF7EA9A8A9A8A97E857EA97E
%A97E84848584A984A97EA984A9A9FD15FF84A9FD08FF2F84855A2F5A2F5A
%2F5A2F5A5A5AA9FFAFFFA9AFA9FFFFFF5A5A5AFD09FFA9AFFD1FFFA8FFAF
%FD2CFF857EFD0AFFFD045A852F5A36302F857E5A2F5A53AFA9AFA9FFA984
%2F2F2F84FFAFA9AFA9AFA9FFA884A9FD1EFFA8A984A984A97EFD27FFA885
%A9FD0BFFAF5A5A362F857E5B5AA9595AA95A2F362F84A9FF84302F3630AF
%84FFAFAF7EAFAFAFA9A9FD20FFA984A97EA9A8A8FD25FFAF5AA9FD0EFFAF
%842F2F2F5A5A7E2F2F2F5A5A852F302F36302F2F2F5AA9A9AFA97E2F5A2F
%5A84AFA9FD4AFFAF8584FD09FFAFFD07FF84AF5A5A2F5B2F3053842F855A
%A9845A305B2F5A85AFAFFFA95A305A5A5B365A84FFAFFFA9FD47FF8584AF
%FD06FFA9FD05FFA9FD05FFA8A9845A2F5A7EA984A92F5A2F5A84855AA95A
%2F7EFFA9AF845A365A365A7EAFA9FFAF84FD48FF855A5A84FFFFFFAFFD0E
%FFAF85A984AFFF847EA936302F365A855A5A2F305AFFFFAFA9855A85A9FF
%AFFF7E5A7EFD1EFFA88584857E8584857E8584857E8584857E85848584FD
%16FF7E305A5AAFA9FD0BFFA9FD05FFA8AFFFFF7E7E2F855A302F5A365A2F
%5A2F5A5984A9FFA9AFA9AFA8A92F2F2F85FD1DFFA95B5A5A5A5B5A5A5A5B
%5A5A5A5B5A5A5A5B5A5A5A5B5AFD16FFA9A9FD0FFFAFFD09FF2F5A7E5A85
%85365A30AF7EA95A5A2F3084FFFFFFA95A2F302FAF84FD1DFF7E305A365A
%5AAFFFAF84A9A984FFAFA8FF845A365A305AA8FD15FFA9FD12FFAFA9FD07
%FF7E302F2F5A8584842F302F855A5A2F2F2F855A5A2F3036855A84FD1DFF
%5A5A365A5A5A84FF84A984FF5AFFA8FFFF85365A5A5A36FD13FFAFFD17FF
%AFFD06FFAF845A2F302F5A2F302F5A5A5A84852F30365A5A5A84852F5A7E
%FD1DFF85365A305A36FD085A7EFD045A305A365AFD12FFA9FD19FFA9FD05
%FFAFA984852F36302F59A95A302F2F5AA9305A2F857E542F2F2FAFFD1EFF
%AF7E855A855A855A855A855A855A855A855A855A85FD22FFA9AFFD0CFFAF
%FD05FFA9A97E8484AFA985855A2F5A2F8585A95A302F5A5AAF7EFD44FFA9
%FD0DFFA9AF84AFA8A9A8FD0BFFA9FD05FFA9A984AFFFFF2F5A845A2F302F
%5A2F5A2F3684842F84FD44FFAFAFFD0BFF5AAF85AFA9847EAF84FD0BFFAF
%FD0AFF5A5A5A7EA9365A5A5A2F85845A2F5A7EFD44FF2FA9A8FD0AFF842F
%7EA8A9A85A59FFA8AFA9FD09FFAFFFA9FD07FFA87E2F5A2F845A5A5AA9FD
%042F7EFD45FF852F84AFFD0BFF7E5A7EAFA9FF84AFAFAFA9FD0BFFAFFD08
%FF855A302F5A7E855A5A2F5AAFFD47FF7E2F5A84FFA9FD09FFA85A2FA9A9
%FFA8A9A8AF84AFFD0AFFA9FD07FF84A95A2F2F5A365A2F8584FD48FF8585
%593653A9A9FD0AFFA92F5AAFFFFFAF85FFA8AFAFFD0BFFAFFD05FFA9AF84
%7E365A7EA9A8FD49FFAF84A95A5A2F5AA8FD0BFF7E305AFD05FFA8A984FD
%0BFFA9FD05FFA9AF84A984A9A9FD4CFFA9AF85842F5A84FD0BFFAF842FA9
%FD06FFA9FD13FFA9FD13FFAFFFFFFFAF7E855A85A8FD33FFA8A984855930
%2FA9A8FD0AFFA92F5AA8FD11FFA9FD19FFA9AFFFFFAF5A5A365A5A5A3685
%84AFFD32FF85A9845A2F5AA8FD0BFF845A7EFD11FFA8FD17FFA9FFAFFFAF
%305A365A305A365A305A365A5AA9AFFD2FFFA8A984842F2F59FFA9FD19FF
%A8FF2FA9FD14FFA9AFA9AFA9AFFF5A5B5A5A5A5B5A5A5A5B5A5A5A5B5A5A
%A9FD2FFFAFAF85A95A5A2FA9A9FD17FFA9852F5AFD14FFAFFFAFFFA9FFAF
%5A5A305A365A305A365A305A365A305A367EFD32FF84A97E5A2F5A84FFAF
%FD11FFA9FF845A537EA9FD13FFA9AFA9AFA9AFA9AF5A5A5A365A5A5A365A
%5A5A365A5A5A365A5AFD33FFA9A984852F3059FFAFFD0FFFAFAF2F365A85
%84FD12FFAFA9FFAFAFA9FFAFAFA9305A365A305A365A305A365A305A365A
%305A84FD33FFAFA9A8A95A2F2F7EA8FFAFFD0BFFA85A2F305AA984A9A9FD
%0FFFA9AFA9AFA9AFA9AFA9AFA9AF5B5A5A5A5B5A5A5A5B5A5A5A5B5A5A5A
%5B5A85FD36FFA9AF847E2F5A84FD0BFF7E5A2F7E84AFA9FD11FFA9FFAFFF
%A9FFAFFFA9FFAFFFA9305A365A305A365A305A365A305A365A305A36FD37
%FFA9A984852F2F2FAFA9FD05FFA8A92F2F53A984A9A8FD11FFA9AFA9AFA9
%AFA9AFA9AFA9AFA9AF5A365A5A5A365A5A5A365A5A5A365A5A5A365AA9FD
%38FFAF84AF845A2F7EA9FFA9FFA95A2F5A84A984FD13FFA9FFAFAFA9FFAF
%AFA9FFAFAFA9FFAF365A305A365A305A365A305A365A305A365A3085FD3A
%FF84A9845AFD072F8484A9A8FD13FFA9AFA9AFA9AFA9AFA9AFA9AFA9AFA9
%AF5A5A5B5A5A5A5B5A5A5A5B5A5A5A5B5A5A5A5B5AFD3BFFAFAF84A95A5A
%535A5AA984AFFD16FFA9FFAFFFA9FFAFFFA9FFAFFFA9FFAF365A305A365A
%305A365A305A365A305A365A305AA9FD3CFFAF84A984A984A984FD17FFAF
%AFA9AFA9AFA9AFA9AFA9AFA9AFA9AF5A5A5A365A5A5A365A5A5A365A5A5A
%365A5A5A36AFFD3EFFA9AF85A9A9FD19FFAFAFA9FFAFAFA9FFAFAFA9FFAF
%AFA9305A365A305A365A305A365A305A365A305A365A7EFD5DFFA9AFA9AF
%A9AFA9AFA9AFA9AFA9AF5B5A5A5A5B5A5A5A5B5A5A5A5B5A5A5A5B5A5A5A
%AFFD5EFFA9FFAFFFA9FFAFFFA9FFAFFFA9305A365A305A365A305A365A30
%5A365A305A365AA8FD5EFFAFA9AFA9AFA9AFA9AFA9AFA9AF5A365A5A5A36
%5A5A5A365A5A5A365A5A5A365AA9FD60FFAFA9FFAFAFA9FFAFAFA9FFAF36
%5A305A365A305A365A305A365A305A365A84FD61FFA9AFA9AFA9AFA9AFA9
%AFA9AF5A5A5B5A5A5A5B5A5A5A5B5A5A5A5B5A5AA8FD63FFA9FFAFFFA9FF
%AFFFA9FFAF848584A9848584A9848584A9848584A9A8FD65FFA9FFAFFFA9
%FFAFFFA9FDFCFFFD04FFFF
%%EndData
%ADOEndClientInjection: DocumentHeader "AI11EPS"
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentFonts: 
%%DocumentNeededFonts: 
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentProcessColors:  Cyan Magenta Yellow Black
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EndComments
                                                                                                                                                                                                               
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 64 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq {pop /AGMCORE_currentbg load}{/Procedure get_res}ifelse
	dup currentblackgeneration eq {pop}{setblackgeneration}ifelse
	dup null eq {pop /AGMCORE_currentucr load}{/Procedure get_res}ifelse
	dup currentundercolorremoval eq {pop}{setundercolorremoval}ifelse
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0
%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.
%%Version: 2.31 0
10 dict begin
/Adobe_CoolType_Passthru currentdict def
/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known def
Adobe_CoolType_Core_Defined
	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}
if
userdict/Adobe_CoolType_Core 70 dict dup begin put
/Adobe_CoolType_Version 2.31 def
/Level2?
	systemdict/languagelevel known dup
		{pop systemdict/languagelevel get 2 ge}
	if def
Level2? not
	{
	/currentglobal false def
	/setglobal/pop load def
	/gcheck{pop false}bind def
	/currentpacking false def
	/setpacking/pop load def
	/SharedFontDirectory 0 dict def
	}
if
currentpacking
true setpacking
currentglobal false setglobal
userdict/Adobe_CoolType_Data 2 copy known not
	{2 copy 10 dict put}
if
get
	 begin
	/@opStackCountByLevel 32 dict def
	/@opStackLevel 0 def
	/@dictStackCountByLevel 32 dict def
	/@dictStackLevel 0 def
	 end
setglobal
currentglobal true setglobal
userdict/Adobe_CoolType_GVMFonts known not
	{userdict/Adobe_CoolType_GVMFonts 10 dict put}
if
setglobal
currentglobal false setglobal
userdict/Adobe_CoolType_LVMFonts known not
	{userdict/Adobe_CoolType_LVMFonts 10 dict put}
if
setglobal
/ct_VMDictPut
	{
	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse
	3 1 roll put
	}bind def
/ct_VMDictUndef
	{
	dup Adobe_CoolType_GVMFonts exch known
		{Adobe_CoolType_GVMFonts exch undef}
		{
			dup Adobe_CoolType_LVMFonts exch known
			{Adobe_CoolType_LVMFonts exch undef}
			{pop}
			ifelse
		}ifelse
	}bind def
/ct_str1 1 string def
/ct_xshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_yshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0 exch
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_xyshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			{_ct_na _ct_i 1 add get}stopped 
			{pop pop pop}
			{
				_ct_x _ct_y moveto
				rmoveto
			}
			ifelse
		}
		ifelse
		/_ct_i _ct_i 2 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def
/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def
/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind def
currentglobal true setglobal
/ct_T3Defs
{
/BuildChar
{
	1 index/Encoding get exch get
	1 index/BuildGlyph get exec
}bind def
/BuildGlyph
{
	exch begin
	GlyphProcs exch get exec
	end
}bind def
}bind def
setglobal
/@_SaveStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@vmState currentglobal def false setglobal
		@opStackCountByLevel
		@opStackLevel
		2 copy known not
			{
			2 copy
			3 dict dup/args
			7 index
			5 add array put
			put get
			}
			{
			get dup/args get dup length 3 index lt
				{
				dup length 5 add array exch
				1 index exch 0 exch putinterval
				1 index exch/args exch put
				}
				{pop}
			ifelse
			}
		ifelse
			begin
			count 1 sub
			1 index lt
				{pop count}
			if
			dup/argCount exch def
			dup 0 gt
				{
				args exch 0 exch getinterval 
			astore pop
				}
				{pop}
			ifelse
			count
			/restCount exch def
			end
		/@opStackLevel @opStackLevel 1 add def
		countdictstack 1 sub
		@dictStackCountByLevel exch @dictStackLevel exch put
		/@dictStackLevel @dictStackLevel 1 add def
		@vmState setglobal
		end
	}bind def
/@_RestoreStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		@opStackCountByLevel @opStackLevel get
			begin
			count restCount sub dup 0 gt
				{{pop}repeat}
				{pop}
			ifelse
			args 0 argCount getinterval{}forall
			end
		/@dictStackLevel @dictStackLevel 1 sub def
		@dictStackCountByLevel @dictStackLevel get
		end
	countdictstack exch sub dup 0 gt
		{{end}repeat}
		{pop}
	ifelse
	}bind def
/@_PopStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		/@dictStackLevel @dictStackLevel 1 sub def
		end
	}bind def
/@Raise
	{
	exch cvx exch errordict exch get exec
	stop
	}bind def
/@ReRaise
	{
	cvx $error/errorname get errordict exch get exec
	stop
	}bind def
/@Stopped
	{
	0 @#Stopped
	}bind def
/@#Stopped
	{
	@_SaveStackLevels
	stopped
		{@_RestoreStackLevels true}
		{@_PopStackLevels false}
	ifelse
	}bind def
/@Arg
	{
	Adobe_CoolType_Data
		begin
		@opStackCountByLevel @opStackLevel 1 sub get
		begin
		args exch
		argCount 1 sub exch sub get
		end
		end
	}bind def
currentglobal true setglobal
/CTHasResourceForAllBug
	Level2?
		{
		1 dict dup
				/@shouldNotDisappearDictValue true def
				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put
				begin
				count @_SaveStackLevels
					{(*){pop stop}128 string/Category resourceforall}
				stopped pop
				@_RestoreStackLevels
				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll
					{
						 /@shouldNotDisappearDictValue known
								{
										 {
												end
												currentdict 1 index eq
													{pop exit}
												if
										 }
									 loop
								}
						 if
					}
					{
						 pop
						 end
					}
				ifelse
		}
		{false}
	ifelse
	def
true setglobal
/CTHasResourceStatusBug
	Level2?
		{
		mark
			{/steveamerige/Category resourcestatus}
		stopped
			{cleartomark true}
			{cleartomark currentglobal not}
		ifelse
		}
		{false}
	ifelse
	def
setglobal
/CTResourceStatus
		{
		mark 3 1 roll
		/Category findresource
			begin
			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
				{cleartomark false}
				{{3 2 roll pop true}{cleartomark false}ifelse}
			ifelse
			end
		}bind def
/CTWorkAroundBugs
	{
	Level2?
		{
		/cid_PreLoad/ProcSet resourcestatus
			{
			pop pop
			currentglobal
			mark
				{
				(*)
					{
					dup/CMap CTHasResourceStatusBug
						{CTResourceStatus}
						{resourcestatus}
					ifelse
						{
						pop dup 0 eq exch 1 eq or
							{
							dup/CMap findresource gcheck setglobal
							/CMap undefineresource
							}
							{
							pop CTHasResourceForAllBug
								{exit}
								{stop}
							ifelse
							}
						ifelse
						}
						{pop}
					ifelse
					}
				128 string/CMap resourceforall
				}
			stopped
				{cleartomark}
			stopped pop
			setglobal
			}
		if
		}
	if
	}bind def
/ds
	{
	Adobe_CoolType_Core
		begin
		CTWorkAroundBugs
		/mo/moveto load def
		/nf/newencodedfont load def
		/msf{makefont setfont}bind def
		/uf{dup undefinefont ct_VMDictUndef}bind def
		/ur/undefineresource load def
		/chp/charpath load def
		/awsh/awidthshow load def
		/wsh/widthshow load def
		/ash/ashow load def
		/@xshow/xshow load def
		/@yshow/yshow load def
		/@xyshow/xyshow load def
		/@cshow/cshow load def
		/sh/show load def
		/rp/repeat load def
		/.n/.notdef def
		end
		currentglobal false setglobal
	 userdict/Adobe_CoolType_Data 2 copy known not
		 {2 copy 10 dict put}
		if
		get
		begin
		/AddWidths? false def
		/CC 0 def
		/charcode 2 string def
		/@opStackCountByLevel 32 dict def
		/@opStackLevel 0 def
		/@dictStackCountByLevel 32 dict def
		/@dictStackLevel 0 def
		/InVMFontsByCMap 10 dict def
		/InVMDeepCopiedFonts 10 dict def
		end
		setglobal
	}bind def
/dt
	{
	currentdict Adobe_CoolType_Core eq
		{end}
	if
	}bind def
/ps
	{
	Adobe_CoolType_Core begin
	Adobe_CoolType_GVMFonts begin
	Adobe_CoolType_LVMFonts begin
	SharedFontDirectory begin
	}bind def
/pt
	{
	end
	end
	end
	end
	}bind def
/unload
	{
	systemdict/languagelevel known
		{
		systemdict/languagelevel get 2 ge
			{
			userdict/Adobe_CoolType_Core 2 copy known
				{undef}
				{pop pop}
			ifelse
			}
		if
		}
	if
	}bind def
/ndf
	{
	1 index where
		{pop pop pop}
		{dup xcheck{bind}if def}
	ifelse
	}def
/findfont systemdict
	begin
	userdict
		begin
		/globaldict where{/globaldict get begin}if
			dup where pop exch get
		/globaldict where{pop end}if
		end
	end
Adobe_CoolType_Core_Defined
	{/systemfindfont exch def}
	{
	/findfont 1 index def
	/systemfindfont exch def
	}
ifelse
/undefinefont
	{pop}ndf
/copyfont
	{
	currentglobal 3 1 roll
	1 index gcheck setglobal
	dup null eq{0}{dup length}ifelse
	2 index length add 1 add dict
		begin
		exch
			{
			1 index/FID eq
				{pop pop}
				{def}
			ifelse
			}
		forall
		dup null eq
			{pop}
			{{def}forall}
		ifelse
		currentdict
		end
	exch setglobal
	}bind def
/copyarray
	{
	currentglobal exch
	dup gcheck setglobal
	dup length array copy
	exch setglobal
	}bind def
/newencodedfont
	{
	currentglobal
		{
		SharedFontDirectory 3 index known
			{SharedFontDirectory 3 index get/FontReferenced known}
			{false}
		ifelse
		}
		{
		FontDirectory 3 index known
			{FontDirectory 3 index get/FontReferenced known}
			{
			SharedFontDirectory 3 index known
				{SharedFontDirectory 3 index get/FontReferenced known}
				{false}
			ifelse
			}
		ifelse
		}
	ifelse
	dup
		{
		3 index findfont/FontReferenced get
		2 index dup type/nametype eq
			{findfont}
		if ne
			{pop false}
		if
		}
	if
	dup
		{
		1 index dup type/nametype eq
			{findfont}
		 if
		dup/CharStrings known
			{
			/CharStrings get length
			4 index findfont/CharStrings get length
			ne
				{
				pop false
				}
			if 
			}
			{pop}
			ifelse
		}
	if
		{
		pop
		1 index findfont
		/Encoding get exch
		0 1 255
			{2 copy get 3 index 3 1 roll put}
		for
		pop pop pop
		}
		{
		currentglobal
	 4 1 roll
		dup type/nametype eq
		 {findfont}
	 if
	 dup gcheck setglobal
		dup dup maxlength 2 add dict
			begin
			exch
				{
				1 index/FID ne
				2 index/Encoding ne and
					{def}
					{pop pop}
				ifelse
				}
			forall
			/FontReferenced exch def
			/Encoding exch dup length array copy def
			/FontName 1 index dup type/stringtype eq{cvn}if def dup
			currentdict
			end
		definefont ct_VMDictPut
		setglobal
		}
	ifelse
	}bind def
/SetSubstituteStrategy
	{
	$SubstituteFont
		begin
		dup type/dicttype ne
			{0 dict}
		if
		currentdict/$Strategies known
			{
			exch $Strategies exch 
			2 copy known
				{
				get
				2 copy maxlength exch maxlength add dict
					begin
					{def}forall
					{def}forall
					currentdict
					dup/$Init known
						{dup/$Init get exec}
					if
					end
				/$Strategy exch def
				}
				{pop pop pop}
			ifelse
			}
			{pop pop}
		ifelse
		end
	}bind def
/scff
	{
	$SubstituteFont
		begin
		dup type/stringtype eq
			{dup length exch}
			{null}
		ifelse
		/$sname exch def
		/$slen exch def
		/$inVMIndex
			$sname null eq
				{
				1 index $str cvs
				dup length $slen sub $slen getinterval cvn
				}
				{$sname}
			ifelse def
		end
		{findfont}
	@Stopped
		{
		dup length 8 add string exch
		1 index 0(BadFont:)putinterval
		1 index exch 8 exch dup length string cvs putinterval cvn
			{findfont}
		@Stopped
			{pop/Courier findfont}
		if
		}
	if
	$SubstituteFont
		begin
		/$sname null def
		/$slen 0 def
		/$inVMIndex null def
		end
	}bind def
/isWidthsOnlyFont
	{
	dup/WidthsOnly known
		{pop pop true}
		{
		dup/FDepVector known
			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}
			{
			dup/FDArray known
				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}
				{pop}
			ifelse
			}
		ifelse
		}
	ifelse
	}bind def
/ct_StyleDicts 4 dict dup begin
		 /Adobe-Japan1 4 dict dup begin
					 Level2?
								{
								/Serif
								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMin-W3}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMin-W3/CIDFont resourcestatus
								{pop pop/HeiseiMin-W3}
								{/Ryumin-Light}
								ifelse
							}
							{/Ryumin-Light}
							ifelse
								}
								ifelse
								def
								/SansSerif
								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiKakuGo-W5/CIDFont resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{/GothicBBB-Medium}
								ifelse
							}
							{/GothicBBB-Medium}
							ifelse
								}
								ifelse
								def
								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMaruGo-W4/CIDFont resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
									/Jun101-Light-RKSJ-H/Font resourcestatus
									{pop pop/Jun101-Light}
									{SansSerif}
									ifelse
								}
								ifelse
							}
							{
								/Jun101-Light-RKSJ-H/Font resourcestatus
								{pop pop/Jun101-Light}
								{SansSerif}
								ifelse
							}
							ifelse
								}
								ifelse
								/RoundSansSerif exch def
								/Default Serif def
								}
								{
								/Serif/Ryumin-Light def
								/SansSerif/GothicBBB-Medium def
								{
								(fonts/Jun101-Light-83pv-RKSJ-H)status
								}stopped
								{pop}{
										 {pop pop pop pop/Jun101-Light}
										 {SansSerif}
										 ifelse
										 /RoundSansSerif exch def
								}ifelse
								/Default Serif def
								}
					 ifelse
		 end
		 def
		 /Adobe-Korea1 4 dict dup begin
					/Serif/HYSMyeongJo-Medium def
					/SansSerif/HYGoThic-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-GB1 4 dict dup begin
					/Serif/STSong-Light def
					/SansSerif/STHeiti-Regular def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-CNS1 4 dict dup begin
					/Serif/MKai-Medium def
					/SansSerif/MHei-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
end
def
Level2?{currentglobal true setglobal}if
/ct_BoldRomanWidthProc 
	{
	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth
	0 0
	}bind def
/ct_Type0WidthProc 
	{
	 dup stringwidth 0 0 moveto 
	 2 index true charpath pathbbox
	 0 -1 
	 7 index 2 div .88 
	 setcachedevice2
	 pop
	0 0
	}bind def
/ct_Type0WMode1WidthProc 
	{
	 dup stringwidth 
	 pop 2 div neg -0.88
	2 copy
	moveto 
	0 -1
	 5 -1 roll true charpath pathbbox
	 setcachedevice
	}bind def
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
/ct_BoldBaseFont 
	 11 dict begin
		/FontType 3 def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/Encoding cHexEncoding def 
		/_setwidthProc/ct_BoldRomanWidthProc load def
		/_bcstr1 1 string def
		/BuildChar
		{
			exch begin
				_basefont setfont
				_bcstr1 dup 0 4 -1 roll put
				dup 
				_setwidthProc
				3 copy 
				moveto				
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
systemdict/composefont known
{
/ct_DefineIdentity-H
{
	/Identity-H/CMap resourcestatus
	{
		pop pop
	}
	{
		/CIDInit/ProcSet findresource begin
		 12 dict begin
		 begincmap
		 /CIDSystemInfo 3 dict dup begin
			 /Registry(Adobe)def
			 /Ordering(Identity)def
			 /Supplement 0 def
		 end def
		 /CMapName/Identity-H def
		 /CMapVersion 1.000 def
		 /CMapType 1 def
		 1 begincodespacerange
		 <0000><FFFF>
		 endcodespacerange
		 1 begincidrange
		 <0000><FFFF>0
		 endcidrange
		 endcmap
		 CMapName currentdict/CMap defineresource pop
		 end
		 end
	 }
	 ifelse
}
def
/ct_BoldBaseCIDFont 
	 11 dict begin
		/CIDFontType 1 def
		/CIDFontName/ct_BoldBaseCIDFont def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/_setwidthProc/ct_Type0WidthProc load def
		/_bcstr2 2 string def
		/BuildGlyph
		{
			exch begin		 
				_basefont setfont
				_bcstr2 1 2 index 256 mod put
				_bcstr2 0 3 -1 roll 256 idiv put
				_bcstr2 dup _setwidthProc		 
				3 copy 
				moveto
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
}if
Level2?{setglobal}if
/ct_CopyFont{
	{
		1 index/FID ne 2 index/UniqueID ne and
		{def}{pop pop}ifelse
	}forall
}bind def
/ct_Type0CopyFont 
{
	exch
	dup length dict
	begin
	ct_CopyFont
	[
	exch
	FDepVector 
	{
		 dup/FontType get 0 eq
		{	
		1 index ct_Type0CopyFont 
		/_ctType0 exch definefont
		}
		{
		/_ctBaseFont exch
		2 index exec
		}
		 ifelse 
		 exch
	}
	forall 
	pop
	]				
	/FDepVector exch def
	currentdict
	end
}bind def
/ct_MakeBoldFont
{
	 dup/ct_SyntheticBold known
	{
		dup length 3 add dict begin 
		ct_CopyFont 
		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 
		/ct_SyntheticBold true def
		currentdict 
		end 
		definefont
	}
	{
		dup dup length 3 add dict
		begin
			ct_CopyFont
			/PaintType 2 def
			/StrokeWidth .03 0 FontMatrix idtransform pop def
			/dummybold currentdict
		end
		definefont
		dup/FontType get dup 9 ge exch 11 le and 
		{
			ct_BoldBaseCIDFont
			dup length 3 add dict copy begin
			dup/CIDSystemInfo get/CIDSystemInfo exch def
			ct_DefineIdentity-H
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefont exch def
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefonto exch def
			currentdict
			end
			/CIDFont defineresource
		}
		{
			ct_BoldBaseFont
			dup length 3 add dict copy begin
			/_basefont exch def
			/_basefonto exch def
			currentdict
			end
			definefont
		}
		ifelse
	}
	ifelse
}bind def
/ct_MakeBold{
	1 index 
	1 index
	findfont
	currentglobal 5 1 roll
	dup gcheck setglobal
		dup
		 /FontType get 0 eq
			{
				dup/WMode known{dup/WMode get 1 eq}{false}ifelse
				version length 4 ge
				and
					{version 0 4 getinterval cvi 2015 ge}
					{true}
				ifelse 
					{/ct_Type0WidthProc}
					{/ct_Type0WMode1WidthProc}
				ifelse
				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put
						{ct_MakeBoldFont}ct_Type0CopyFont definefont
			}
			{
				dup/_fauxfont known not 1 index/SubstMaster known not and
				{
					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put
					 ct_MakeBoldFont 
				}
				{
				2 index 2 index eq
					{exch pop	}
					{
						dup length dict begin
						ct_CopyFont
						currentdict
						end
						definefont 
					}
				ifelse
				}
			ifelse
			}
		 ifelse
		 pop pop pop
		 setglobal
}bind def
/?str1 256 string def
/?set
	{
	$SubstituteFont
		begin
		/$substituteFound false def
		/$fontname 1 index def
		/$doSmartSub false def
		end
	dup
	 findfont
	$SubstituteFont
		begin
		$substituteFound
			{false}
			{
			dup/FontName known
				{
				dup/FontName get $fontname eq
				1 index/DistillerFauxFont known not and
				/currentdistillerparams where
					{pop false 2 index isWidthsOnlyFont not and}
				if
				}
				{false}
			ifelse
			}
		ifelse
		exch pop
		/$doSmartSub true def
		end
		{
		5 1 roll pop pop pop pop
		findfont
		}
		{
		1 index
		findfont
		dup/FontType get 3 eq
		{
			6 1 roll pop pop pop pop pop false
		}
		{pop true}
		ifelse
		{
		$SubstituteFont
		begin
		pop pop
		/$styleArray 1 index def
		/$regOrdering 2 index def
		pop pop
		0 1 $styleArray length 1 sub
		{
			$styleArray exch get
			ct_StyleDicts $regOrdering
			2 copy known
			{
				get
				exch 2 copy known not
				{pop/Default}
				if
				get
				dup type/nametype eq
				{
				?str1 cvs length dup 1 add exch
				?str1 exch(-)putinterval
				exch dup length exch ?str1 exch 3 index exch putinterval
				add ?str1 exch 0 exch getinterval cvn
				}
				{
				pop pop/Unknown
				}
				ifelse
			}
			{
				pop pop pop pop/Unknown
			}
			ifelse
		}
		for
		end
		findfont 
		}if
		}
	ifelse
	currentglobal false setglobal 3 1 roll
	null copyfont definefont pop
	setglobal
	}bind def
setpacking
userdict/$SubstituteFont 25 dict put
1 dict
	begin
	/SubstituteFont
		dup $error exch 2 copy known
			{get}
			{pop pop{pop/Courier}bind}
		ifelse def
	/currentdistillerparams where dup
		{
		pop pop
		currentdistillerparams/CannotEmbedFontPolicy 2 copy known
			{get/Error eq}
			{pop pop false}
		ifelse
		}
	if not
		{
		countdictstack array dictstack 0 get
			begin
			userdict
				begin
				$SubstituteFont
					begin
					/$str 128 string def
					/$fontpat 128 string def
					/$slen 0 def
					/$sname null def
					/$match false def
					/$fontname null def
					/$substituteFound false def
					/$inVMIndex null def
					/$doSmartSub true def
					/$depth 0 def
					/$fontname null def
					/$italicangle 26.5 def
					/$dstack null def
					/$Strategies 10 dict dup
						begin
						/$Type3Underprint
							{
							currentglobal exch false setglobal
							11 dict
								begin
								/UseFont exch
									$WMode 0 ne
										{
										dup length dict copy
										dup/WMode $WMode put
										/UseFont exch definefont
										}
									if def
								/FontName $fontname dup type/stringtype eq{cvn}if def
								/FontType 3 def
								/FontMatrix[.001 0 0 .001 0 0]def
								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def
								/FontBBox[0 0 0 0]def
								/CCInfo 7 dict dup
									begin
									/cc null def
									/x 0 def
									/y 0 def
									end def
								/BuildChar
									{
									exch
										begin
										CCInfo
											begin
											1 string dup 0 3 index put exch pop
											/cc exch def
											UseFont 1000 scalefont setfont
											cc stringwidth/y exch def/x exch def
											x y setcharwidth
											$SubstituteFont/$Strategy get/$Underprint get exec
											0 0 moveto cc show
											x y moveto
											end
										end
									}bind def
								currentdict
								end
							exch setglobal
							}bind def
						/$GetaTint
							2 dict dup
								begin
								/$BuildFont
									{
									dup/WMode known
										{dup/WMode get}
										{0}
									ifelse
									/$WMode exch def
									$fontname exch
									dup/FontName known
										{
										dup/FontName get
										dup type/stringtype eq{cvn}if
										}
										{/unnamedfont}
									ifelse
									exch
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
									1 index/FontName get known
										{
										pop
										Adobe_CoolType_Data/InVMDeepCopiedFonts get
										1 index get
										null copyfont
										}
										{$deepcopyfont}
									ifelse
									exch 1 index exch/FontBasedOn exch put
									dup/FontName $fontname dup type/stringtype eq{cvn}if put
									definefont
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
										begin
										dup/FontBasedOn get 1 index def
										end
									}bind def
								/$Underprint
									{
									gsave
									x abs y abs gt
										{/y 1000 def}
										{/x -1000 def 500 120 translate}
									ifelse
									Level2?
										{
										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]
										setcolorspace
										}
										{0 setgray}
									ifelse
									10 setlinewidth
									x .8 mul
									[7 3]
										{
										y mul 8 div 120 sub x 10 div exch moveto
										0 y 4 div neg rlineto
										dup 0 rlineto
										0 y 4 div rlineto
										closepath
										gsave
										Level2?
											{.2 setcolor}
											{.8 setgray}
										ifelse
										fill grestore
										stroke
										}
									forall
									pop
									grestore
									}bind def
								end def
						/$Oblique
							1 dict dup
								begin
								/$BuildFont
									{
									currentglobal exch dup gcheck setglobal
									null copyfont
										begin
										/FontBasedOn
										currentdict/FontName known
											{
											FontName
											dup type/stringtype eq{cvn}if
											}
											{/unnamedfont}
										ifelse
										def
										/FontName $fontname dup type/stringtype eq{cvn}if def
										/currentdistillerparams where
											{pop}
											{
											/FontInfo currentdict/FontInfo known
												{FontInfo null copyfont}
												{2 dict}
											ifelse
											dup
												begin
												/ItalicAngle $italicangle def
												/FontMatrix FontMatrix
												[1 0 ItalicAngle dup sin exch cos div 1 0 0]
												matrix concatmatrix readonly
												end
											4 2 roll def
											def
											}
										ifelse
										FontName currentdict
										end
									definefont
									exch setglobal
									}bind def
								end def
						/$None
							1 dict dup
								begin
								/$BuildFont{}bind def
								end def
						end def
					/$Oblique SetSubstituteStrategy
					/$findfontByEnum
						{
						dup type/stringtype eq{cvn}if
						dup/$fontname exch def
						$sname null eq
							{$str cvs dup length $slen sub $slen getinterval}
							{pop $sname}
						ifelse
						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval
						/$match false def
						$SubstituteFont/$dstack countdictstack array dictstack put
						mark
							{
							$fontpat 0 $slen 7 add getinterval
								{/$match exch def exit}
							$str filenameforall
							}
						stopped
							{
							cleardictstack
							currentdict
							true
							$SubstituteFont/$dstack get
								{
								exch
									{
									1 index eq
										{pop false}
										{true}
									ifelse
									}
									{begin false}
								ifelse
								}
							forall
							pop
							}
						if
						cleartomark
						/$slen 0 def
						$match false ne
							{$match(fonts/)anchorsearch pop pop cvn}
							{/Courier}
						ifelse
						}bind def
					/$ROS 1 dict dup
						begin
						/Adobe 4 dict dup
							begin
							/Japan1 [/Ryumin-Light/HeiseiMin-W3
										 /GothicBBB-Medium/HeiseiKakuGo-W5
										 /HeiseiMaruGo-W4/Jun101-Light]def
							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def
							/GB1	 [/STSong-Light/STHeiti-Regular]def
							/CNS1	[/MKai-Medium/MHei-Medium]def
							end def
						end def
					/$cmapname null def
					/$deepcopyfont
						{
						dup/FontType get 0 eq
							{
							1 dict dup/FontName/copied put copyfont
								begin
								/FDepVector FDepVector copyarray
								0 1 2 index length 1 sub
									{
									2 copy get $deepcopyfont
									dup/FontName/copied put
									/copied exch definefont
									3 copy put pop pop
									}
								for
								def
								currentdict
								end
							}
							{$Strategies/$Type3Underprint get exec}
						ifelse
						}bind def
					/$buildfontname
						{
						dup/CIDFont findresource/CIDSystemInfo get
							begin
							Registry length Ordering length Supplement 8 string cvs
							3 copy length 2 add add add string
							dup 5 1 roll dup 0 Registry putinterval
							dup 4 index(-)putinterval
							dup 4 index 1 add Ordering putinterval
							4 2 roll add 1 add 2 copy(-)putinterval
							end
						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch
						anchorsearch
							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}
							{pop pop pop pop pop}
						ifelse
						length
						$str 1 index(-)putinterval 1 add
						$str 1 index $cmapname $fontpat cvs putinterval
						$cmapname length add
						$str exch 0 exch getinterval cvn
						}bind def
					/$findfontByROS
						{
						/$fontname exch def
						$ROS Registry 2 copy known
							{
							get Ordering 2 copy known
								{get}
								{pop pop[]}
							ifelse
							}
							{pop pop[]}
						ifelse
						false exch
							{
							dup/CIDFont resourcestatus
								{
								pop pop
								save
								1 index/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get}
									{false}
								ifelse
								exch pop
								exch restore
									{pop}
									{exch pop true exit}
								ifelse
								}
								{pop}
							ifelse
							}
						forall
							{$str cvs $buildfontname}
							{
							false(*)
								{
								save exch
								dup/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get not}
									{true}
								ifelse
								exch/CIDSystemInfo get
								dup/Registry get Registry eq
								exch/Ordering get Ordering eq and and
									{exch restore exch pop true exit}
									{pop restore}
								ifelse
								}
							$str/CIDFont resourceforall
								{$buildfontname}
								{$fontname $findfontByEnum}
							ifelse
							}
						ifelse
						}bind def
					end
				end
				currentdict/$error known currentdict/languagelevel known and dup
					{pop $error/SubstituteFont known}
				if
				dup
					{$error}
					{Adobe_CoolType_Core}
				ifelse
				begin
					{
					/SubstituteFont
					/CMap/Category resourcestatus
						{
						pop pop
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{
								$sname null eq
									{dup $str cvs dup length $slen sub $slen getinterval cvn}
									{$sname}
								ifelse
								Adobe_CoolType_Data/InVMFontsByCMap get
								1 index 2 copy known
									{
									get
									false exch
										{
										pop
										currentglobal
											{
											GlobalFontDirectory 1 index known
												{exch pop true exit}
												{pop}
											ifelse
											}
											{
											FontDirectory 1 index known
												{exch pop true exit}
												{
												GlobalFontDirectory 1 index known
													{exch pop true exit}
													{pop}
												ifelse
												}
											ifelse
											}
										ifelse
										}
									forall
									}
									{pop pop false}
								ifelse
									{
									exch pop exch pop
									}
									{
									dup/CMap resourcestatus
										{
										pop pop
										dup/$cmapname exch def
										/CMap findresource/CIDSystemInfo get{def}forall
										$findfontByROS
										}
										{
										128 string cvs
										dup(-)search
											{
											3 1 roll search
												{
												3 1 roll pop
													{dup cvi}
												stopped
													{pop pop pop pop pop $findfontByEnum}
													{
													4 2 roll pop pop
													exch length
													exch
													2 index length
													2 index
													sub
													exch 1 sub -1 0
														{
														$str cvs dup length
														4 index
														0
														4 index
														4 3 roll add
														getinterval
														exch 1 index exch 3 index exch
														putinterval
														dup/CMap resourcestatus
															{
															pop pop
															4 1 roll pop pop pop
															dup/$cmapname exch def
															/CMap findresource/CIDSystemInfo get{def}forall
															$findfontByROS
															true exit
															}
															{pop}
														ifelse
														}
													for
													dup type/booleantype eq
														{pop}
														{pop pop pop $findfontByEnum}
													ifelse
													}
												ifelse
												}
												{pop pop pop $findfontByEnum}
											ifelse
											}
											{pop pop $findfontByEnum}
										ifelse
										}
									ifelse
									}
								ifelse
								}
								{//SubstituteFont exec}
							ifelse
							/$slen 0 def
							end
						}
						}
						{
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{$findfontByEnum}
								{//SubstituteFont exec}
							ifelse
							end
						}
						}
					ifelse
					bind readonly def
					Adobe_CoolType_Core/scfindfont/systemfindfont load put
					}
					{
					/scfindfont
						{
						$SubstituteFont
							begin
							dup systemfindfont
							dup/FontName known
								{dup/FontName get dup 3 index ne}
								{/noname true}
							ifelse
							dup
								{
								/$origfontnamefound 2 index def
								/$origfontname 4 index def/$substituteFound true def
								}
							if
							exch pop
								{
								$slen 0 gt
								$sname null ne
								3 index length $slen gt or and
									{
									pop dup $findfontByEnum findfont
									dup maxlength 1 add dict
										begin
											{1 index/FID eq{pop pop}{def}ifelse}
										forall
										currentdict
										end
									definefont
									dup/FontName known{dup/FontName get}{null}ifelse
									$origfontnamefound ne
										{
										$origfontname $str cvs print
										( substitution revised, using )print
										dup/FontName known
											{dup/FontName get}{(unspecified font)}
										ifelse
										$str cvs print(.\n)print
										}
									if
									}
									{exch pop}
								ifelse
								}
								{exch pop}
							ifelse
							end
						}bind def
					}
				ifelse
				end
			end
		Adobe_CoolType_Core_Defined not
			{
			Adobe_CoolType_Core/findfont
				{
				$SubstituteFont
					begin
					$depth 0 eq
						{
						/$fontname 1 index dup type/stringtype ne{$str cvs}if def
						/$substituteFound false def
						}
					if
					/$depth $depth 1 add def
					end
				scfindfont
				$SubstituteFont
					begin
					/$depth $depth 1 sub def
					$substituteFound $depth 0 eq and
						{
						$inVMIndex null ne
							{dup $inVMIndex $AddInVMFont}
						if
						$doSmartSub
							{
							currentdict/$Strategy known
								{$Strategy/$BuildFont get exec}
							if
							}
						if
						}
					if
					end
				}bind put
			}
		if
		}
	if
	end
/$AddInVMFont
	{
	exch/FontName 2 copy known
		{
		get
		1 dict dup begin exch 1 index gcheck def end exch
		Adobe_CoolType_Data/InVMFontsByCMap get exch
		$DictAdd
		}
		{pop pop pop}
	ifelse
	}bind def
/$DictAdd
	{
	2 copy known not
		{2 copy 4 index length dict put}
	if
	Level2? not
		{
		2 copy get dup maxlength exch length 4 index length add lt
		2 copy get dup length 4 index length add exch maxlength 1 index lt
			{
			2 mul dict
				begin
				2 copy get{forall}def
				2 copy currentdict put
				end
			}
			{pop}
		ifelse
		}
	if
	get
		begin
			{def}
		forall
		end
	}bind def
end
end
%%EndResource
currentglobal true setglobal
%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.
%%Version: 1.23 0
systemdict/languagelevel known dup
	{currentglobal false setglobal}
	{false}
ifelse
exch
userdict/Adobe_CoolType_Utility 2 copy known
	{2 copy get dup maxlength 27 add dict copy}
	{27 dict}
ifelse put
Adobe_CoolType_Utility
	begin
	/@eexecStartData
		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E
		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C
		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def
	/@recognizeCIDFont null def
	/ct_Level2? exch def
	/ct_Clone? 1183615869 internaldict dup
			/CCRun known not
			exch/eCCRun known not
			ct_Level2? and or def
ct_Level2?
	{globaldict begin currentglobal true setglobal}
if
	/ct_AddStdCIDMap
		ct_Level2?
			{{
				mark
				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put
					{
					((Hex)57 StartData
					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0
					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60
					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8
					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec
					}
				stopped
					{
					 cleartomark
					 Adobe_CoolType_Utility/@recognizeCIDFont get
					 countdictstack dup array dictstack
					 exch 1 sub -1 0
						 {
						 2 copy get 3 index eq
								{1 index length exch sub 1 sub{end}repeat exit}
								{pop}
						 ifelse
						 }
					 for
					 pop pop
					 Adobe_CoolType_Utility/@eexecStartData get eexec
					}
					{cleartomark}
				ifelse
			}}
			{{
				Adobe_CoolType_Utility/@eexecStartData get eexec
			}}
		ifelse bind def
userdict/cid_extensions known
dup{cid_extensions/cid_UpdateDB known and}if
	{
	 cid_extensions
	 begin
	/cid_GetCIDSystemInfo
		{
		 1 index type/stringtype eq
			{exch cvn exch}
		 if
		 cid_extensions
			 begin
			 dup load 2 index known
				{
				 2 copy
				 cid_GetStatusInfo
				 dup null ne
					{
					 1 index load
					 3 index get
					 dup null eq
						 {pop pop cid_UpdateDB}
						 {
						 exch
						 1 index/Created get eq
							 {exch pop exch pop}
							 {pop cid_UpdateDB}
						 ifelse
						 }
					 ifelse
					}
					{pop cid_UpdateDB}
				 ifelse
				}
				{cid_UpdateDB}
			 ifelse
			 end
		}bind def
	 end
	}
if
ct_Level2?
	{end setglobal}
if
	/ct_UseNativeCapability? systemdict/composefont known def
	/ct_MakeOCF 35 dict def
	/ct_Vars 25 dict def
	/ct_GlyphDirProcs 6 dict def
	/ct_BuildCharDict 15 dict dup
		begin
		/charcode 2 string def
		/dst_string 1500 string def
		/nullstring()def
		/usewidths? true def
		end def
	ct_Level2?{setglobal}{pop}ifelse
	ct_GlyphDirProcs
		begin
		/GetGlyphDirectory
			{
			systemdict/languagelevel known
				{pop/CIDFont findresource/GlyphDirectory get}
				{
				1 index/CIDFont findresource/GlyphDirectory
				get dup type/dicttype eq
					{
					dup dup maxlength exch length sub 2 index lt
						{
						dup length 2 index add dict copy 2 index
						/CIDFont findresource/GlyphDirectory 2 index put
						}
					if
					}
				if
				exch pop exch pop
				}
			ifelse
			+
			}def
		/+
			{
			systemdict/languagelevel known
				{
				currentglobal false setglobal
				3 dict begin
					/vm exch def
				}
				{1 dict begin}
			ifelse
			/$ exch def
			systemdict/languagelevel known
				{
				vm setglobal
				/gvm currentglobal def
				$ gcheck setglobal
				}
			if
			?{$ begin}if
			}def
		/?{$ type/dicttype eq}def
		/|{
			userdict/Adobe_CoolType_Data known
				{
			Adobe_CoolType_Data/AddWidths? known
				{
				 currentdict Adobe_CoolType_Data
					begin
					 begin
						AddWidths?
								{
								Adobe_CoolType_Data/CC 3 index put
								?{def}{$ 3 1 roll put}ifelse
								CC charcode exch 1 index 0 2 index 256 idiv put
								1 index exch 1 exch 256 mod put
								stringwidth 2 array astore
								currentfont/Widths get exch CC exch put
								}
								{?{def}{$ 3 1 roll put}ifelse}
							ifelse
					end
				end
				}
				{?{def}{$ 3 1 roll put}ifelse}	ifelse
				}
				{?{def}{$ 3 1 roll put}ifelse}
			ifelse
			}def
		/!
			{
			?{end}if
			systemdict/languagelevel known
				{gvm setglobal}
			if
			end
			}def
		/:{string currentfile exch readstring pop}executeonly def
		end
	ct_MakeOCF
		begin
		/ct_cHexEncoding
		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
		/ct_CID_STR_SIZE 8000 def
		/ct_mkocfStr100 100 string def
		/ct_defaultFontMtx[.001 0 0 .001 0 0]def
		/ct_1000Mtx[1000 0 0 1000 0 0]def
		/ct_raise{exch cvx exch errordict exch get exec stop}bind def
		/ct_reraise
			{cvx $error/errorname get(Error: )print dup(						 )cvs print
					errordict exch get exec stop
			}bind def
		/ct_cvnsi
			{
			1 index add 1 sub 1 exch 0 4 1 roll
				{
				2 index exch get
				exch 8 bitshift
				add
				}
			for
			exch pop
			}bind def
		/ct_GetInterval
			{
			Adobe_CoolType_Utility/ct_BuildCharDict get
				begin
				/dst_index 0 def
				dup dst_string length gt
					{dup string/dst_string exch def}
				if
				1 index ct_CID_STR_SIZE idiv
				/arrayIndex exch def
				2 index arrayIndex get
				2 index
				arrayIndex ct_CID_STR_SIZE mul
				sub
					{
					dup 3 index add 2 index length le
						{
						2 index getinterval
						dst_string dst_index 2 index putinterval
						length dst_index add/dst_index exch def
						exit
						}
						{
						1 index length 1 index sub
						dup 4 1 roll
						getinterval
						dst_string dst_index 2 index putinterval
						pop dup dst_index add/dst_index exch def
						sub
						/arrayIndex arrayIndex 1 add def
						2 index dup length arrayIndex gt
							 {arrayIndex get}
							 {
							 pop
							 exit
							 }
						ifelse
						0
						}
					ifelse
					}
				loop
				pop pop pop
				dst_string 0 dst_index getinterval
				end
			}bind def
		ct_Level2?
			{
			/ct_resourcestatus
			currentglobal mark true setglobal
				{/unknowninstancename/Category resourcestatus}
			stopped
				{cleartomark setglobal true}
				{cleartomark currentglobal not exch setglobal}
			ifelse
				{
					{
					mark 3 1 roll/Category findresource
						begin
						ct_Vars/vm currentglobal put
						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
							{cleartomark false}
							{{3 2 roll pop true}{cleartomark false}ifelse}
						ifelse
						ct_Vars/vm get setglobal
						end
					}
				}
				{{resourcestatus}}
			ifelse bind def
			/CIDFont/Category ct_resourcestatus
				{pop pop}
				{
				currentglobal true setglobal
				/Generic/Category findresource
				dup length dict copy
				dup/InstanceType/dicttype put
				/CIDFont exch/Category defineresource pop
				setglobal
				}
			ifelse
			ct_UseNativeCapability?
				{
				/CIDInit/ProcSet findresource begin
				12 dict begin
				begincmap
				/CIDSystemInfo 3 dict dup begin
				 /Registry(Adobe)def
				 /Ordering(Identity)def
				 /Supplement 0 def
				end def
				/CMapName/Identity-H def
				/CMapVersion 1.000 def
				/CMapType 1 def
				1 begincodespacerange
				<0000><FFFF>
				endcodespacerange
				1 begincidrange
				<0000><FFFF>0
				endcidrange
				endcmap
				CMapName currentdict/CMap defineresource pop
				end
				end
				}
			if
			}
			{
			/ct_Category 2 dict begin
			/CIDFont 10 dict def
			/ProcSet	2 dict def
			currentdict
			end
			def
			/defineresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					dup dup maxlength exch length eq
						{
						dup length 10 add dict copy
						ct_Category 2 index 2 index put
						}
					if
					3 index 3 index put
					pop exch pop
					}
					{pop pop/defineresource/undefined ct_raise}
				ifelse
				}bind def
			/findresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index 2 copy known
						{get 3 1 roll pop pop}
						{pop pop/findresource/undefinedresource ct_raise}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/resourcestatus
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index known
					exch pop exch pop
						{
						0 -1 true
						}
						{
						false
						}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/ct_resourcestatus/resourcestatus load def
			}
		ifelse
		/ct_CIDInit 2 dict
			begin
			/ct_cidfont_stream_init
				{
					{
					dup(Binary)eq
						{
						pop
						null
						currentfile
						ct_Level2?
							{
								{cid_BYTE_COUNT()/SubFileDecode filter}
							stopped
								{pop pop pop}
							if
							}
						if
						/readstring load
						exit
						}
					if
					dup(Hex)eq
						{
						pop
						currentfile
						ct_Level2?
							{
								{null exch/ASCIIHexDecode filter/readstring}
							stopped
								{pop exch pop(>)exch/readhexstring}
							if
							}
							{(>)exch/readhexstring}
						ifelse
						load
						exit
						}
					if
					/StartData/typecheck ct_raise
					}
				loop
				cid_BYTE_COUNT ct_CID_STR_SIZE le
					{
					2 copy cid_BYTE_COUNT string exch exec
					pop
					1 array dup
					3 -1 roll
					0 exch put
					}
					{
					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi
					dup array exch 2 sub 0 exch 1 exch
						{
						2 copy
						5 index
						ct_CID_STR_SIZE
						string
						6 index exec
						pop
						put
						pop
						}
					for
					2 index
					cid_BYTE_COUNT ct_CID_STR_SIZE mod string
					3 index exec
					pop
					1 index exch
					1 index length 1 sub
					exch put
					}
				ifelse
				cid_CIDFONT exch/GlyphData exch put
				2 index null eq
					{
					pop pop pop
					}
					{
					pop/readstring load
					1 string exch
						{
						3 copy exec
						pop
						dup length 0 eq
							{
							pop pop pop pop pop
							true exit
							}
						if
						4 index
						eq
							{
							pop pop pop pop
							false exit
							}
						if
						}
					loop
					pop
					}
				ifelse
				}bind def
			/StartData
				{
				mark
					{
					currentdict
					dup/FDArray get 0 get/FontMatrix get
					0 get 0.001 eq
						{
						dup/CDevProc known not
							{
							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known
								{get}
								{
								pop pop
								{pop pop pop pop pop 0 -1000 7 index 2 div 880}
								}
							ifelse
							def
							}
						if
						}
						{
						/CDevProc
							{
							 pop pop pop pop pop
							 0
							 1 cid_temp/cid_CIDFONT get
							/FDArray get 0 get
							/FontMatrix get 0 get div
							 7 index 2 div
							 1 index 0.88 mul
							}def
						}
					ifelse
					/cid_temp 15 dict def
					cid_temp
						begin
						/cid_CIDFONT exch def
						3 copy pop
						dup/cid_BYTE_COUNT exch def 0 gt
							{
							ct_cidfont_stream_init
							FDArray
								{
								/Private get
								dup/SubrMapOffset known
									{
									begin
									/Subrs SubrCount array def
									Subrs
									SubrMapOffset
									SubrCount
									SDBytes
									ct_Level2?
										{
										currentdict dup/SubrMapOffset undef
										dup/SubrCount undef
										/SDBytes undef
										}
									if
									end
									/cid_SD_BYTES exch def
									/cid_SUBR_COUNT exch def
									/cid_SUBR_MAP_OFFSET exch def
									/cid_SUBRS exch def
									cid_SUBR_COUNT 0 gt
										{
										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval
										0 cid_SD_BYTES ct_cvnsi
										0 1 cid_SUBR_COUNT 1 sub
											{
											exch 1 index
											1 add
											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add
											GlyphData exch cid_SD_BYTES ct_GetInterval
											0 cid_SD_BYTES ct_cvnsi
											cid_SUBRS 4 2 roll
											GlyphData exch
											4 index
											1 index
											sub
											ct_GetInterval
											dup length string copy put
											}
										for
										pop
										}
									if
									}
									{pop}
								ifelse
								}
							forall
							}
						if
						cleartomark pop pop
						end
					CIDFontName currentdict/CIDFont defineresource pop
					end end
					}
				stopped
					{cleartomark/StartData ct_reraise}
				if
				}bind def
			currentdict
			end def
		/ct_saveCIDInit
			{
			/CIDInit/ProcSet ct_resourcestatus
				{true}
				{/CIDInitC/ProcSet ct_resourcestatus}
			ifelse
				{
				pop pop
				/CIDInit/ProcSet findresource
				ct_UseNativeCapability?
					{pop null}
					{/CIDInit ct_CIDInit/ProcSet defineresource pop}
				ifelse
				}
				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}
			ifelse
			ct_Vars exch/ct_oldCIDInit exch put
			}bind def
		/ct_restoreCIDInit
			{
			ct_Vars/ct_oldCIDInit get dup null ne
				{/CIDInit exch/ProcSet defineresource pop}
				{pop}
			ifelse
			}bind def
		/ct_BuildCharSetUp
			{
			1 index
				begin
				CIDFont
					begin
					Adobe_CoolType_Utility/ct_BuildCharDict get
						begin
						/ct_dfCharCode exch def
						/ct_dfDict exch def
						CIDFirstByte ct_dfCharCode add
						dup CIDCount ge
							{pop 0}
						if
						/cid exch def
							{
							GlyphDirectory cid 2 copy known
								{get}
								{pop pop nullstring}
							ifelse
							dup length FDBytes sub 0 gt
								{
								dup
								FDBytes 0 ne
									{0 FDBytes ct_cvnsi}
									{pop 0}
								ifelse
								/fdIndex exch def
								dup length FDBytes sub FDBytes exch getinterval
								/charstring exch def
								exit
								}
								{
								pop
								cid 0 eq
									{/charstring nullstring def exit}
								if
								/cid 0 def
								}
							ifelse
							}
						loop
			}def
		/ct_SetCacheDevice
			{
			0 0 moveto
			dup stringwidth
			3 -1 roll
			true charpath
			pathbbox
			0 -1000
			7 index 2 div 880
			setcachedevice2
			0 0 moveto
			}def
		/ct_CloneSetCacheProc
			{
			1 eq
				{
				stringwidth
				pop -2 div -880
				0 -1000 setcharwidth
				moveto
				}
				{
				usewidths?
					{
					currentfont/Widths get cid
					2 copy known
						{get exch pop aload pop}
						{pop pop stringwidth}
					ifelse
					}
					{stringwidth}
				ifelse
				setcharwidth
				0 0 moveto
				}
			ifelse
			}def
		/ct_Type3ShowCharString
			{
			ct_FDDict fdIndex 2 copy known
				{get}
				{
				currentglobal 3 1 roll
				1 index gcheck setglobal
				ct_Type1FontTemplate dup maxlength dict copy
					begin
					FDArray fdIndex get
					dup/FontMatrix 2 copy known
						{get}
						{pop pop ct_defaultFontMtx}
					ifelse
					/FontMatrix exch dup length array copy def
					/Private get
					/Private exch def
					/Widths rootfont/Widths get def
					/CharStrings 1 dict dup/.notdef
						<d841272cf18f54fc13>dup length string copy put def
					currentdict
					end
				/ct_Type1Font exch definefont
				dup 5 1 roll put
				setglobal
				}
			ifelse
			dup/CharStrings get 1 index/Encoding get
			ct_dfCharCode get charstring put
			rootfont/WMode 2 copy known
				{get}
				{pop pop 0}
			ifelse
			exch
			1000 scalefont setfont
			ct_str1 0 ct_dfCharCode put
			ct_str1 exch ct_dfSetCacheProc
			ct_SyntheticBold
				{
				currentpoint
				ct_str1 show
				newpath
				moveto
				ct_str1 true charpath
				ct_StrokeWidth setlinewidth
				stroke
				}
				{ct_str1 show}
			ifelse
			}def
		/ct_Type4ShowCharString
			{
			ct_dfDict ct_dfCharCode charstring
			FDArray fdIndex get
			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not
				{ct_1000Mtx matrix concatmatrix concat}
				{pop}
			ifelse
			/Private get
			Adobe_CoolType_Utility/ct_Level2? get not
				{
				ct_dfDict/Private
				3 -1 roll
					{put}
				1183615869 internaldict/superexec get exec
				}
			if
			1183615869 internaldict
			Adobe_CoolType_Utility/ct_Level2? get
				{1 index}
				{3 index/Private get mark 6 1 roll}
			ifelse
			dup/RunInt known
				{/RunInt get}
				{pop/CCRun}
			ifelse
			get exec
			Adobe_CoolType_Utility/ct_Level2? get not
				{cleartomark}
			if
			}bind def
		/ct_BuildCharIncremental
			{
				{
				Adobe_CoolType_Utility/ct_MakeOCF get begin
				ct_BuildCharSetUp
				ct_ShowCharString
				}
			stopped
				{stop}
			if
			end
			end
			end
			end
			}bind def
		/BaseFontNameStr(BF00)def
		/ct_Type1FontTemplate 14 dict
			begin
			/FontType 1 def
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/PaintType 0 def
			currentdict
			end def
		/BaseFontTemplate 11 dict
			begin
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/BuildChar/ct_BuildCharIncremental load def
			ct_Clone?
				{
				/FontType 3 def
				/ct_ShowCharString/ct_Type3ShowCharString load def
				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def
				/ct_SyntheticBold false def
				/ct_StrokeWidth 1 def
				}
				{
				/FontType 4 def
				/Private 1 dict dup/lenIV 4 put def
				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def
				/PaintType 0 def
				/ct_ShowCharString/ct_Type4ShowCharString load def
				}
			ifelse
			/ct_str1 1 string def
			currentdict
			end def
		/BaseFontDictSize BaseFontTemplate length 5 add def
		/ct_matrixeq
			{
			true 0 1 5
				{
				dup 4 index exch get exch 3 index exch get eq and
				dup not
					{exit}
				if
				}
			for
			exch pop exch pop
			}bind def
		/ct_makeocf
			{
			15 dict
				begin
				exch/WMode exch def
				exch/FontName exch def
				/FontType 0 def
				/FMapType 2 def
			dup/FontMatrix known
				{dup/FontMatrix get/FontMatrix exch def}
				{/FontMatrix matrix def}
			ifelse
				/bfCount 1 index/CIDCount get 256 idiv 1 add
					dup 256 gt{pop 256}if def
				/Encoding
					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for
					bfCount 1 255{2 copy bfCount put pop}for
					def
				/FDepVector bfCount dup 256 lt{1 add}if array def
				BaseFontTemplate BaseFontDictSize dict copy
					begin
					/CIDFont exch def
					CIDFont/FontBBox known
						{CIDFont/FontBBox get/FontBBox exch def}
					if
					CIDFont/CDevProc known
						{CIDFont/CDevProc get/CDevProc exch def}
					if
					currentdict
					end
				BaseFontNameStr 3(0)putinterval
				0 1 bfCount dup 256 eq{1 sub}if
					{
					FDepVector exch
					2 index BaseFontDictSize dict copy
						begin
						dup/CIDFirstByte exch 256 mul def
						FontType 3 eq
							{/ct_FDDict 2 dict def}
						if
						currentdict
						end
					1 index 16
					BaseFontNameStr 2 2 getinterval cvrs pop
					BaseFontNameStr exch definefont
					put
					}
				for
				ct_Clone?
					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}
				if
				FontName
				currentdict
				end
			definefont
			ct_Clone?
				{
				gsave
				dup 1000 scalefont setfont
				ct_BuildCharDict
					begin
					/usewidths? false def
					currentfont/Widths get
						begin
						exch/CIDFont get/GlyphDirectory get
							{
							pop
							dup charcode exch 1 index 0 2 index 256 idiv put
							1 index exch 1 exch 256 mod put
							stringwidth 2 array astore def
							}
						forall
						end
					/usewidths? true def
					end
				grestore
				}
				{exch pop}
			ifelse
			}bind def
		currentglobal true setglobal
		/ct_ComposeFont
			{
			ct_UseNativeCapability?
				{				
				2 index/CMap ct_resourcestatus
					{pop pop exch pop}
					{
					/CIDInit/ProcSet findresource
						begin
						12 dict
							begin
							begincmap
							/CMapName 3 index def
							/CMapVersion 1.000 def
							/CMapType 1 def
							exch/WMode exch def
							/CIDSystemInfo 3 dict dup
								begin
								/Registry(Adobe)def
								/Ordering
								CMapName ct_mkocfStr100 cvs
								(Adobe-)search
									{
									pop pop
									(-)search
										{
										dup length string copy
										exch pop exch pop
										}
										{pop(Identity)}
									ifelse
									}
									{pop (Identity)}
								ifelse
								def
								/Supplement 0 def
								end def
							1 begincodespacerange
							<0000><FFFF>
							endcodespacerange
							1 begincidrange
							<0000><FFFF>0
							endcidrange
							endcmap
							CMapName currentdict/CMap defineresource pop
							end
						end
					}
				ifelse
				composefont
				}
				{
				3 2 roll pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
			setglobal
		/ct_MakeIdentity
			{
			ct_UseNativeCapability?
				{
				1 index/CMap ct_resourcestatus
					{pop pop}
					{
					/CIDInit/ProcSet findresource begin
					12 dict begin
					begincmap
					/CMapName 2 index def
					/CMapVersion 1.000 def
					/CMapType 1 def
					/CIDSystemInfo 3 dict dup
						begin
						/Registry(Adobe)def
						/Ordering
						CMapName ct_mkocfStr100 cvs
						(Adobe-)search
							{
							pop pop
							(-)search
								{dup length string copy exch pop exch pop}
								{pop(Identity)}
							ifelse
							}
							{pop(Identity)}
						ifelse
						def
						/Supplement 0 def
						end def
					1 begincodespacerange
					<0000><FFFF>
					endcodespacerange
					1 begincidrange
					<0000><FFFF>0
					endcidrange
					endcmap
					CMapName currentdict/CMap defineresource pop
					end
					end
					}
				ifelse
				composefont
				}
				{
				exch pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
		currentdict readonly pop
		end
	end
%%EndResource
setglobal
%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0
%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.
%%Version: 1.0 0
userdict/ct_T42Dict 15 dict put
ct_T42Dict begin
/Is2015?
{
 version
 cvi
 2015
 ge
}bind def
/AllocGlyphStorage
{
 Is2015?
 {	
	pop
 }
 {
	{string}forall
 }ifelse
}bind def
/Type42DictBegin
{
25 dict begin
 /FontName exch def
 /CharStrings 256 dict 
begin
	 /.notdef 0 def
	 currentdict 
end def
 /Encoding exch def
 /PaintType 0 def
 /FontType 42 def
 /FontMatrix[1 0 0 1 0 0]def
 4 array astore cvx/FontBBox exch def
 /sfnts
}bind def
/Type42DictEnd 
{
 currentdict dup/FontName get exch definefont end
ct_T42Dict exch
dup/FontName get exch put
}bind def
/RD{string currentfile exch readstring pop}executeonly def
/PrepFor2015
{
Is2015?
{		 
	/GlyphDirectory 
	 16
	 dict def
	 sfnts 0 get
	 dup
	 2 index
	(glyx)
	 putinterval
	 2 index 
	(locx)
	 putinterval
	 pop
	 pop
}
{
	 pop
	 pop
}ifelse			
}bind def
/AddT42Char
{
Is2015?
{
	/GlyphDirectory get 
	begin
	def
	end
	pop
	pop
}
{
	/sfnts get
	4 index
	get
	3 index
 2 index
	putinterval
	pop
	pop
	pop
	pop
}ifelse
}bind def
/T0AddT42Mtx2
{
/CIDFont findresource/Metrics2 get begin def end
}bind def
end
%%EndResource
currentglobal true setglobal
%%BeginFile: MMFauxFont.prc
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. 
%%All Rights Reserved.
userdict /ct_EuroDict 10 dict put
ct_EuroDict begin
/ct_CopyFont 
{
    { 1 index /FID ne {def} {pop pop} ifelse} forall
} def
/ct_GetGlyphOutline
{
   gsave
   initmatrix newpath
   exch findfont dup 
   length 1 add dict 
   begin 
		ct_CopyFont 
		/Encoding Encoding dup length array copy 
		dup
		4 -1 roll
		0 exch put   
		def
		currentdict
   end
   /ct_EuroFont exch definefont
   1000 scalefont setfont
   0 0 moveto
   [
       <00> stringwidth 
       <00> false charpath
       pathbbox
       [
       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall
   grestore
   counttomark 8 add
}
def
/ct_MakeGlyphProc
{
   ] cvx
   /ct_PSBuildGlyph cvx
   ] cvx
} def
/ct_PSBuildGlyph 
{ 
 	gsave 
	8 -1 roll pop 
	7 1 roll 
        6 -2 roll ct_FontMatrix transform 6 2 roll
        4 -2 roll ct_FontMatrix transform 4 2 roll
        ct_FontMatrix transform 
	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  
	dup  9 1 roll 
	{  
		currentdict /StrokeWidth 2 copy known  
		{   
			get 2 div   
			0 ct_FontMatrix dtransform pop
			5 1 roll  
			4 -1 roll 4 index sub   
			4 1 roll   
			3 -1 roll 4 index sub  
			3 1 roll   
			exch 4 index add exch  
			4 index add  
			5 -1 roll pop  
		}  
		{	 
			pop pop 
		}  
		ifelse  
	}       
    if  
	setcachedevice  
        ct_FontMatrix concat
        ct_PSPathOps begin 
		exec 
	end 
	{  
		currentdict /StrokeWidth 2 copy known  
			{ get }  
			{ pop pop 0 }  
  	    ifelse  
		setlinewidth stroke  
	}  
	{   
	    fill  
	}  
	ifelse  
    grestore
} def 
/ct_PSPathOps 4 dict dup begin 
	/m {moveto} def 
	/l {lineto} def 
	/c {curveto} def 
	/cp {closepath} def 
end 
def 
/ct_matrix1000 [1000 0 0 1000 0 0] def
/ct_AddGlyphProc  
{
   2 index findfont dup length 4 add dict 
   begin 
	ct_CopyFont 
	/CharStrings CharStrings dup length 1 add dict copy
      begin
         3 1 roll def  
         currentdict 
      end 
      def
      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def
      /ct_PSBuildGlyph /ct_PSBuildGlyph load def
      /ct_PSPathOps /ct_PSPathOps load def
      currentdict
   end
   definefont pop
}
def
systemdict /languagelevel known
{
	/ct_AddGlyphToPrinterFont {
		2 copy
		ct_GetGlyphOutline 3 add -1 roll restore 
		ct_MakeGlyphProc 
		ct_AddGlyphProc
	} def
}
{
	/ct_AddGlyphToPrinterFont {
	    pop pop restore
		Adobe_CTFauxDict /$$$FONTNAME get
		/Euro
		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get
		ct_EuroDict exch get
		ct_AddGlyphProc
	} def
} ifelse
/AdobeSansMM 
{ 
556 0 24 -19 541 703 
	{ 
	541 628 m 
	510 669 442 703 354 703 c 
	201 703 117 607 101 444 c 
	50 444 l 
	25 372 l 
	97 372 l 
	97 301 l 
	49 301 l 
	24 229 l 
	103 229 l 
	124 67 209 -19 350 -19 c 
	435 -19 501 25 509 32 c 
	509 131 l 
	492 105 417 60 343 60 c 
	267 60 204 127 197 229 c 
	406 229 l 
	430 301 l 
	191 301 l 
	191 372 l 
	455 372 l 
	479 444 l 
	194 444 l 
	201 531 245 624 348 624 c 
	433 624 484 583 509 534 c 
	cp 
	556 0 m 
	}
ct_PSBuildGlyph
} def
/AdobeSerifMM 
{ 
500 0 10 -12 484 692 
	{ 
	347 298 m 
	171 298 l 
	170 310 170 322 170 335 c 
	170 362 l 
	362 362 l 
	374 403 l 
	172 403 l 
	184 580 244 642 308 642 c 
	380 642 434 574 457 457 c 
	481 462 l 
	474 691 l 
	449 691 l 
	433 670 429 657 410 657 c 
	394 657 360 692 299 692 c 
	204 692 94 604 73 403 c 
	22 403 l 
	10 362 l 
	70 362 l 
	69 352 69 341 69 330 c 
	69 319 69 308 70 298 c 
	22 298 l 
	10 257 l 
	73 257 l 
	97 57 216 -12 295 -12 c 
	364 -12 427 25 484 123 c 
	458 142 l 
	425 101 384 37 316 37 c 
	256 37 189 84 173 257 c 
	335 257 l 
	cp 
	500 0 m 
	} 
ct_PSBuildGlyph 
} def 
end		
%%EndFile
setglobal
Adobe_CoolType_Core begin /$Oblique SetSubstituteStrategy end
%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get exec
Adobe_AGM_Image/ds gx
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 4 1
%%EndPageComments
%%BeginPageSetup
%ADOBeginClientInjection: PageSetup Start "AI11EPS"
%AI12_RMC_Transparency: Balance=75 RasterRes=300 GradRes=150 Text=0 Stroke=1 Clip=1 OP=0
%ADOEndClientInjection: PageSetup Start "AI11EPS"
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get exec
Adobe_AGM_Image/ps gx
%ADOBeginClientInjection: PageSetup End "AI11EPS"
/currentdistillerparams where{pop currentdistillerparams /CoreDistVersion get 5000 lt} {true} ifelse{ userdict /AI11_PDFMark5 /cleartomark load putuserdict /AI11_ReadMetadata_PDFMark5 {flushfile cleartomark } bind put}{ userdict /AI11_PDFMark5 /pdfmark load putuserdict /AI11_ReadMetadata_PDFMark5 {/PUT pdfmark} bind put } ifelse[/NamespacePush AI11_PDFMark5[/_objdef {ai_metadata_stream_123} /type /stream /OBJ AI11_PDFMark5[{ai_metadata_stream_123}currentfile 0 (%  &&end XMP packet marker&&)/SubFileDecode filter AI11_ReadMetadata_PDFMark5<?xpacket begin="п»ї" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 5.6-c137 79.159768, 2016/08/11-13:24:42        ">
   <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
      <rdf:Description rdf:about=""
            xmlns:dc="http://purl.org/dc/elements/1.1/"
            xmlns:xmp="http://ns.adobe.com/xap/1.0/"
            xmlns:xmpGImg="http://ns.adobe.com/xap/1.0/g/img/"
            xmlns:xmpMM="http://ns.adobe.com/xap/1.0/mm/"
            xmlns:stRef="http://ns.adobe.com/xap/1.0/sType/ResourceRef#"
            xmlns:stEvt="http://ns.adobe.com/xap/1.0/sType/ResourceEvent#"
            xmlns:illustrator="http://ns.adobe.com/illustrator/1.0/"
            xmlns:xmpTPg="http://ns.adobe.com/xap/1.0/t/pg/"
            xmlns:stDim="http://ns.adobe.com/xap/1.0/sType/Dimensions#"
            xmlns:xmpG="http://ns.adobe.com/xap/1.0/g/"
            xmlns:pdf="http://ns.adobe.com/pdf/1.3/"
            xmlns:pdfx="http://ns.adobe.com/pdfx/1.3/">
         <dc:format>application/postscript</dc:format>
         <dc:title>
            <rdf:Alt>
               <rdf:li xml:lang="x-default">600_450_clean</rdf:li>
            </rdf:Alt>
         </dc:title>
         <xmp:MetadataDate>2018-12-18T13:00:34+10:00</xmp:MetadataDate>
         <xmp:ModifyDate>2018-12-18T13:00:34+10:00</xmp:ModifyDate>
         <xmp:CreateDate>2018-12-18T13:00:34+10:00</xmp:CreateDate>
         <xmp:CreatorTool>Adobe Illustrator CC 2017 (Windows)</xmp:CreatorTool>
         <xmp:Thumbnails>
            <rdf:Alt>
               <rdf:li rdf:parseType="Resource">
                  <xmpGImg:width>256</xmpGImg:width>
                  <xmpGImg:height>180</xmpGImg:height>
                  <xmpGImg:format>JPEG</xmpGImg:format>
                  <xmpGImg:image>/9j/4AAQSkZJRgABAgEASABIAAD/7QAsUGhvdG9zaG9wIDMuMAA4QklNA+0AAAAAABAASAAAAAEA&#xA;AQBIAAAAAQAB/+4ADkFkb2JlAGTAAAAAAf/bAIQABgQEBAUEBgUFBgkGBQYJCwgGBggLDAoKCwoK&#xA;DBAMDAwMDAwQDA4PEA8ODBMTFBQTExwbGxscHx8fHx8fHx8fHwEHBwcNDA0YEBAYGhURFRofHx8f&#xA;Hx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8f/8AAEQgAtAEAAwER&#xA;AAIRAQMRAf/EAaIAAAAHAQEBAQEAAAAAAAAAAAQFAwIGAQAHCAkKCwEAAgIDAQEBAQEAAAAAAAAA&#xA;AQACAwQFBgcICQoLEAACAQMDAgQCBgcDBAIGAnMBAgMRBAAFIRIxQVEGE2EicYEUMpGhBxWxQiPB&#xA;UtHhMxZi8CRygvElQzRTkqKyY3PCNUQnk6OzNhdUZHTD0uIIJoMJChgZhJRFRqS0VtNVKBry4/PE&#xA;1OT0ZXWFlaW1xdXl9WZ2hpamtsbW5vY3R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo+Ck5SVlpeYmZ&#xA;qbnJ2en5KjpKWmp6ipqqusra6voRAAICAQIDBQUEBQYECAMDbQEAAhEDBCESMUEFURNhIgZxgZEy&#xA;obHwFMHR4SNCFVJicvEzJDRDghaSUyWiY7LCB3PSNeJEgxdUkwgJChgZJjZFGidkdFU38qOzwygp&#xA;0+PzhJSktMTU5PRldYWVpbXF1eX1RlZmdoaWprbG1ub2R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo&#xA;+DlJWWl5iZmpucnZ6fkqOkpaanqKmqq6ytrq+v/aAAwDAQACEQMRAD8A9E5nuA7FURYxepcL4L8R&#xA;+jIZZUGeKNlOMw3MdirsVdirsVdirsVdirmYKCWIAHUnpiqGt9StJ5TEhcPUgCSOSPlT+Uuqhvoy&#xA;csZAtgMgJpE5Bm7FXYqgdV/u4/mf1Zfg5loz8ktzIcd2Kptp0XC35Hq5r9HbMXNKy5WGNBFZU2ux&#xA;V2KuxV2KuxV2KuxVSuLu1tlVriZIVduKGRggLHsKkb5KMSeQQZAc1RWVlDKQVIqCNwQcilvFXYqx&#xA;/M9wGwCxoBUnoBiqa6fbtFGWcUd+3gMxcs7LlYoUEVlTa7FXYq7FXYq7FXYq1I/BGc/sgn7sIFlB&#xA;NB82+c/za1nzJaTWCxC0s3lqnpM4dohWiSCpUmtDUZ0GDRxxm+ZdNm1Mp7K/kS819UvNOmS4NzYm&#xA;31CwidXMsb+qivwUjlxeJySOlBXDmjGwehsH8e9jjMq8xuH0Hp2pWGpWq3VjMs8DEgOviOoIO4Ps&#xA;c0E4GJoii7qExIWETkGTsVQOq/3cfzP6svwcy0Z+SW5kOOqwW8kzAKDx7t2GRlMBlGBKdqAoCjYA&#xA;UGYRc0OxV2KuxV2KuxV2KuxVZNIIoXlIJCKWIHU0FdsIFmkE0LfOuvfnHr97rcF/Yf6NbxxiN7Jw&#xA;ro/xMWqacviUgbEEds6DFooxjRdNk1MpSt6P+X3myGJ2sL+6ZbS+Ed1pEt0xLET1LxGQ7Eq+3u1c&#xA;wdZgscURuNjTk6XNwnhJ2PJ6Nmsdi7FUINMt+VatT+Wu2W+MWrwQiY4o4xRFC/LKzInm2CIHJdgS&#xA;7FXYq7FXYq7FXYq7FUluNfns5XOqWLQ6YxpFqELGeMKTQGdQqvFXY1oyjuwy8Yr+k+ru/V3tJyVz&#xA;Gzy3zn+Wmn6deWXmTy5fIoubqN7a1Z/3ckrVlUQzLUKG4GnLb3GbPT6szBhIcg4GfTiNSieZYX+Y&#xA;XmK41HzDDdiyl0u7to0ALEiUkfEGDDYgNXiw6jMzBjAjV242WVyvk9c8g+b7W5mjYLE1vqnpxieB&#xA;ShF8kXO4Fwpp8cjH4SBQgZq9VgNecfu6U52mzeryl9/m9EzWuwdiqlcW8c6hXqKbgjJRmYsZQElk&#xA;VhbR78eZ8W3/AAyUspLGOIBEAACg6ZW2OxV2KuxV2KuxV2KuxV2KrJJYUKLI6qZDxQMQOR8BXrhA&#xA;KCQ8p8y/l9ZeW/MVt5p0ogwvcN9Y06RVKAsjOxjkIIj2UkcqAH9oDNrg1RyRMDzrm67PgEDxBgOn&#xA;+YotN803MN5a/V9DuneWKxvA0kcLMC0EwVeXw8qV4Vqppv1zOlC42D6vL7XEEqNHk9v8k+ajq0L2&#xA;F0oTUbOONnZG5xzROoKTRsOzAg/SM02q0/AeIfSfxTs9Nn4vSfqDKMxHKdirsVSFPPnk52ulTV7d&#xA;jZrI9yA1eCwsiSE/J5UXbqTtlvgz7mHiR71OT8xfI8UQlk1q2WJiFEpf4KlEl+1SlOEyNXwOPgT7&#xA;keLHvVrvzx5TtL82FzqUUV2rIjRtyFDIpdfipxoVUtWtKA4jDMiwEnJEGrU4/wAwPJcqROmr25Wc&#xA;gRHkRUszIBuNviRhv4Y+BPuXxI96628+eTbqSOO31e2keXhwVX6+rCZ0++JC3ticMx0UZI96xfzD&#xA;8kMISutWp+sKHi+Pqpcxg+3xKevgT0Bx8Cfcvix707sr21vrOC9tJBLa3MaywSitHjcclYV7EGuV&#xA;kEGiyBtUlJEbU6kUHzOwxjzWXJRZ+MxjBryACoR8PyyYFi2BNGmPax5LtrpZG0uX9HzsXdrYqXs5&#xA;HkRkLtDUAMQxPJKGtK1pl+PUEfVv97VPCDy2+5j1v5V0C5M+jeaLVrWSb0IdLWSTlD+6iWLla3AV&#xA;P3kj7shozHfj1zIlqJipQN87+fUNEcEdxLbuTfyp+WGk+XXQw3Mtwkc5ukWQLX1OBjSpA6KrHoBv&#xA;lObWymOXSm3FpBE82Z5hOW7FXYq7FUDrOvaNolqt3q15FZWzuIllmbipcgsFH0KT8gTkoQMjQFsZ&#xA;SA5oGbzx5Shkjil1W3SSVBJGhbdlZzGpA93RgPkfDJDDPuR4ke9bF588nzR3ckWqwOthGs13xJJj&#xA;jcKQ5FK8aOu46VGE4Z7bc18SPeoj8yPIxVW/TEChi6ry5LUxgF/tAfZ5LX3IHU4fy8+5Hix71R/z&#xA;A8mIZg+r26tbkiZSxqpWRoiKU/35GyjxIpg8CfcnxI96p/jryfwt3/S9twupDDbv6g4u4VGop6Ha&#xA;ZN+nxDxGPgz7l8SPeu0rzp5V1a4jttN1KG6nmUvHHGSSVHL4unT9233YJYZR3IUZInkUw1HUrTTr&#xA;f6xdMUhrQsqs9KAsSQoJoApJwQgZGgmcxEWVtlrGl3tslzaXUc0D/ZdGrv4HuD88MsUgaIYjLEiw&#xA;Wr2OCe6topVWWNxJyRgGBWg7HtvjEkApkASEJDAlxcLFDcGS0gYtLbzAs3GSJ0HByeXEljs1em1B&#xA;k5ExG43LXECR2OwSOLyV5Y1qxmtdRgErPHbGJeVHhVbaNQ8X7S8iDXsaZfLUzgbHn95ao4ISFHy+&#xA;5NvLPk3S/L6r9VaWWRIRbLLKwJESsXA2AHU5Tm1MsnP3tuLAIbhPsx292KuxV5d/yqe1hmmI8wxB&#xA;ZVniRJLePksc1xDdoOSyRl2SW2WrNWqkgBdszfzJP8P45ON4Q70BP+SGkNaS2q+ZAkThi1YoyQZb&#xA;aO2uG/vB9oQhl/l/ysmNXK74WPgDvZJ5k8gaXrN+t2NXWAIkcTRkK/wJb3FqfiWSOjFLskHpUCoY&#xA;VGU48xiKr8bH9DZPGCeaR3n5OaLqARr/AF9JTEix3JjjjiUxq0jFaLJRarJTkanatd8tGqkOUWBw&#xA;g8yv0v8AJzTrd7NLXX1mFmYykZiViVW0azlrxlH21bkv8p/mwS1R3uP4u0xwjoVRPyNjETRtrkrL&#xA;NZyWdyghARwYLmCF+AkpWL63z3rVlFOOD855df1fqT+X83plnbR2tpBaxgCOCNYkAFBxRQooO3TM&#xA;MmzbeBS6UiqA9K1PyUV/XhiiSEakszHdlPShArTpSu2WjYNR3KM4h0AcVrvuKZTdHZuqxuoz2lpd&#xA;QSWl0i3MEgo8MoDgqexB65ISINjZjwg7HdJPLkVzZ69rOmJO82k2qWjWUcjF2gklEhlhDtVioVY2&#xA;UE7VoNssykGIPU2xxggkdGR5Q2uxV2KuxVjnnnyzF5g0+0ge/GnNa3BnjnaOOZSXt5bdkKS/AapO&#xA;xFa79iNsuw5OE8ra8kbHNh97+Uen3k8UsnmCNTBwaEJEo+K3Nw0LNWU14i8flSnKg+zvXIGpI/h/&#xA;G36mo4QeqK0D8sdJ0n9Kj9OrOdVsHsR8KLwEkEMEkn2zy/3nUgbU3G+RnqJSrbkUxxAXvzUrn8rL&#xA;BpbmRdfjiW8+thwYY3JivmhlIHORlBVrdaMoG1e/xYRqD/N7vsQcQ70H/wAqW8vxXwvo9dCXQcyW&#xA;zMqsoAvTeqGBkq4WQgdakfPJfm5VVfiqR4Ebu1ey/JG0Wws7OPWzJYWjhkKQD1GHK0eQGT1GXd9O&#xA;joQu3xDeopGWsNk1v/b+tIwbc/x+AyDyl+W8WgatHqs1+2oXiWstoJHj4nhLKsux5vQKUoFG2+VZ&#xA;dRxCqpshi4TadeZdRFlbLNG8fr2we5KSNxARYnXkx/ZUswXkdsGGFnyOyMsqeV3k/lzW7pp4dR/Q&#xA;N/bJ8en3rGBEFARLA6GMEV3FPnx3328eKAojiHeHWSAlyPD72ReTPOMl1cwLEj3Gl2cbrfeYLkCM&#xA;SKFcqkYYKxHIAs7cem4B64uowbeZ5ByMGaj5d7LdM13QrpJ7vSpBeyu3ApE4f4h0WteKDv8AFmLk&#xA;xTFCWwcjHlhuY81a7S3t7ext7mPmYxHELhGKPGTROSEfF89xt45GFmyGUiBQKOsHn/fwzSeqYJOC&#xA;yEAMylFccqUFfjpsMqnWxHVsje4KKyDN2KuxVi8mj38t4VeyX0WdiZylqxAZhQmo5UWlaDMkZABz&#xA;+9o4DfL7kWPK/GSq3KLGTUoLa3FQW5EEha79Mh43l9pZeF+KaPlblHIr3KM0jBi31W3HjWoCb9tz&#xA;4YfG8vtK+F+KRFj5dtIA6zrFdK4CgPBEKAEnsN+vfIyyk8tkxxgI6HTdPgdXgtoonXZWRFU77dQM&#xA;gZk8yzEQERkUsU87/mV5a8oW3O/mMt46s8FjCOcrhepA7L7nbMnDpZT9zRkziLx5/wA/vOlxqa6n&#xA;BYRLosauUs1KliAac3lPfr0oP9bNiNDACurhnUyt6z5G/M/y35uheO2rDdxjlcW0i9NwCa9OpHXf&#xA;xAzAzaWUN3Kx54y2LMUUAbGq9h1/HMUlyAENxdrskUVl3FfDpltgRaqJklvlL99DqepHrqGoXDr/&#xA;AKluRZpT2ZbYMPnjm2IHcP2ssXK+8p7lLY7FXYq7FUu121nubNUhjErrIsgQhCDwBIr6nSp223yz&#xA;HIA7sJiwlOn+XbqVS90i2si/YVobR9ya1HprtQfD71y2WUDlv82uOM9f0Io+VgUQG4jJTubW3pQH&#xA;lQLxoNyTkfG8vtLLwvxTU3lUSOrfWh8IooNvbsN/mmIzeX2lTiTFNH0wRRpJawyNGoHMxJuepPTu&#xA;d8r8Q97PgCqzWWn23RYIFbZEXblI3RVUblmboB1wAGRUkRCiWv7oE72Nt/MaGdh+Kx/TU/6pyWw8&#xA;z9jHc+QUb/SoZ9IvbG04JLdRMpaUepzZhSsvMMXB6GtdsMZkSBPRBgDEgdXgesadeaRdz2l2ps1j&#xA;VvTju4vrVtsOtu5WRh/qN16k9hv8cxMWN/x1dNkiYmimWleYr2205dL1GzfVNMlakljdKIL4Vbmr&#xA;wCtHr1VK1FKDZa5XLGCeKJo/Y2Ce1EWPtTXSdRMt4bTybpjw3Uyf6RrGphOSRLTksUSswfh8PsDQ&#xA;MO+QyA88h27gnGR/APiWWQ/mJpWnz2uk3STXEtmI7a4vhESgnVeDf5dWofsoR75iHRSkDIdXJGrA&#xA;IB6Mx01mcTyuVEk0nqGNSSFHBUAqQK14V6Zg5BVBzMZvdGZW2OxV2KvLruf8xv8AEU4uxqC6b6kl&#xA;PqCKRwofT9MlWHhWu/05t4jBwCuHi83VyObj34uHyVo5vMnM+o3mALRqcUjJrVePWP8A1q/RkSMf&#xA;+1pBn/TdoU/5hHzTEtL46N6p5m+RVPoV6saAcqfy98coweH/AA8Xl3riObxOvD59z0vNU7N2Ksfv&#xA;dfQakdMuCbSdmK26SbJOOo9KT7Ltx6pXkPCm+ZWPGKvn+hxckzdJfrnl/RtcsmstWtI7qA7qrj4k&#xA;alOSMPiRh4qa5fGZjuGki3i/nD8mPMekyS3vlaU39iwLTWTkfWRU1PFaKkuwG+znpvmbj1IO0tmm&#xA;WPuec2WoX9lqH1m0ebTdSt34MUJjkV6msdWA3J6qw8TRsvIBHeGFvVfK/wDzkTqtmsFtrlityFNJ&#xA;rqFvTLLx5EiIjjyXqRyXbrQ7Zh5dFGXJvhqDF7JZ+fNC1Py3cazpkv1hIo2PogH1PVC1EXHryJIA&#xA;HftmvOnlGVFy/GBjtzTXy9p8mm6Dp1hKeU1tbxRTN15SKgDt/smqcpyS4pEtsBQATDIMnYq7FXYq&#xA;kHnd/MaaE50AMb31F58ADJ6VDy4A960+jMnSDHx+vk4+p4+D0c2FWU/nb6gTe/pv696igLEiiL0+&#xA;Q5n4kLcgvT3zPkMPFtwU4UTlrfjtUvZvNo09zZHXjqG3piWNPS6jlyogbpWmCIxcW/Bwpkclbcds&#xA;r8hSeZ30dz5gDi4EpEHqgLJ6dB9oCn7VaV3zD1gx8Xo5OXpTk4fXzZLmI5KhdRW93DLaSxrNFIvG&#xA;WNvs0I6HJxJBvkxkAdkNouiWmkWSWds0rxISU9aRpONey8iaD5ZLLlMzZY48QiKRBu7J5fQ9RTJt&#xA;Qe57A+OQ4SN08QJpq4sreYqZ4lmC9CR8Q/qMMZEctllAHnu87/MT8vbvUHk1DSkS7WQhp7GbbiVX&#xA;j+4daNESBU9d6V22zYaXVCPpls4Wp097xYO2j63aOmrvYzW6QuIbS4luOd4ZuBNIOIRDTgaqV5MO&#xA;namcckZHhv8AU4YjIDipF23n7VTZSyubGe9hRki1eWIJdxbEn1YNzzUD9lSp79zgOnHnXd0ZDMfK&#xA;+9mP5Nz3dy2tXN488tzM1uzT3bgzOP3nEmIE+ilPsJ4e1Mwe0AAIgef6HL0RJMifL9L0nNa56Evd&#xA;Y0mxkjjvb2C2kl/u0lkVC3uAxGTjilLkCWEskY8yAiY5YpUEkTrIjfZdSCD8iMiRTIG12BLsVdir&#xA;sVS+bzBo0TMjXaNItQUQ82JWpKgLWrCnTLRhmejWcsR1QFvNb+ZEnhutOVtKdKK8/FjL8W37sg/D&#xA;tUE5OUfDqj6mEZeJzGyT3KzaPd/VLHUItSUGn6JuLhPriVHKkMrsXbboktf9dRtl0JcQsivOtvx7&#xA;vk1ThRoG/vRmn6rZX5dIGK3EIBuLSVTHPFXpzjbcA9mFVPYnJEUwSXzd+XvlnzTETqFsEvQvGPUI&#xA;gFnUUpQt+0u/2WqMsx5ZR5MZRBeWXX5MsNfls7m+9dAUaKx06MPO0LVoZDO5W2HJeVZWZT+wKgDL&#xA;/wA1tf4/awGHd7B5B8gL5fSJ+KWkSEyJp9uSyeqycDLPO4WW4k4kirBU8IwRXNdnz8f4/H46ubix&#xA;cLOMxW92KrVkRyQpBK7GmEghAIK4kAEk0A6nAlBWmuaLeSGK0v7e4kBoUjlR2+4HLJYpx5ghhHLE&#xA;8iEblbN2KuxV2KuxVi/mS18zWd+NW0GQSqygXunTVMUnDoyEVaN+O1RUeIzKwmBHDL4Fx8omDxRb&#xA;0fzlomuq+lX8RstQkQrPpl0AC6kEN6bfZlXrup+dMGTTyh6huO9YZ4z2PNDXvlK7s5o57AtqNnCx&#xA;dbCaSk6ctj6M715D/Il692pko5wdjse/9n6mMsFctwmWjau100scM3qyw0M1hODDdR1/mRunsd1b&#xA;saZXkgB+vozhI+/707ChwHoUYj6R7HqMpum6rQGt6RYatYNY6jEskTn925/ZkoQrLuCrb9jlmOZi&#xA;biwyREhRebyflLrsd80EN6klo9PTv5VU3UIXpxkpyYj9k9V7Zshr48PLfudedHLi8noHlTylpPlr&#xA;Tza2Ef7yU87q5aplmf8Amdjv9HTNdnzyyGy5+LCICgnDyJGvJyFUdzlQBPJsJA5vm3U9TvtTvpb2&#xA;9lMtxKasx6AdgB2A7DOpx4xAUOTzc5mRs82rHU9RsJPUsrmW2eteUTslfnQ74Z44y5i1jOUeRp73&#xA;5N1qTWfLlnfTEG4ZSlwRt+8jJUmg6cqcvpzm9Ti4MhA5O+0+TjgD1TrKG92KpX5le6XSJfq/qjm0&#xA;aTvbq0kywvIqytGqBmLCMmnEEjqAcsxVxbsMl0xSG1vtL0R7rUAY9Iil5CFo5HuBBzVYmcvK3A7c&#xA;m+DYdlbM3j45cI+pwzDgjxHknttq1tf2yzWUqPbN9kxmo/2XevzyHhcJ35p8XiG3JifmXVfJthbH&#xA;Q1061vNS1QtJY2UMXOSS5ZuIkb6v+9Wh3L7UA65bGMieKyK+74sbFVQNsos/JMX6DsrPU7l7vU7N&#xA;W4aqheOdWZifgkDGQUBC/a+ID4q5iS1HqJiKB6OSMPpAPPvUP8MeZ5ZjDca0PqBBUtDAkN0y/wCV&#xA;OrFQT3McSHwKnJHPGth+Px5sRhN80/0rRNN0uD0bKBYlqXYgbs7fadid2Zu7Hc9zlEpmXNvjABHZ&#xA;BksmmjhTk5oO3iclGJPJjKQHNLLi/llqq/AngOp+eZMMQDjTykojSv7uT5j9WV5+YbMHJiX5u6nf&#xA;Wmh29vbSmKO8kaO447FkC1418D3zK7NxiUyT0cftCZEQB1eOZvHTMz/LvzZqlr5gtLK4u5JLC6b0&#xA;GhkYsqswohXlXj8VBtmDrdPEwJA3Dm6TPITAJ2L2vNA7t2KuxV2KuxVJtf8AKWja3CUu4R6gPJJV&#xA;2YMOjAihB9wQcuxZ5Q5NOTBGTHRP5x8p0E3PXtGXbcj65GP8ljRZR7NRvc5k8OPLy9MvsaOKePnu&#xA;GSaLrvl/XFF7YyRyzwgxvyXjPFU7o6sA6V49DmNkxThsXIhkjLcIPX/POlaXKbKBW1HViKpYW1GY&#xA;V6GRj8Ma79WPyrksWmlLc7RY5NRGO3MobQrLzRqOoxarrsgt4IeTWumQEiNWbZWkJAaUqp70Wu4H&#xA;fJ5ZQiOGPzY4xOR4pcmWZiOShbm/SIlE+KQdfAZbDES1TygJZLNJK3J2qe3gMyYxA5ONKRPN8+5v&#xA;3SuxV67+TL3R0a+R1ItluA0LnoWKAOB8qLml7TA4x307fs4nhPdb0LNY7F2KuxVp0R0KOAysKMD0&#xA;IxBUhhOt/llDPPJcaHfy6NLcI0VysIDROj7N+6b4A1Psmm3gczsetIFSHE4c9ILuOyaeVPIPl/y0&#xA;jPZwmS+l3udQnYy3MreMkrfEfl09sx8ueU+fJvx4hFkeUtrsVdirsVQuoQGSHkv2k3p4jvluKVFq&#xA;yxsJTmU4qZaV/dyfMfqzHz8w5GDkwj86P+OZp3/Gd/8AiGZvZf1H3OL2j9IeS5uXUKtq06XMLW9T&#xA;OrqYQoqeYPw0HzwSqt+SY3ez6ZjLFFLDixALDwOcmXpw3irsVdirsVdirmVWBVgCDsQdxirFtc/L&#xA;rQNUuVuvS9C5GxkjLxsR4co2Rqe1aZlY9XKIrm409LEmxsj/AC/5R0TQ4BHZ26hq1L03LeO9TX3J&#xA;JyGXUSnzZ48EYJ1lDc7FUnvoDFOT+y/xKf1jMzHKw4eSNFD5Ngl3/Kp/KH++5/8Akaf6YP5Ry+TP&#xA;8hjd/wAqn8of77n/AORp/pj/ACjl8l/IY2VWNjaWNpFaWkSw28K8Y416Af59TmHOZkbPNyoxERQ5&#xA;K+RZOxV2KuxV2KuxV2KuxV2KuxV2KoY6dbEk0Ir2By3xZNXhRVYLeOEEJWh3NchKZPNnGAHJLvMH&#xA;ljStfhih1BXZIWLpwbjuRTLMOeWM3FhlwxyCikf/ACqfyh/vuf8A5Gn+mZH8o5fJo/IY0dovkDy1&#xA;o96t7awM1wgIjaVi/GvdQe/vleXWZJiidmePSQgbA3ZHmK5LsVdirsVdirsVdirsVdirsVdiqyaC&#xA;OZeLioBqMlGRHJjKIPNQ/Rtt4H78n40mHgxRWVNrsVdirsVdirsVdirsVdirsVdirsVdirsVdirs&#xA;VdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVSX65c/78OZvhx7nC8SXe765c/78OPhx7l8S&#xA;XerWs9zLOi+oSK1b5DITjEDkzhKRPNNMxXKdirsVdirsVdirsVdirsVdirsVdirsVQmoyyRohRip&#xA;JNaZdhiCd2nLIgbID65c/wC/Dl/hx7mjxJd7vrlz/vw4+HHuXxJd6Y2DStCXkYtyPw18BmNloGg5&#xA;OKyLKJytsdirsVdirsVdiqyaaGCJpZnWOJBVnYgAD3JwgE7BBIHNSs9QtLxOdu5ZevxKyGnjRwpp&#xA;kpwMebGMxLkiMgzdirsVdirH8z3AdiqZaZCVVpSN22X5Zj5pdHIwx6o7KG92KuxV2KpNrWs3ECXM&#xA;Gmol1qMEfMWfqKjtUVA+L7NfHMjFiBoy5OPlykbDm8f0r88fMum61LZ+ZtMMLbtJaIrLcRKDSqo5&#xA;Prrx+KsZO1T9lSc2M9JCQ9LiRzzid3sXl7zVouv2Ed9ptws0Eporr05DqN++a3LglA7ubjzCSb5Q&#xA;3NO6opZyFVRVmOwAGICkvPvO35v6PoaQR6eF1KS4LVlt5YyqIoHxBgJBWpoAR45sNPoZT3ls4WbV&#xA;iOw3RPk/8wY9ZOn09SS3v/VhMsvD1IrqEBzE4jREoyfEp7+AwajScIJ6j7lw6myAev3s5zAc12Ko&#xA;HVf7uP5n9WX4OZaM/JLcyHHXIjO4RRVjsMSaUC09jQIioOiimYJNlzgKDeBLsVdirsVdirsVeIfn&#xA;H+YWrw6rP5esjNY/VXhk+tRSmMuDHyIHEBurDfl26ZutDpo8Ikd7dXq854uEbUl3k7zdrFw1vq8z&#xA;yzX+kskd5L8TGewkJBMniYyhBbvVe4y7LhjRh0ly97RDKQRLqOfue66Xq2naraLd6fOtxbsSvNai&#xA;hHUMDQqfYjNFkxygakKLuIZIzFg2EXkGbsVdiqXDSn5byDj403zI8fycfwPNExWNvHvx5N4tv+GV&#xA;yyktkcQCIytsdirsVdirsVeY+e5JE126aOd4GX0WV0ToyoDtJQlXp+GbjSC8Y+LqtSf3hSW/1fR9&#xA;XsRa+atJTVooEM0VxxVWVgRtyBr8XivhvXLPBIPoNNYzbeoJBoP5g6trnmLRrPS4I9H8s2+o2sIt&#xA;rUqiswnT92xHFnrU7KoX2NCccmGMYm/VKj9zZCZJHQWH0JPcQW8Lz3EiQwxiryyMFVR4ljQDNIAT&#xA;ydoTSS+brK41ryjqFtpcwaW7t2+rSIw4vUVADA0o3jl2nkIZAZNWeJlAgPm7y35Va+81Q6DqvrWE&#xA;rlg68Pjqil6fERSoU0bfOhyZahxDd00YXKiyjRL+Hyz5ik8sGUoBfibT9UQpJ6cjx+lH6sZVlZfi&#xA;+KhFDlGSPHHi8tw2QPCa8+b3bQr+e809XuTEbuJmiuvQYtGJU2YKTv8AMdjtmjzQEZbcnb4pmUd+&#xA;aYZU2KF5bGdAA3Eqa75ZjnwlryQ4goRaWo3levsu2Tln7mEcHei44YohRFC+/f78qMiebaIgcl+R&#xA;ZOxV2KuxV2KuxV2KsI/MP8sdO81qLxJDa6tChWOZQCsijcI4JH0GuZul1hx7H6XF1GmE9xzeQ+b9&#xA;YuxaaLcW8L2+oabGLeTVbchEYqPhWihShNCeDqpG+xBzb4oDcHkejrJy5EdGb+TvzBtbaOC8W3gX&#xA;Tpkji1VLZeEkF0x3lkUj4kajFeO1NuopmJn0pntfqHK+ob8OoEDdek8/e9eBBAINQehzTO2dirsV&#xA;dirsVdirsVdirsVdiry78wDIms3rIG3WBXb1OK8WAFCoBYjc8SP2ts3Gj+gfF1Oq+ssOuoZPQeYx&#xA;kxrBIpmLdGYqePEDjvQ98zY83FPJifkQSHzVoL3j8XW/tUtbJOLBY/XSjsVNE7nj18R3yGe+CVcq&#xA;P3N+KuIXubD6qmAbihFQTVh4gD+tM5+Lt5JK+gmCVrrQ5/0ZdSkyS2rLztJmPUvDVeLHu8ZVvGvT&#xA;LvEvaXqHf1auCt47eXRhPnSG51TVreHV7BbWV1gtrVWP7s3ElxQzW96gDDihHwsFP+SwGZumIjE0&#xA;b5n4VypxM4MpbiuX397z3U/y48xxWcXmPSI572zlYzD1FrdoyORydN+fxLWo69aZnR1MOLgPP7HF&#xA;OGVcQ5PUvyyfXZ5oby8haAXVk0mpR8DGhuvXZY5OGyrJJEOTUHetNxmu1vCI0Oh291ObpeLivpW/&#xA;vt6Jmtc92KuxV2KuxV2KuxV2KuxV2KuxVg/nTzF5mby/PdeUreHUrlCVMQkoV7EhTTkw68Wp8jmw&#xA;w4YRl63ByZZSHpeQeXfPulrqPPzNa1W3YxXw9P0nWMH01S7tq/Zq6VO617ls2U4Ex9J/Hk4Udpbh&#xA;6Von5beSr5pdS0e7mi07VIFU28bBoyvqpKDGzCo3jpQ9MwcmryQ2I3DlQ08J8jsXpccaRxrGgoiA&#xA;Ko8ABQZrCbdgBS7Al2KuxV2KvKbiz/OwzSJBLKqNPbtHK0liQEV7j1+gBCMHiIFC1B17HOBw/i/J&#xA;xiMivoem/nE8eprq128YleFrHi9rzRDdhpFBUMAVtiwavelK4Jyw7UPv7v1piMm9pdJpv58Gw4w3&#xA;Ui3YW05mV7LiWCRi5EfEmn7wSGrE1FKAdpcWC/n3sayUioLT88E+ui5lMrSJGsDQNZhVaoMrR86M&#xA;AVVlHKu5HapAJw7V+lNZE38lWH5oprMcvma8ZrJfrTTRg2zI7ViFsF9JVYLR5T4/CK+9eaWKvSN9&#xA;mWMTvdA+fre5TWp50VIywhaGZ+QclVAb0zVVPSnGte+ZujI4AHB1QPGSw6+uo5LK4RqGaWJpOS1C&#xA;kLsagALyq+305mxG4cSXIsM/LwRr5s0ZYVa4l/SNsZ790oE/fx1hRhyC9aU5b+AyOp+k2eh2+DkY&#xA;eYodQ+rWNHZv5F2+nr+oZz45O2PND2taMGFY22Pff6Msn9rXD7F93aRXFu9vcQpdWsi8ZIZAGqPf&#xA;lsfpyEZUbGxZyjtXMJP+jNW0WHloz/W9PjX/AI5F0xqiqD8NvOeTLTaiOGXag45bxRmfVtLv/W18&#xA;JgNtx3Jro+qW2raVaalahlt7uJZY0kHF1DCvF13oy9CPHKZxMSQW2MrFozIsnYq7FWI/mZ5Y1TzF&#xA;o1na6fHDO8F2J5be4lkgjdfq80SkvEC/7uWVJBTf4diDTL9PkECSe5qywMhswPVfyp87Xd5bTxi1&#xA;C2kcSLWduTLBLcymIfu9lmaeJvYpv2zKjqYAdfxTTLDIory3+UvmCzh8wQ6klnLFqmmG1ijDmRWu&#xA;Pq9ukZcNGBSKSBirdd6gZHJqomqvY/rTHCRd9Qg5/wAnNejlnW1srAwyNfrAPU9EQ/WDB6EqCKNT&#xA;VI4njoSdmp9moyQ1cepPRHgFRb8lvOP16a5N1b3EDyO0trLIQLhDqMl3STjGEBkhcxv8PH4jtTD+&#xA;bhVfjlSPAlf471W1/KXz2ljplnJNbGaynEzXv1iTkGf6lzlUeny5BLKWOtakSeHLAdVCye/9v6/s&#xA;SMMqH47mQfl7+WmqaJr1vquoxW8IgtJoFtraZ5I1lablG4V1UchHJItRTr0yrPqBKNDvZ4sRBsvT&#xA;cw3IeKzX95Z3KXFretFLEZBxCBNjyI5Ej44xx5AMR4d86DgBFEOjEiDsVmv6/wCTrqI6p5i8vxXu&#xA;oacR6M3FFWT4Sw5cq/CCKENyFdwuVxwTG0Ts2ePHqN0k0X8zvMOo+Y9O1a7ja18twtKbe1tgPTkK&#xA;IQEKg+o5HWr0XaooMMtPHhMRvLvSMsgRI8nrflb8wLbW55bY200E8ahyrKCCjUoQ6FlruPhJB8K0&#xA;zAz6IwF25WHV8RpliOkihkNVPf5bZhEU5oLeBXYq7FWITm4mvvRF1KkjOyxhZLpUHxUQDinEdKE+&#xA;GZQoDl9zjnc/2or9B69zI9ZSj1Dlrq4J4lt9uNPsnI+JH8AMuCX4Lv0J5gKS1uAjuwKgXU9KCuwP&#xA;GqjpsPfHxI/gBeCX4KIsdBvSsq39zJSQUBguZiTua15UptTIyyDoPsSIHqj7PSIrWVZEuLiQqCOM&#xA;krMprXqD88hKd9AzEKSe+sx5huJIXYWqWzANbSgmWQI9VZ4zRVjLCqkV5Dw6ZkQn4Qvnbjzh4h7q&#xA;Yh5m8m3FtZXCW0FHkFIwPiU7UosjEcR7Nmdg1QJ3cLNpyEl8ofl5pvlWG31/zVdQ2NnZOtwkPP0k&#xA;9VTzjdmNHkbnuK7dhUYM2fjuMBZLZix8NSlyZ75d/Mzyf5lmlt7C+9OYyFY4pwI3fiBuEY8uJrUV&#xA;ofbMOemnCjTlDNGWzLBCFKslGFa79d/A5jcXe3cPcqF6RlyKUFaHI1uyvZKtV1htP0PUb5xzaztp&#xA;Z1H8xRCQNu9dsuGO5D3tXiekonQtO/RmiWGnk8mtLeKFm/mZECsx9yRXKpy4pEtkRQAR2RZOxV2K&#xA;pZ5h9QWSNG5jKyKxKtIrcVBJAMQLdPoyzFzYZOSSafa6pegyQ3RKKKFWuLtd2235IvL4a/Tl0pRH&#xA;T7A1RBP4KIOha7xQicB1+Ha6uK05cvtEb/LwyPiR/ADLgl+C3caJ5gcoFuFEaihAubhOgAGyinbE&#xA;ZIfgBTCX4KYDQUeOH1rq5EqLRuE70qTU0r2r+GQ8TyDLgW3mq6boUdra3VyVNyzrby3MmzNyB4GR&#xA;u/x0UfRhhjOSyOiJzEKDEtV84edINd+r2+lcrdX4xxkvymXf94rqDFGBts9T/DPx6bEYXbgz1GQS&#xA;qmZ2GsQXNybJmUXiJ6ksSkEoBQUan2T8XTNfkxVuOTnY8l7Hm8g1SSWqIRKVJkceoBxFK0MZBDFS&#xA;W+yvfN5F0xY35pBXSNQZ0lKF4/tnmrARN+xU0+7fLoc2BSqwvdQ0i90a6a4tor+3i9SOzlRhFD9Y&#xA;AkSOQALwHBijLxXiTtsOWVAcQIr0t8jw1v6mXXvnHVri4i0+JrbTbeUEnT9KVZpZyy1b1JE9VUQ/&#xA;9dKRvkRgA3Ny96PFPIUPc9m8qBR5b00KEVRbpRYm5oBTorVbl86mvjmkz/Wfe7fD9ATXKmx2KuxV&#xA;5rJ+aGq/4gm0029rZQRyyR+tdc6qIwac/iUVbj+ObUaCPAJWT7nWHWy4+GgPejI/P9+zMDe6StAz&#xA;ciz0PEqKbSdTz2+RyB0Y7psxqj3xUNJ/MrVbrzRFo7W9tcQPOYTcW3OhUV/eKSWHEdflksmhiMfF&#xA;ZBrqjHrJHJw0D7nouat2KX6hqUsN1FYwIouLgExzTnjCKbUHeR+/BfpIy2ELFnkGuc6NDml+tabq&#xA;y2ZuYpV1C4gBkEU3G2IpufQniCtET0+MsPHvlmKcbrkPn8x1a8kJVfP7PkVDRbvzHHbuNUuEldzW&#xA;NeCiSIEfYZ0oj06V4jx9hbkxYyfSGmGWdbvI/wA1vyz826pfvrVrfTa1ChLjTpWCyQjlXjCi8I3U&#xA;DsOLn+YnM3BljEVVNOSJO7yWXULZikXom1v4JODugIZXG/Hx2YfZIpy6VAzMIaA9Y/Lv89JdLgi0&#xA;zzM0k0QNI9UFZNiCaSp9qi0PxKTsNwMwc+jEtw5OPOYvb9G8z+X9djb9HX0N1xC+osUiuRzAZfsn&#xA;aoO2ayeGUObmxyxkhvNKBrXT9MQ1Oo39vEVPeOJvrMy/IwwOMOM7mXcP2LMch5p/lDa7FXYq7FUh&#xA;86+YrrQNEN/bWwuZPUWMhq8EDV+N6b02p8zmTpcIyT4SacfU5jjjYFsVsPzM1K5083csunWziRY/&#xA;q0hf1KOwXkB6g+EVqczJ6GIlXqLix1siL9IVL78xtRttOku0udLuHUqFtY2kMjVIB259q5GGiiZV&#xA;UgmWskBdxZD5F8z3nmLSpbu6thbvHKYwUrwcAA1HKp2rQ5javAMUqBtyNLnOSNkMjzFcl51+dLL+&#xA;hrJHaLg8rD0bkH0JDQUVnBHpv/K1RTf4gM2PZ31FwddyDzuLzDrllo6abDqN5aIaItkoE94AxoqR&#xA;S9QjfsMvHboG77HwYk2QD9zg+LICrZv+UHGK8uYSPQkMAJtmf1ZKVWjSy9z+yFGwodlqRmD2hyDm&#xA;aLmUjvi8MyyGCsL+qHeVuamp5fAAKqzFd/irWmZsd3CKR+b5C/l6RI3LSRMF9J6cUZgzAcu4Nfoy&#xA;3Hza5dGN6NpE1/5qtdOs7hLjVri0tgfUAa3VUtUYgROPiDMo+JlFK9MgZ8MeKXLf72/hs1H8bPT9&#xA;A/LDVpLlZtTVbHT1KiWztA/KWg39R2JlIqPhAO2xFDmJm1saqO5bcWll1FB6pp1otrCsEKejaRqE&#xA;ggJ5FQPft95zVTle55uygK9yLyDN2KuxVY8EDtyeNWbxKgnDZRQW/VbX/fKf8CP6Y8RXhC5IYUNU&#xA;jVT0qoA/ViSVAC/AlJPMplEDfWUd9GCVvBboJJuvcN0jA6lBy+VMyMFXt9XTuaM11v8ASjLS60vV&#xA;9KVrYi60+5jKCqmjRkcSGEgB9qHK5RlCW+xDOMoyjtuGLz6b5i0Le0ZtX0xOttMx+sRr/wAVzNUt&#xA;/qyVH+WozLjkjLn6T9jiyhKPmPtRWmaxp+pBxbSH14gDPayDhPFXpzjO9PBhVT2JyUokc2IIPJJv&#xA;OH5deWPNUROoW/pXwXjHqMFEnUUpQtQh1oacWBGTx5ZR5IlEF4r5o/KbzN5fM8gZL3SURnS7RXJH&#xA;HZUeJRIUJ+RToPhGZkM8Ze9pMCEr8q6B5wF0NS09ptEtkIb9J3XOGL94eQWOlXmZgK+nHyL9/DJZ&#xA;Jx5HdYxPN9O+V0n1WO01PUPWaSxBjtTMFjLuYwslyYlrwLAsFUnYE1APTTZjw7Dq7DDvuyfMZvdi&#xA;rsVdirmVWBDAEHqD0xVS+q2v++U/4Ef0w8RRwh31W1/3yn/Aj+mPEV4QqKqqoVQFUdANhgS3iqX6&#xA;ro1rqNvNBcxpPDOnCSKZQ608VqDQ13yyGQxOzXPHxPPZfysRXFlb6lLaaTyPK0BYS0Y1KqalireA&#xA;r8/DYjW7WRZcA6XfnszfQvL9joumLY2NmqWwIYqSBKxApyJ8RTarV98wcmUzlZO7m48fCKASPzB5&#xA;VhvXkkRC5YluUalZUNCvxjbl8JpX7RHfMnDqK2Li5cF8mKR6D5We9fTNSkibUpwJbezdzClyV5Ii&#xA;+pxr12K9fCozMOaVWOXe40cUbo80boEPmW31aJr7TbO2sbE15mNIEtVUcV9CQFuS8eob71yGUYzH&#xA;Ymz9rPGZ8W45PRdF1q01a3lntW5xwytCZACFZlALcagbAtT5jNVlxmBp2WOfELTDK2x2Kvn7X/Oe&#xA;uaxqLXbXElvGDSC3idlWNe3SlW8WzpcOlhCNVbz+XUSmbukRpv5jebrDiFvjcRr/ALruQJa/Nj8f&#xA;/DZGeixS6V7mUNZkj1t7R5d1hNY0W01JF4fWEq6A1CupKutfZgc0ObFwTMe53WHJxxEu9McqbHYq&#xA;7FUv1q/uLC3S6SB7i3R/9LSIVlEZBHJBUV4tSo606ZZjiJGurXklQtQ/S51DSxdeXngu2VgGjdih&#xA;AA+JKU+CQbfC49jTJcHDKpo47jcVDR9eluCba+iZL6Kplh48ZUWtFYp1II/bSqnsTkp4wNxyYwyE&#xA;7Ebtaz5U0vVQlyoMN2lWt72AmOVCe6slCK96de9ccecx26InhEtwkkl5r2isE1eFr+yrRNRtUBlA&#xA;/wCLYUAD+5iAP/FffMmJjL6dj3fj8ebRIGP1fNYPMGoanILfy9YySOft3t9DLBDH8oZBFNI3z4L/&#xA;AJZIpiQBvI0oN8t0z0LyFZWcqXmoub6/QFUkcKFjDdViRAqRqe6xqoPep3zHyagnaOwb4YOsmUfu&#xA;407Iij5ADMfm37BA3OpdVh/4M/wGXww97RPN3L9MZmWRmNSSKk/LI5hyZYTzY9+ZXmW/0TRoxY0S&#xA;4vHMQn7xqFqSv+V4Htl+hwDJPfkGnWZjCO3V5Ba+ZPMFrL6tvqNwjk1Y+qxB/wBYEkH6c3csECKI&#xA;DqI5pg2CWe+RPzH1i91mDS9WdJ47mqRT8Qjq4BK140UhqU6dc12r0MYwMo9HP0uslKXDLq9QzUO0&#xA;dirsVdirsVdirsVaYclI3FRSo2OKvFfzjjjXXLS25wSI1sKW06CON29RgStwCAkwBFa8QRStembr&#xA;QH0E+f4+DqdWKlXkxSa41C6tra3uWv7uC3b/AHj1CZo7eCh+H1G5fG1Nkoqk9gemZYiBuKHucbiJ&#xA;2Nl7T+WIceXXJqVNw3psBxiKiNF/cj/fYpQe4Oy/ZGl1v1/B22k+hlE91FCPiPxdlHXMeMCW6UwE&#xA;suLyWbb7Kfyj+OZMMYDjTyEvnjOhdG7FXr/5OX7y6Jd2bVpazhkP+TKtafepP05pO04VMHvDuOzp&#xA;XEjuL0DNa7B2KuxV2KpHqflS1nuTf6fK+m6oB/vVBQc6VosiGquN+jA0+eXwzkCpbxaZYRdx2KBu&#xA;NbNi9uvmbT2kltzzt9RtYHnj9QbVVEEksbMD4EU6nJjFxfQfgwOSvrHxXnzDrGsn0vL1q0NvWkmp&#xA;3sbxqPERwNxkZv8AWpT/ACsfCjD6z8AnxZS+gfFPLDT1tdPS0kdrmgJllloTI7sXdmAAX4mYmgFB&#xA;2yiU7N8m6MaFIiKCGFeMUaxqdyEAUfhkSSeaQAOS/AlB6mjtCGX7KmrD+OXYSLacwNJXmS4yZaV/&#xA;dyfMfqzHz8w5GDkwj86P+OZp3/Gd/wDiGZvZf1H3OL2j9IeS5uXUK9heS2V9b3kX95byJKnzRgw/&#xA;VkZx4gQerKMuEg9z6XjcOiuKgMAQD133zlCHpg3irsVdirsVdirsVdiqUa15csNU046feQLc2XUQ&#xA;P1U0IqjeO/f78ux5jE2ObTPEJCujDrH8p/L0FxGZpZbuO2LfVLKarhORr9g027VJI98zJa6RHd5u&#xA;LHSRB5vRbdPTgjTiE4Kq8AahaClK96Zrid3PA2Sm8R0uH5b1NQfY5l4yCHEyAgqGTYPAM3zpnYq9&#xA;7/L/APw//h2H9C/3f/Hzzp6vrUHL1Kd/DtTpnOazj8T1u/0nBwelkmYrkuxV2KuxV2KrZPS4H1eP&#xA;DvypT8cIQa6uj9PgPTpw/Z40pT2piVC7Al2KuxVpuPE8vs0+KvSmEIKRPx5Hj9mvw160zODglMNK&#xA;/u5PmP1Zj5+YcjByYR+dH/HM07/jO/8AxDM3sv6j7nF7R+kPJc3LqGQ+Rf8AD/8AiGD9N/3H+6eV&#xA;PS9Wo4+r/k/x67Zjavj4Dwc3I0vBxjie/Zzb0DsVdirsVdirsVdirsVdirsVdiqC1T0/TWv95X4f&#xA;l3y/DdtGaqSzMhx3/9k=</xmpGImg:image>
               </rdf:li>
            </rdf:Alt>
         </xmp:Thumbnails>
         <xmpMM:InstanceID>xmp.iid:861d56df-ca2b-3c4c-8810-43399265d1b0</xmpMM:InstanceID>
         <xmpMM:DocumentID>xmp.did:861d56df-ca2b-3c4c-8810-43399265d1b0</xmpMM:DocumentID>
         <xmpMM:OriginalDocumentID>uuid:5D20892493BFDB11914A8590D31508C8</xmpMM:OriginalDocumentID>
         <xmpMM:RenditionClass>proof:pdf</xmpMM:RenditionClass>
         <xmpMM:DerivedFrom rdf:parseType="Resource">
            <stRef:instanceID>xmp.iid:ae228281-1399-6047-9867-083266b8da91</stRef:instanceID>
            <stRef:documentID>xmp.did:ae228281-1399-6047-9867-083266b8da91</stRef:documentID>
            <stRef:originalDocumentID>uuid:5D20892493BFDB11914A8590D31508C8</stRef:originalDocumentID>
            <stRef:renditionClass>proof:pdf</stRef:renditionClass>
         </xmpMM:DerivedFrom>
         <xmpMM:History>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:1fc469ec-54d7-6444-9087-891d1f765b63</stEvt:instanceID>
                  <stEvt:when>2016-07-05T10:25:28+10:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 2015 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:65093837-8c70-274d-a0b6-73be46bbcfe1</stEvt:instanceID>
                  <stEvt:when>2018-07-04T15:37:19+10:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 2015 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:254258aa-7d0d-c94e-83d9-a2bc49954f99</stEvt:instanceID>
                  <stEvt:when>2018-09-27T09:50:25+10:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 2017 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:861d56df-ca2b-3c4c-8810-43399265d1b0</stEvt:instanceID>
                  <stEvt:when>2018-12-18T13:00:34+10:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 2017 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
            </rdf:Seq>
         </xmpMM:History>
         <illustrator:StartupProfile>Print</illustrator:StartupProfile>
         <xmpTPg:HasVisibleOverprint>False</xmpTPg:HasVisibleOverprint>
         <xmpTPg:HasVisibleTransparency>True</xmpTPg:HasVisibleTransparency>
         <xmpTPg:NPages>1</xmpTPg:NPages>
         <xmpTPg:MaxPageSize rdf:parseType="Resource">
            <stDim:w>600.000000</stDim:w>
            <stDim:h>400.000000</stDim:h>
            <stDim:unit>Points</stDim:unit>
         </xmpTPg:MaxPageSize>
         <xmpTPg:PlateNames>
            <rdf:Seq>
               <rdf:li>Cyan</rdf:li>
               <rdf:li>Magenta</rdf:li>
               <rdf:li>Yellow</rdf:li>
               <rdf:li>Black</rdf:li>
            </rdf:Seq>
         </xmpTPg:PlateNames>
         <xmpTPg:SwatchGroups>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Р“СЂСѓРїРїР° РѕР±СЂР°Р·С†РѕРІ РїРѕ СѓРјРѕР»С‡Р°РЅРёСЋ</xmpG:groupName>
                  <xmpG:groupType>0</xmpG:groupType>
                  <xmpG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>Р‘РµР»С‹Р№</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>255</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>Р§РµСЂРЅС‹Р№</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>35</xmpG:red>
                           <xmpG:green>31</xmpG:green>
                           <xmpG:blue>32</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=0 M=0 Y=0 K=100</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>35</xmpG:red>
                           <xmpG:green>31</xmpG:green>
                           <xmpG:blue>32</xmpG:blue>
                        </rdf:li>
                     </rdf:Seq>
                  </xmpG:Colorants>
               </rdf:li>
            </rdf:Seq>
         </xmpTPg:SwatchGroups>
         <pdf:Producer>Adobe PDF library 15.00</pdf:Producer>
         <pdfx:CreatorVersion>21.0.0</pdfx:CreatorVersion>
      </rdf:Description>
   </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                           
<?xpacket end="w"?>%  &&end XMP packet marker&&[{ai_metadata_stream_123}<</Type /Metadata /Subtype /XML>>/PUT AI11_PDFMark5[/Document1 dict begin /Metadata {ai_metadata_stream_123} defcurrentdict end /BDC AI11_PDFMark5
%ADOEndClientInjection: PageSetup End "AI11EPS"
%%EndPageSetup
1 -1 scale 0 -400 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 400 li
600 400 li
600 0 li
cp
clp
289.708 238.774 mo
289.596 238.774 289.482 238.745 289.378 238.684 cv
279.722 232.971 li
279.092 232.598 278.722 231.938 278.731 231.206 cv
278.74 230.475 279.128 229.825 279.767 229.469 cv
350.208 190.188 li
352.507 188.906 353.935 186.476 353.935 183.844 cv
353.935 146.24 li
353.935 145.607 354.262 145.04 354.81 144.724 cv
355.358 144.408 356.011 144.408 356.56 144.724 cv
363.215 148.567 li
363.525 148.746 363.632 149.144 363.452 149.454 cv
363.273 149.765 362.878 149.872 362.564 149.692 cv
355.909 145.849 li
355.709 145.732 355.527 145.81 355.459 145.849 cv
355.392 145.888 355.233 146.004 355.233 146.24 cv
355.233 183.844 li
355.233 186.946 353.55 189.812 350.841 191.323 cv
280.399 230.604 li
280.071 230.786 280.031 231.098 280.03 231.224 cv
280.028 231.349 280.06 231.661 280.384 231.854 cv
290.04 237.566 li
290.349 237.749 290.45 238.147 290.268 238.456 cv
290.146 238.661 289.931 238.774 289.708 238.774 cv
cp
false sop
/0 
[/DeviceCMYK] /CSA add_res
.657221 .328313 0 0 cmyk
f
284.437 238.125 mo
287.104 233.474 li
297.141 239.229 li
294.474 243.88 li
284.437 238.125 li
cp
f
283.878 236.899 mo
283.874 235.69 284.719 234.218 285.764 233.61 cv
286.809 233.003 287.659 233.49 287.663 234.699 cv
287.666 235.908 286.822 237.381 285.776 237.988 cv
284.731 238.596 283.882 238.108 283.878 236.899 cv
cp
f
291.893 244.317 mo
296.215 236.78 li
311.956 245.808 li
307.634 253.344 li
291.893 244.317 li
cp
f
295.489 238.282 mo
292.093 236.334 li
290.687 237.342 289.585 239.263 289.426 240.985 cv
292.822 242.934 li
294.229 241.926 295.33 240.004 295.489 238.282 cv
cp
.827268 .57586 .071809 .00112917 cmyk
f
290.987 242.331 mo
290.981 240.373 292.35 237.986 294.043 237.002 cv
295.736 236.018 297.114 236.808 297.12 238.767 cv
297.126 240.726 295.758 243.111 294.064 244.096 cv
292.37 245.08 290.993 244.29 290.987 242.331 cv
cp
.657221 .328313 0 0 cmyk
f
287.044 235.657 mo
286.552 235.375 286.551 234.915 287.041 234.631 cv
287.531 234.346 288.327 234.343 288.819 234.625 cv
289.312 234.907 289.313 235.367 288.822 235.652 cv
288.332 235.938 287.536 235.939 287.044 235.657 cv
cp
.147219 .0154116 0 0 cmyk
f
360.653 150.92 mo
363.32 146.269 li
373.356 152.024 li
370.689 156.675 li
360.653 150.92 li
cp
.657221 .328313 0 0 cmyk
f
360.094 149.694 mo
360.091 148.485 360.935 147.013 361.979 146.405 cv
363.025 145.798 363.875 146.286 363.879 147.494 cv
363.883 148.703 363.038 150.176 361.993 150.783 cv
360.947 151.391 360.098 150.903 360.094 149.694 cv
cp
f
368.108 157.112 mo
372.431 149.576 li
388.172 158.603 li
383.851 166.139 li
368.108 157.112 li
cp
f
371.706 151.077 mo
368.309 149.129 li
366.903 150.137 365.801 152.058 365.642 153.781 cv
369.038 155.729 li
370.444 154.721 371.546 152.799 371.706 151.077 cv
cp
.827268 .57586 .071809 .00112917 cmyk
f
367.203 155.126 mo
367.197 153.168 368.565 150.782 370.259 149.797 cv
371.953 148.813 373.33 149.603 373.336 151.562 cv
373.342 153.521 371.974 155.906 370.28 156.891 cv
368.587 157.875 367.209 157.085 367.203 155.126 cv
cp
.657221 .328313 0 0 cmyk
f
363.26 148.453 mo
362.768 148.17 362.767 147.71 363.257 147.426 cv
363.747 147.141 364.544 147.138 365.035 147.42 cv
365.527 147.703 365.529 148.162 365.038 148.447 cv
364.548 148.732 363.752 148.735 363.26 148.453 cv
cp
.147219 .0154116 0 0 cmyk
f
402.109 172.492 mo
401.885 172.492 401.666 172.376 401.546 172.167 cv
401.366 171.857 401.473 171.459 401.783 171.28 cv
426.062 157.263 li
428.104 156.083 429.374 153.886 429.374 151.527 cv
429.374 114.909 li
429.374 114.188 429.747 113.542 430.372 113.182 cv
430.997 112.821 431.742 112.823 432.367 113.184 cv
471.604 135.927 li
471.604 105.363 li
471.604 105.004 471.895 104.713 472.253 104.713 cv
472.611 104.713 472.902 105.004 472.902 105.363 cv
472.902 137.054 li
472.902 137.286 472.778 137.5 472.577 137.617 cv
472.376 137.732 472.13 137.732 471.927 137.616 cv
431.715 114.308 li
431.402 114.127 431.125 114.248 431.021 114.307 cv
430.916 114.368 430.673 114.547 430.673 114.909 cv
430.673 151.527 li
430.673 154.348 429.155 156.977 426.712 158.388 cv
402.434 172.405 li
402.331 172.464 402.219 172.492 402.109 172.492 cv
cp
.657221 .328313 0 0 cmyk
f
450.675 199.786 mo
450.45 199.786 450.231 199.669 450.111 199.461 cv
449.932 199.15 450.038 198.753 450.349 198.574 cv
480.545 181.14 li
482.588 179.96 483.857 177.762 483.857 175.404 cv
483.857 112.337 li
483.857 111.978 484.148 111.688 484.507 111.688 cv
484.865 111.688 485.156 111.978 485.156 112.337 cv
485.156 175.404 li
485.156 178.225 483.639 180.854 481.195 182.265 cv
450.999 199.699 li
450.896 199.758 450.784 199.786 450.675 199.786 cv
cp
f
504.818 230.104 mo
504.577 230.104 504.342 229.979 504.213 229.755 cv
504.021 229.422 504.135 228.994 504.469 228.802 cv
531.849 212.993 li
533.884 211.818 535.144 209.629 535.136 207.279 cv
535.046 177.839 li
535.039 175.502 533.776 173.326 531.751 172.16 cv
496.412 151.808 li
496.196 151.684 496.063 151.453 496.063 151.203 cv
496.063 119.311 li
496.063 118.925 496.375 118.613 496.761 118.613 cv
497.146 118.613 497.459 118.925 497.459 119.311 cv
497.459 150.8 li
532.448 170.95 li
534.903 172.364 536.434 175.002 536.442 177.835 cv
536.532 207.275 li
536.54 210.124 535.014 212.778 532.546 214.202 cv
505.166 230.011 li
505.057 230.074 504.937 230.104 504.818 230.104 cv
cp
f
499.441 128.939 mo
494.08 128.939 li
494.08 117.37 li
499.441 117.37 li
499.441 128.939 li
cp
f
498.656 130.034 mo
497.609 130.638 495.912 130.638 494.865 130.034 cv
493.818 129.429 493.818 128.449 494.865 127.845 cv
495.912 127.241 497.609 127.241 498.656 127.845 cv
499.703 128.449 499.703 129.429 498.656 130.034 cv
cp
f
501.104 119.391 mo
492.417 119.391 li
492.417 101.245 li
501.104 101.245 li
501.104 119.391 li
cp
f
494.08 119.273 mo
494.08 123.188 li
495.653 123.907 497.868 123.907 499.441 123.188 cv
499.441 119.273 li
497.868 118.554 495.653 118.554 494.08 119.273 cv
cp
.827268 .57586 .071809 .00112917 cmyk
f
499.832 121.165 mo
498.136 122.144 495.386 122.144 493.688 121.165 cv
491.992 120.185 491.992 118.597 493.688 117.618 cv
495.386 116.638 498.136 116.638 499.832 117.618 cv
501.528 118.597 501.528 120.185 499.832 121.165 cv
cp
.657221 .328313 0 0 cmyk
f
487.188 121.965 mo
481.826 121.965 li
481.826 110.396 li
487.188 110.396 li
487.188 121.965 li
cp
f
486.402 123.06 mo
485.355 123.665 483.658 123.665 482.611 123.06 cv
481.564 122.456 481.564 121.476 482.611 120.871 cv
483.658 120.267 485.355 120.267 486.402 120.871 cv
487.449 121.476 487.449 122.456 486.402 123.06 cv
cp
f
488.851 112.417 mo
480.163 112.417 li
480.163 94.271 li
488.851 94.271 li
488.851 112.417 li
cp
f
481.826 112.299 mo
481.826 116.214 li
483.399 116.933 485.614 116.934 487.188 116.215 cv
487.188 112.299 li
485.614 111.581 483.399 111.581 481.826 112.299 cv
cp
.827268 .57586 .071809 .00112917 cmyk
f
487.578 114.19 mo
485.882 115.17 483.132 115.17 481.436 114.19 cv
479.738 113.211 479.738 111.623 481.435 110.644 cv
483.132 109.664 485.882 109.664 487.578 110.644 cv
489.274 111.623 489.274 113.211 487.578 114.19 cv
cp
.657221 .328313 0 0 cmyk
f
474.934 114.992 mo
469.572 114.992 li
469.572 103.422 li
474.934 103.422 li
474.934 114.992 li
cp
f
474.148 116.086 mo
473.102 116.69 471.404 116.69 470.357 116.086 cv
469.311 115.482 469.311 114.502 470.357 113.897 cv
471.404 113.293 473.102 113.293 474.148 113.897 cv
475.195 114.502 475.195 115.482 474.148 116.086 cv
cp
f
476.597 105.443 mo
467.909 105.443 li
467.909 87.2974 li
476.597 87.2974 li
476.597 105.443 li
cp
f
469.572 105.325 mo
469.572 109.241 li
471.146 109.959 473.36 109.959 474.934 109.241 cv
474.934 105.325 li
473.36 104.607 471.146 104.607 469.572 105.325 cv
cp
.827268 .57586 .071809 .00112917 cmyk
f
475.324 107.217 mo
473.628 108.196 470.878 108.196 469.182 107.217 cv
467.484 106.237 467.484 104.649 469.182 103.67 cv
470.878 102.69 473.628 102.69 475.324 103.67 cv
477.021 104.649 477.021 106.237 475.324 107.217 cv
cp
.657221 .328313 0 0 cmyk
f
529.813 133.421 mo
541.461 126.56 li
530.367 112.714 li
527.45 117.479 li
529.813 133.421 li
cp
f
445.229 57.4282 mo
463.821 46.7324 li
463.122 57.4282 li
452.441 60.7368 li
445.229 57.4282 li
cp
f
533.05 98.603 mo
531.635 97.7861 530.284 97.3096 529.027 97.1123 cv
527.153 87.2612 520.298 76.7993 512.125 72.0806 cv
509.666 70.6611 507.328 69.9028 505.208 69.7397 cv
504.092 57.7993 495.79 44.2295 485.708 38.4087 cv
480.441 35.3682 475.663 35.0088 472.138 36.8706 cv
472.138 36.8613 li
471.967 36.96 li
471.699 37.1138 li
460.736 43.5889 li
464.379 46.4658 li
461.109 47.895 459.042 51.5625 459.042 56.9834 cv
459.042 66.9805 466.061 79.1367 474.719 84.1353 cv
533.05 125.788 li
539.551 129.542 544.821 126.499 544.821 118.992 cv
544.821 111.485 539.551 102.356 533.05 98.603 cv
cp
f
459.584 52.5815 mo
484.745 37.8804 li
479.86 35.333 475.447 35.1226 472.138 36.8706 cv
472.138 36.8613 li
471.967 36.96 li
471.699 37.1138 li
460.736 43.5889 li
464.379 46.4658 li
462.094 47.4648 460.398 49.5605 459.584 52.5815 cv
cp
f
506.051 95.8301 mo
524.41 85.0562 li
521.261 79.6099 516.925 74.8521 512.125 72.0806 cv
511.489 71.7139 510.862 71.3931 510.245 71.1133 cv
486.894 84.7695 li
506.051 95.8301 li
cp
f
465.909 44.7915 mo
474.091 49.5151 li
489.074 40.6899 li
487.98 39.8398 486.856 39.0718 485.708 38.4087 cv
483.894 37.3613 482.14 36.6392 480.472 36.2095 cv
465.909 44.7915 li
cp
.147219 .0154116 0 0 cmyk
f
522.385 81.8862 mo
507.732 90.5205 li
512.829 96.2046 li
526.13 88.3506 li
525.078 86.0977 523.814 83.9194 522.385 81.8862 cv
cp
f
521.54 105.383 mo
520.125 104.566 518.774 104.089 517.518 103.892 cv
515.644 94.041 508.788 83.5791 500.615 78.8604 cv
498.156 77.4409 495.818 76.6826 493.698 76.5195 cv
492.582 64.5791 484.28 51.0093 474.198 45.1885 cv
463.355 38.9287 454.566 44.0029 454.566 56.5225 cv
454.566 56.9473 454.578 57.3755 454.599 57.8062 cv
446.67 54.1289 440.475 58.272 440.475 67.6636 cv
440.475 77.6606 447.493 89.8169 456.151 94.8154 cv
521.54 132.568 li
528.041 136.321 533.312 133.279 533.312 125.771 cv
533.312 118.265 528.041 109.137 521.54 105.383 cv
cp
f
454.599 57.8062 mo
454.578 57.3755 454.566 56.9473 454.566 56.5225 cv
454.567 56.4697 li
450.188 54.7666 446.423 55.5078 444.061 58.2407 cv
446.627 56.1284 450.359 55.8398 454.599 57.8062 cv
cp
0 0 0 0 cmyk
f
522.497 104.45 mo
521.082 103.633 519.731 103.156 518.475 102.959 cv
516.601 93.1079 509.746 82.6465 501.572 77.9277 cv
499.114 76.5083 496.776 75.75 494.655 75.5869 cv
493.54 63.6465 485.237 50.0767 475.155 44.2559 cv
468.4 40.356 462.443 40.8564 458.911 44.8149 cv
462.51 41.7397 468.02 41.6211 474.198 45.189 cv
484.28 51.0093 492.582 64.5796 493.698 76.5195 cv
495.818 76.6826 498.156 77.4414 500.615 78.8604 cv
508.788 83.5796 515.644 94.041 517.518 103.893 cv
518.774 104.089 520.125 104.566 521.54 105.383 cv
528.041 109.137 533.312 118.265 533.312 125.772 cv
533.312 128.481 532.617 130.598 531.435 132.034 cv
533.198 130.676 534.27 128.213 534.27 124.839 cv
534.27 117.332 528.999 108.204 522.497 104.45 cv
cp
f
453.216 60.7876 mo
458.131 63.0669 li
457.881 57.6548 li
457.863 57.2749 457.853 56.8975 457.853 56.5225 cv
457.853 51.6914 459.312 48.1885 461.959 46.6592 cv
464.607 45.1313 468.371 45.6196 472.555 48.0347 cv
481.553 53.23 489.403 65.876 490.426 76.8252 cv
490.684 79.584 li
493.446 79.7964 li
495.145 79.9268 497.003 80.5693 498.972 81.7065 cv
506.119 85.833 512.561 95.4219 514.289 104.506 cv
514.722 106.78 li
517.009 107.139 li
517.919 107.282 518.892 107.648 519.897 108.229 cv
525.387 111.399 530.025 119.433 530.025 125.771 cv
530.025 128.144 529.367 129.884 528.221 130.547 cv
527.074 131.208 525.238 130.908 523.184 129.722 cv
457.795 91.9697 li
450.188 87.5781 443.762 76.4473 443.762 67.6636 cv
443.762 64.2168 444.778 61.5913 446.551 60.459 cv
447.279 59.9937 448.162 59.7617 449.156 59.7617 cv
450.367 59.7617 451.744 60.1045 453.216 60.7876 cv
cp
.827268 .57586 .071809 .00112917 cmyk
f
485.851 101.769 mo
487.575 100.903 li
485.877 99.6167 li
485.851 101.769 li
cp
.657221 .328313 0 0 cmyk
f
480.67 78.4678 mo
482.345 77.6211 li
482.375 78.498 li
480.67 78.4678 li
cp
f
490.771 96.3223 mo
492.519 95.4434 li
489.155 92.2446 li
490.771 96.3223 li
cp
f
487.07 100.848 mo
478.904 96.0381 li
478.489 95.7939 478.154 95.1792 478.156 94.665 cv
478.183 85.21 li
487.851 90.9043 li
487.824 100.359 li
487.822 100.873 487.485 101.092 487.07 100.848 cv
cp
f
482.327 77.6318 mo
473.506 83.3071 li
473.132 83.5483 473.435 84.4463 474.003 84.7808 cv
483.011 90.0864 li
492.02 95.3921 li
492.588 95.7266 492.895 95.1875 492.522 94.5073 cv
483.764 78.478 li
483.386 77.7856 482.708 77.3867 482.327 77.6318 cv
cp
f
485.319 101.729 mo
477.153 96.9199 li
476.738 96.6758 476.403 96.061 476.405 95.5469 cv
476.432 86.0918 li
486.1 91.7861 li
486.072 101.241 li
486.071 101.755 485.733 101.974 485.319 101.729 cv
cp
.147219 .0154116 0 0 cmyk
f
480.575 78.5137 mo
471.755 84.1895 li
471.381 84.4302 471.684 85.3281 472.252 85.6626 cv
481.26 90.9683 li
490.269 96.2739 li
490.837 96.6084 491.144 96.0693 490.771 95.3892 cv
482.013 79.3599 li
481.634 78.6675 480.956 78.2686 480.575 78.5137 cv
cp
f
471.496 113.958 mo
471.496 114.524 471.099 114.754 470.607 114.471 cv
470.116 114.188 469.718 113.498 469.718 112.931 cv
469.718 112.363 470.116 112.134 470.607 112.417 cv
471.099 112.701 471.496 113.39 471.496 113.958 cv
cp
f
87.501 173.604 mo
86.4629 173.604 85.5459 173.473 84.75 173.211 cv
83.9541 172.948 83.2969 172.585 82.7773 172.119 cv
82.2588 171.653 81.8359 171.076 81.5117 170.387 cv
81.1865 169.698 80.958 168.958 80.8271 168.167 cv
80.6963 167.376 80.6309 166.485 80.6309 165.496 cv
80.6309 157.083 li
80.6309 156.034 80.6982 155.105 80.834 154.295 cv
80.9707 153.485 81.1982 152.733 81.5186 152.039 cv
81.8389 151.346 82.2588 150.775 82.7773 150.329 cv
83.2969 149.883 83.9521 149.533 84.7432 149.28 cv
85.5332 149.028 86.4531 148.902 87.501 148.902 cv
88.7041 148.902 89.7324 149.063 90.5869 149.383 cv
91.4404 149.703 92.1152 150.174 92.6104 150.795 cv
93.1055 151.416 93.4639 152.141 93.6875 152.971 cv
93.9102 153.801 94.0225 154.769 94.0225 155.875 cv
94.0225 157.941 li
89.7861 157.941 li
89.7861 155.889 li
89.7861 154.686 89.7227 153.876 89.5967 153.458 cv
89.3447 152.644 88.7285 152.206 87.748 152.148 cv
87.5156 152.148 li
87.1465 152.148 86.8242 152.192 86.5479 152.279 cv
86.2715 152.366 86.0459 152.505 85.8711 152.694 cv
85.6963 152.884 85.5557 153.085 85.4482 153.298 cv
85.3418 153.512 85.2617 153.791 85.209 154.135 cv
85.1553 154.479 85.1211 154.798 85.1064 155.089 cv
85.0918 155.38 85.085 155.749 85.085 156.194 cv
85.085 166.413 li
85.085 167.83 85.2617 168.839 85.6162 169.44 cv
85.9697 170.042 86.6035 170.343 87.5156 170.343 cv
87.8262 170.343 88.1006 170.307 88.3379 170.234 cv
88.5762 170.161 88.7744 170.069 88.9346 169.957 cv
89.0947 169.846 89.2305 169.686 89.3428 169.477 cv
89.4541 169.269 89.5391 169.074 89.5967 168.895 cv
89.6553 168.716 89.6992 168.466 89.7285 168.146 cv
89.7568 167.825 89.7744 167.554 89.7793 167.33 cv
89.7842 167.106 89.7861 166.801 89.7861 166.413 cv
89.7861 164.259 li
94.0225 164.259 li
94.0225 166.238 li
94.0225 167.141 93.959 167.951 93.833 168.669 cv
93.707 169.388 93.4912 170.062 93.1855 170.692 cv
92.8799 171.323 92.4844 171.848 91.999 172.265 cv
91.5137 172.682 90.8926 173.01 90.1357 173.247 cv
89.3789 173.484 88.5 173.604 87.501 173.604 cv
cp
1 .866484 .240818 .0951247 cmyk
f
97.0645 173.313 mo
97.0645 149.179 li
101.461 149.179 li
101.461 170.271 li
107.239 170.271 li
107.239 173.313 li
97.0645 173.313 li
cp
f
114.771 170.154 mo
115.077 170.28 115.443 170.343 115.871 170.343 cv
116.298 170.343 116.661 170.28 116.962 170.154 cv
117.263 170.028 117.503 169.862 117.683 169.659 cv
117.862 169.455 118.003 169.188 118.104 168.858 cv
118.207 168.528 118.274 168.198 118.309 167.868 cv
118.343 167.539 118.359 167.146 118.359 166.689 cv
118.359 155.729 li
118.359 155.146 118.33 154.662 118.272 154.273 cv
118.214 153.886 118.1 153.519 117.931 153.175 cv
117.761 152.83 117.506 152.573 117.166 152.403 cv
116.826 152.233 116.395 152.148 115.871 152.148 cv
115.347 152.148 114.912 152.233 114.567 152.403 cv
114.224 152.573 113.969 152.83 113.804 153.175 cv
113.639 153.519 113.527 153.886 113.469 154.273 cv
113.411 154.662 113.382 155.146 113.382 155.729 cv
113.382 166.689 li
113.382 167.146 113.398 167.539 113.433 167.868 cv
113.467 168.198 113.534 168.528 113.637 168.858 cv
113.738 169.188 113.876 169.455 114.051 169.659 cv
114.226 169.862 114.466 170.028 114.771 170.154 cv
cp
115.871 173.604 mo
113.387 173.604 111.605 172.93 110.528 171.58 cv
109.451 170.231 108.913 168.257 108.913 165.656 cv
108.913 156.748 li
108.913 155.467 109.034 154.355 109.276 153.415 cv
109.52 152.474 109.91 151.658 110.448 150.969 cv
110.987 150.28 111.708 149.764 112.61 149.419 cv
113.513 149.074 114.6 148.902 115.871 148.902 cv
118.345 148.902 120.123 149.567 121.205 150.896 cv
122.287 152.226 122.828 154.177 122.828 156.748 cv
122.828 165.656 li
122.828 166.918 122.705 168.026 122.457 168.982 cv
122.21 169.938 121.816 170.768 121.278 171.471 cv
120.739 172.175 120.019 172.706 119.116 173.065 cv
118.214 173.424 117.132 173.604 115.871 173.604 cv
cp
f
132.653 173.604 mo
131.576 173.604 130.643 173.478 129.852 173.226 cv
129.061 172.973 128.41 172.619 127.901 172.162 cv
127.392 171.707 126.984 171.122 126.679 170.408 cv
126.373 169.695 126.159 168.924 126.038 168.094 cv
125.916 167.265 125.855 166.302 125.855 165.205 cv
125.855 149.179 li
130.121 149.179 li
130.121 165.656 li
130.121 166.219 130.136 166.699 130.164 167.097 cv
130.193 167.495 130.257 167.912 130.354 168.349 cv
130.45 168.785 130.589 169.135 130.769 169.396 cv
130.948 169.659 131.195 169.877 131.511 170.052 cv
131.826 170.227 132.207 170.314 132.653 170.314 cv
133.1 170.314 133.48 170.227 133.796 170.052 cv
134.111 169.877 134.354 169.659 134.524 169.396 cv
134.693 169.135 134.83 168.785 134.932 168.349 cv
135.033 167.912 135.097 167.497 135.121 167.104 cv
135.145 166.711 135.157 166.229 135.157 165.656 cv
135.157 149.179 li
139.422 149.179 li
139.422 165.205 li
139.422 166.302 139.361 167.265 139.24 168.094 cv
139.118 168.924 138.905 169.695 138.6 170.408 cv
138.294 171.122 137.889 171.707 137.384 172.162 cv
136.88 172.619 136.231 172.973 135.441 173.226 cv
134.65 173.478 133.721 173.604 132.653 173.604 cv
cp
f
147.238 170.227 mo
148.489 170.227 li
148.927 170.227 149.31 170.188 149.64 170.11 cv
149.97 170.032 150.246 169.94 150.47 169.834 cv
150.692 169.727 150.879 169.553 151.029 169.31 cv
151.18 169.067 151.294 168.844 151.372 168.64 cv
151.449 168.437 151.508 168.128 151.547 167.716 cv
151.585 167.304 151.609 166.951 151.619 166.66 cv
151.629 166.369 151.634 165.938 151.634 165.365 cv
151.634 156.544 li
151.634 155.972 151.624 155.511 151.604 155.161 cv
151.585 154.812 151.539 154.46 151.467 154.106 cv
151.394 153.752 151.287 153.478 151.146 153.283 cv
151.006 153.09 150.818 152.912 150.586 152.752 cv
150.353 152.592 150.062 152.48 149.713 152.418 cv
149.363 152.354 148.941 152.323 148.446 152.323 cv
147.238 152.323 li
147.238 170.227 li
cp
142.842 173.313 mo
142.842 149.179 li
148.461 149.179 li
149.916 149.179 151.134 149.324 152.114 149.615 cv
153.094 149.906 153.88 150.367 154.473 150.998 cv
155.064 151.629 155.483 152.403 155.731 153.32 cv
155.979 154.237 156.103 155.365 156.103 156.704 cv
156.103 165.408 li
156.103 166.787 155.977 167.956 155.724 168.917 cv
155.472 169.877 155.057 170.692 154.479 171.362 cv
153.902 172.031 153.133 172.524 152.173 172.84 cv
151.212 173.155 150.032 173.313 148.636 173.313 cv
142.842 173.313 li
cp
f
168.971 173.313 mo
168.971 152.425 li
164.924 152.425 li
164.924 149.179 li
177.282 149.179 li
177.282 152.425 li
173.366 152.425 li
173.366 173.313 li
168.971 173.313 li
cp
f
179.203 173.313 mo
179.203 149.179 li
189.305 149.179 li
189.305 152.279 li
183.6 152.279 li
183.6 159.208 li
188.111 159.208 li
188.111 162.309 li
183.6 162.309 li
183.6 170.271 li
189.378 170.271 li
189.378 173.313 li
179.203 173.313 li
cp
f
198.388 173.604 mo
197.35 173.604 196.433 173.473 195.637 173.211 cv
194.841 172.948 194.184 172.585 193.664 172.119 cv
193.146 171.653 192.723 171.076 192.398 170.387 cv
192.073 169.698 191.845 168.958 191.714 168.167 cv
191.583 167.376 191.518 166.485 191.518 165.496 cv
191.518 157.083 li
191.518 156.034 191.585 155.105 191.721 154.295 cv
191.857 153.485 192.085 152.733 192.405 152.039 cv
192.726 151.346 193.146 150.775 193.664 150.329 cv
194.184 149.883 194.839 149.533 195.63 149.28 cv
196.42 149.028 197.34 148.902 198.388 148.902 cv
199.591 148.902 200.619 149.063 201.474 149.383 cv
202.327 149.703 203.002 150.174 203.497 150.795 cv
203.992 151.416 204.351 152.141 204.574 152.971 cv
204.797 153.801 204.909 154.769 204.909 155.875 cv
204.909 157.941 li
200.673 157.941 li
200.673 155.889 li
200.673 154.686 200.609 153.876 200.483 153.458 cv
200.231 152.644 199.615 152.206 198.635 152.148 cv
198.402 152.148 li
198.033 152.148 197.711 152.192 197.435 152.279 cv
197.158 152.366 196.933 152.505 196.758 152.694 cv
196.583 152.884 196.442 153.085 196.335 153.298 cv
196.229 153.512 196.148 153.791 196.096 154.135 cv
196.042 154.479 196.008 154.798 195.993 155.089 cv
195.979 155.38 195.972 155.749 195.972 156.194 cv
195.972 166.413 li
195.972 167.83 196.148 168.839 196.503 169.44 cv
196.856 170.042 197.49 170.343 198.402 170.343 cv
198.713 170.343 198.987 170.307 199.225 170.234 cv
199.463 170.161 199.661 170.069 199.821 169.957 cv
199.981 169.846 200.117 169.686 200.229 169.477 cv
200.341 169.269 200.426 169.074 200.483 168.895 cv
200.542 168.716 200.586 168.466 200.615 168.146 cv
200.644 167.825 200.661 167.554 200.666 167.33 cv
200.671 167.106 200.673 166.801 200.673 166.413 cv
200.673 164.259 li
204.909 164.259 li
204.909 166.238 li
204.909 167.141 204.846 167.951 204.72 168.669 cv
204.594 169.388 204.378 170.062 204.072 170.692 cv
203.767 171.323 203.371 171.848 202.886 172.265 cv
202.4 172.682 201.779 173.01 201.022 173.247 cv
200.266 173.484 199.387 173.604 198.388 173.604 cv
cp
f
207.995 173.313 mo
207.995 149.179 li
212.391 149.179 li
212.391 159.266 li
217.296 159.266 li
217.296 149.179 li
221.692 149.179 li
221.692 173.313 li
217.296 173.313 li
217.296 162.396 li
212.391 162.396 li
212.391 173.313 li
207.995 173.313 li
cp
f
225.345 173.313 mo
225.345 149.179 li
228.373 149.179 li
234.282 162.847 li
234.282 149.179 li
237.921 149.179 li
237.921 173.313 li
235.039 173.313 li
229.071 158.946 li
229.071 173.313 li
225.345 173.313 li
cp
f
246.997 170.154 mo
247.303 170.28 247.669 170.343 248.097 170.343 cv
248.523 170.343 248.887 170.28 249.188 170.154 cv
249.488 170.028 249.729 169.862 249.908 169.659 cv
250.088 169.455 250.229 169.188 250.33 168.858 cv
250.433 168.528 250.5 168.198 250.534 167.868 cv
250.568 167.539 250.585 167.146 250.585 166.689 cv
250.585 155.729 li
250.585 155.146 250.556 154.662 250.498 154.273 cv
250.439 153.886 250.325 153.519 250.156 153.175 cv
249.986 152.83 249.731 152.573 249.392 152.403 cv
249.052 152.233 248.62 152.148 248.097 152.148 cv
247.572 152.148 247.138 152.233 246.793 152.403 cv
246.449 152.573 246.194 152.83 246.029 153.175 cv
245.864 153.519 245.753 153.886 245.694 154.273 cv
245.637 154.662 245.607 155.146 245.607 155.729 cv
245.607 166.689 li
245.607 167.146 245.624 167.539 245.658 167.868 cv
245.692 168.198 245.76 168.528 245.862 168.858 cv
245.964 169.188 246.102 169.455 246.276 169.659 cv
246.451 169.862 246.691 170.028 246.997 170.154 cv
cp
248.097 173.604 mo
245.612 173.604 243.831 172.93 242.754 171.58 cv
241.677 170.231 241.139 168.257 241.139 165.656 cv
241.139 156.748 li
241.139 155.467 241.26 154.355 241.502 153.415 cv
241.745 152.474 242.136 151.658 242.674 150.969 cv
243.213 150.28 243.934 149.764 244.836 149.419 cv
245.738 149.074 246.825 148.902 248.097 148.902 cv
250.57 148.902 252.349 149.567 253.431 150.896 cv
254.513 152.226 255.054 154.177 255.054 156.748 cv
255.054 165.656 li
255.054 166.918 254.931 168.026 254.683 168.982 cv
254.436 169.938 254.042 170.768 253.504 171.471 cv
252.965 172.175 252.244 172.706 251.342 173.065 cv
250.439 173.424 249.357 173.604 248.097 173.604 cv
cp
f
258.271 173.313 mo
258.271 149.179 li
262.667 149.179 li
262.667 170.271 li
268.445 170.271 li
268.445 173.313 li
258.271 173.313 li
cp
f
275.978 170.154 mo
276.283 170.28 276.649 170.343 277.077 170.343 cv
277.504 170.343 277.867 170.28 278.168 170.154 cv
278.469 170.028 278.709 169.862 278.889 169.659 cv
279.068 169.455 279.209 169.188 279.311 168.858 cv
279.413 168.528 279.48 168.198 279.515 167.868 cv
279.549 167.539 279.565 167.146 279.565 166.689 cv
279.565 155.729 li
279.565 155.146 279.536 154.662 279.479 154.273 cv
279.42 153.886 279.306 153.519 279.137 153.175 cv
278.967 152.83 278.712 152.573 278.372 152.403 cv
278.032 152.233 277.601 152.148 277.077 152.148 cv
276.553 152.148 276.118 152.233 275.773 152.403 cv
275.43 152.573 275.175 152.83 275.01 153.175 cv
274.845 153.519 274.733 153.886 274.675 154.273 cv
274.617 154.662 274.588 155.146 274.588 155.729 cv
274.588 166.689 li
274.588 167.146 274.604 167.539 274.639 167.868 cv
274.673 168.198 274.74 168.528 274.843 168.858 cv
274.944 169.188 275.082 169.455 275.257 169.659 cv
275.432 169.862 275.672 170.028 275.978 170.154 cv
cp
277.077 173.604 mo
274.593 173.604 272.812 172.93 271.734 171.58 cv
270.657 170.231 270.119 168.257 270.119 165.656 cv
270.119 156.748 li
270.119 155.467 270.24 154.355 270.482 153.415 cv
270.726 152.474 271.116 151.658 271.654 150.969 cv
272.193 150.28 272.914 149.764 273.816 149.419 cv
274.719 149.074 275.806 148.902 277.077 148.902 cv
279.551 148.902 281.329 149.567 282.411 150.896 cv
283.493 152.226 284.034 154.177 284.034 156.748 cv
284.034 165.656 li
284.034 166.918 283.911 168.026 283.663 168.982 cv
283.416 169.938 283.022 170.768 282.484 171.471 cv
281.945 172.175 281.225 172.706 280.322 173.065 cv
279.42 173.424 278.338 173.604 277.077 173.604 cv
cp
f
293.292 173.633 mo
291.012 173.633 289.369 172.92 288.364 171.493 cv
287.36 170.066 286.858 167.99 286.858 165.263 cv
286.858 157.403 li
286.858 156.016 286.968 154.819 287.186 153.814 cv
287.404 152.811 287.771 151.93 288.285 151.173 cv
288.799 150.416 289.508 149.849 290.41 149.47 cv
291.313 149.092 292.419 148.902 293.729 148.902 cv
296.116 148.902 297.828 149.487 298.867 150.656 cv
299.905 151.826 300.424 153.599 300.424 155.977 cv
300.424 157.155 li
296.218 157.155 li
296.218 155.903 li
296.218 155.37 296.205 154.934 296.182 154.594 cv
296.157 154.254 296.099 153.912 296.007 153.567 cv
295.914 153.223 295.781 152.959 295.606 152.774 cv
295.432 152.59 295.193 152.439 294.893 152.323 cv
294.592 152.206 294.224 152.148 293.787 152.148 cv
293.457 152.148 293.163 152.189 292.906 152.271 cv
292.649 152.354 292.434 152.456 292.259 152.578 cv
292.084 152.699 291.936 152.871 291.814 153.095 cv
291.693 153.317 291.601 153.533 291.538 153.742 cv
291.475 153.951 291.426 154.22 291.393 154.55 cv
291.358 154.88 291.336 155.171 291.327 155.423 cv
291.317 155.676 291.313 156.001 291.313 156.398 cv
291.313 166.137 li
291.313 167.592 291.492 168.657 291.851 169.331 cv
292.21 170.006 292.894 170.343 293.903 170.343 cv
294.428 170.343 294.866 170.244 295.221 170.045 cv
295.574 169.846 295.852 169.545 296.05 169.143 cv
296.249 168.739 296.39 168.278 296.473 167.76 cv
296.555 167.24 296.596 166.612 296.596 165.874 cv
296.596 163.895 li
293.99 163.895 li
293.99 161.057 li
300.556 161.057 li
300.556 173.313 li
297.702 173.313 li
297.382 170.867 li
296.654 172.711 295.291 173.633 293.292 173.633 cv
cp
f
307.105 173.313 mo
307.105 164.128 li
302.186 149.179 li
306.29 149.179 li
309.274 158.786 li
312.127 149.179 li
316.188 149.179 li
311.298 164.128 li
311.298 173.313 li
307.105 173.313 li
cp
f
176.498 265.062 mo
92.6611 265.062 li
86.2002 265.062 80.9629 259.823 80.9629 253.363 cv
80.9629 246.902 86.2002 241.665 92.6611 241.665 cv
176.498 241.665 li
182.959 241.665 188.196 246.902 188.196 253.363 cv
188.196 259.823 182.959 265.062 176.498 265.062 cv
cp
.657221 .328313 0 0 cmyk
f
109.014 258.572 mo
109.014 250.026 li
107.358 250.026 li
107.358 248.698 li
112.414 248.698 li
112.414 250.026 li
110.813 250.026 li
110.813 258.572 li
109.014 258.572 li
cp
0 0 0 0 cmyk
f
114.999 252.915 mo
115.434 252.915 li
115.966 252.915 116.344 252.802 116.568 252.575 cv
116.792 252.349 116.904 251.962 116.904 251.414 cv
116.904 250.886 116.808 250.508 116.613 250.279 cv
116.418 250.051 116.061 249.937 115.541 249.937 cv
114.999 249.937 li
114.999 252.915 li
cp
113.2 258.572 mo
113.2 248.698 li
115.464 248.698 li
115.983 248.698 116.43 248.741 116.804 248.826 cv
117.177 248.912 117.501 249.055 117.777 249.255 cv
118.053 249.456 118.26 249.728 118.396 250.071 cv
118.533 250.414 118.602 250.834 118.602 251.33 cv
118.602 251.95 118.51 252.456 118.325 252.85 cv
118.141 253.242 117.836 253.528 117.411 253.707 cv
118.78 258.572 li
116.977 258.572 li
115.797 254.064 li
114.999 254.064 li
114.999 258.572 li
113.2 258.572 li
cp
f
121.335 258.572 mo
121.335 254.814 li
119.322 248.698 li
121.002 248.698 li
122.223 252.629 li
123.39 248.698 li
125.051 248.698 li
123.05 254.814 li
123.05 258.572 li
121.335 258.572 li
cp
f
128.94 258.572 mo
128.94 248.698 li
130.715 248.698 li
130.715 258.572 li
128.94 258.572 li
cp
f
133.198 258.572 mo
133.198 250.026 li
131.543 250.026 li
131.543 248.698 li
136.599 248.698 li
136.599 250.026 li
134.997 250.026 li
134.997 258.572 li
133.198 258.572 li
cp
f
140.362 258.572 mo
140.362 248.698 li
141.602 248.698 li
144.02 254.29 li
144.02 248.698 li
145.508 248.698 li
145.508 258.572 li
144.329 258.572 li
141.887 252.694 li
141.887 258.572 li
140.362 258.572 li
cp
f
149.222 257.28 mo
149.347 257.332 149.497 257.357 149.672 257.357 cv
149.846 257.357 149.995 257.332 150.118 257.28 cv
150.241 257.229 150.34 257.161 150.413 257.077 cv
150.486 256.994 150.544 256.885 150.586 256.75 cv
150.627 256.615 150.655 256.479 150.669 256.345 cv
150.683 256.21 150.689 256.049 150.689 255.862 cv
150.689 251.378 li
150.689 251.14 150.678 250.941 150.654 250.782 cv
150.63 250.624 150.584 250.474 150.514 250.333 cv
150.444 250.192 150.341 250.087 150.201 250.018 cv
150.063 249.948 149.886 249.913 149.672 249.913 cv
149.457 249.913 149.279 249.948 149.139 250.018 cv
148.997 250.087 148.894 250.192 148.826 250.333 cv
148.758 250.474 148.713 250.624 148.688 250.782 cv
148.665 250.941 148.653 251.14 148.653 251.378 cv
148.653 255.862 li
148.653 256.049 148.66 256.21 148.674 256.345 cv
148.688 256.479 148.716 256.615 148.757 256.75 cv
148.799 256.885 148.855 256.994 148.927 257.077 cv
148.998 257.161 149.097 257.229 149.222 257.28 cv
cp
149.672 258.691 mo
148.655 258.691 147.927 258.415 147.485 257.863 cv
147.045 257.312 146.825 256.504 146.825 255.439 cv
146.825 251.795 li
146.825 251.271 146.874 250.816 146.974 250.432 cv
147.073 250.046 147.232 249.713 147.453 249.431 cv
147.674 249.148 147.968 248.938 148.338 248.797 cv
148.707 248.655 149.151 248.585 149.672 248.585 cv
150.684 248.585 151.411 248.857 151.854 249.401 cv
152.297 249.945 152.519 250.743 152.519 251.795 cv
152.519 255.439 li
152.519 255.956 152.468 256.409 152.366 256.801 cv
152.265 257.191 152.104 257.531 151.884 257.819 cv
151.663 258.106 151.369 258.324 150.999 258.471 cv
150.63 258.618 150.188 258.691 149.672 258.691 cv
cp
f
154.906 258.572 mo
153.495 248.698 li
155.008 248.698 li
155.817 255.064 li
156.871 248.698 li
158.08 248.698 li
159.158 255.07 li
159.968 248.698 li
161.451 248.698 li
160.04 258.572 li
158.604 258.572 li
157.491 251.979 li
156.383 258.572 li
154.906 258.572 li
cp
f
116.668 198.175 mo
116.367 198.175 116.139 198.063 115.98 197.841 cv
115.821 197.618 115.742 197.304 115.742 196.895 cv
115.742 192.095 li
116.506 192.095 li
116.506 196.738 li
116.506 197.042 116.552 197.258 116.643 197.386 cv
116.733 197.514 116.877 197.578 117.072 197.578 cv
117.413 197.578 117.767 197.383 118.135 196.991 cv
118.135 192.095 li
118.894 192.095 li
118.894 198.084 li
118.135 198.084 li
118.135 197.421 li
117.689 197.924 117.2 198.175 116.668 198.175 cv
.472602 .264286 .0650339 0 cmyk
f
125.61 198.084 mo
124.892 198.084 li
124.892 193.38 li
124.892 193.053 124.841 192.825 124.74 192.697 cv
124.639 192.569 124.494 192.505 124.305 192.505 cv
123.924 192.512 123.548 192.719 123.177 193.127 cv
123.184 193.229 123.187 193.306 123.187 193.359 cv
123.187 198.084 li
122.479 198.084 li
122.479 193.38 li
122.479 193.053 122.427 192.825 122.322 192.697 cv
122.218 192.569 122.071 192.505 121.882 192.505 cv
121.501 192.512 121.129 192.719 120.765 193.127 cv
120.765 198.084 li
120.051 198.084 li
120.051 192.095 li
120.765 192.095 li
120.765 192.702 li
121.166 192.227 121.636 191.989 122.176 191.989 cv
122.675 191.989 122.988 192.252 123.116 192.778 cv
123.534 192.252 124.027 191.989 124.594 191.989 cv
124.891 191.989 125.134 192.096 125.324 192.31 cv
125.515 192.524 125.61 192.874 125.61 193.359 cv
125.61 198.084 li
f
130.173 198.18 mo
129.657 198.18 129.287 197.986 129.063 197.599 cv
128.838 197.211 128.727 196.566 128.727 195.666 cv
128.727 194.559 li
128.727 194.228 128.738 193.938 128.762 193.688 cv
128.785 193.439 128.829 193.205 128.893 192.985 cv
128.957 192.767 129.041 192.588 129.145 192.449 cv
129.25 192.31 129.386 192.202 129.551 192.123 cv
129.716 192.044 129.911 192.004 130.138 192.004 cv
130.532 192.008 130.884 192.181 131.194 192.525 cv
131.194 189.697 li
131.953 189.697 li
131.953 198.084 li
131.194 198.084 li
131.194 197.659 li
130.891 198.003 130.551 198.177 130.173 198.18 cv
130.305 192.601 mo
129.983 192.601 129.768 192.735 129.654 193.003 cv
129.541 193.271 129.484 193.709 129.484 194.315 cv
129.484 195.727 li
129.484 196.381 129.542 196.854 129.657 197.144 cv
129.772 197.434 129.994 197.578 130.324 197.578 cv
130.618 197.578 130.908 197.446 131.194 197.184 cv
131.194 193.025 li
130.891 192.742 130.594 192.601 130.305 192.601 cv
f
134.599 198.18 mo
134.292 198.18 134.034 198.131 133.825 198.033 cv
133.616 197.935 133.451 197.787 133.332 197.588 cv
133.212 197.39 133.127 197.156 133.076 196.888 cv
133.025 196.62 133.001 196.297 133.001 195.919 cv
133.001 194.26 li
133.001 193.498 133.118 192.932 133.354 192.561 cv
133.591 192.189 134.005 192.004 134.599 192.004 cv
135.195 192.004 135.611 192.189 135.846 192.558 cv
136.08 192.927 136.197 193.494 136.197 194.26 cv
136.197 195.919 li
136.197 196.297 136.172 196.62 136.121 196.888 cv
136.071 197.156 135.985 197.39 135.866 197.588 cv
135.746 197.787 135.582 197.935 135.373 198.033 cv
135.164 198.131 134.905 198.18 134.599 198.18 cv
134.599 192.57 mo
134.471 192.57 134.359 192.588 134.265 192.621 cv
134.171 192.655 134.093 192.71 134.032 192.785 cv
133.886 193.028 li
133.849 193.114 133.82 193.227 133.802 193.364 cv
133.783 193.503 133.771 193.634 133.767 193.757 cv
133.762 193.88 133.759 194.034 133.759 194.22 cv
133.759 195.96 li
133.759 196.145 133.762 196.3 133.767 196.423 cv
133.771 196.546 133.783 196.676 133.802 196.814 cv
133.82 196.953 133.849 197.064 133.886 197.15 cv
134.032 197.394 li
134.093 197.47 134.171 197.524 134.265 197.558 cv
134.359 197.592 134.471 197.608 134.599 197.608 cv
134.751 197.608 134.879 197.581 134.983 197.525 cv
135.088 197.47 135.17 197.399 135.229 197.315 cv
135.287 197.23 135.332 197.111 135.362 196.956 cv
135.393 196.801 135.412 196.652 135.421 196.511 cv
135.43 196.369 135.434 196.186 135.434 195.96 cv
135.434 194.22 li
135.434 193.994 135.43 193.81 135.421 193.668 cv
135.412 193.526 135.393 193.378 135.362 193.223 cv
135.332 193.068 135.287 192.948 135.229 192.864 cv
135.17 192.779 135.088 192.71 134.983 192.654 cv
134.879 192.599 134.751 192.57 134.599 192.57 cv
f
138.108 198.084 mo
137.345 198.084 li
137.345 189.697 li
138.108 189.697 li
138.108 198.084 li
f
140.819 198.18 mo
140.513 198.18 140.255 198.131 140.046 198.033 cv
139.837 197.935 139.672 197.787 139.553 197.588 cv
139.433 197.39 139.348 197.156 139.297 196.888 cv
139.246 196.62 139.222 196.297 139.222 195.919 cv
139.222 194.26 li
139.222 193.498 139.339 192.932 139.575 192.561 cv
139.812 192.189 140.226 192.004 140.819 192.004 cv
141.416 192.004 141.832 192.189 142.066 192.558 cv
142.301 192.927 142.418 193.494 142.418 194.26 cv
142.418 195.919 li
142.418 196.297 142.393 196.62 142.342 196.888 cv
142.292 197.156 142.206 197.39 142.087 197.588 cv
141.967 197.787 141.803 197.935 141.594 198.033 cv
141.385 198.131 141.126 198.18 140.819 198.18 cv
140.819 192.57 mo
140.691 192.57 140.58 192.588 140.485 192.621 cv
140.392 192.655 140.313 192.71 140.253 192.785 cv
140.106 193.028 li
140.069 193.114 140.041 193.227 140.022 193.364 cv
140.004 193.503 139.992 193.634 139.987 193.757 cv
139.982 193.88 139.98 194.034 139.98 194.22 cv
139.98 195.96 li
139.98 196.145 139.982 196.3 139.987 196.423 cv
139.992 196.546 140.004 196.676 140.022 196.814 cv
140.041 196.953 140.069 197.064 140.106 197.15 cv
140.253 197.394 li
140.313 197.47 140.392 197.524 140.485 197.558 cv
140.58 197.592 140.691 197.608 140.819 197.608 cv
140.972 197.608 141.1 197.581 141.204 197.525 cv
141.309 197.47 141.391 197.399 141.449 197.315 cv
141.508 197.23 141.553 197.111 141.583 196.956 cv
141.613 196.801 141.633 196.652 141.642 196.511 cv
141.65 196.369 141.654 196.186 141.654 195.96 cv
141.654 194.22 li
141.654 193.994 141.65 193.81 141.642 193.668 cv
141.633 193.526 141.613 193.378 141.583 193.223 cv
141.553 193.068 141.508 192.948 141.449 192.864 cv
141.391 192.779 141.309 192.71 141.204 192.654 cv
141.1 192.599 140.972 192.57 140.819 192.57 cv
f
144.279 198.084 mo
143.521 198.084 li
143.521 192.095 li
144.279 192.095 li
144.279 192.92 li
144.461 192.616 144.674 192.392 144.919 192.247 cv
145.163 192.102 145.41 192.029 145.66 192.029 cv
145.791 192.034 li
145.791 192.853 li
145.684 192.811 145.562 192.788 145.427 192.788 cv
144.941 192.788 144.559 193.021 144.279 193.486 cv
144.279 198.084 li
f
150.03 198.18 mo
149.555 198.18 149.175 198.026 148.89 197.72 cv
148.605 197.413 148.442 196.998 148.401 196.476 cv
149.039 196.283 li
149.079 196.738 149.184 197.073 149.353 197.287 cv
149.521 197.502 149.757 197.608 150.061 197.608 cv
150.324 197.608 150.531 197.531 150.683 197.376 cv
150.828 197.228 150.9 197.028 150.9 196.779 cv
150.9 196.743 li
150.891 196.346 150.647 195.948 150.172 195.55 cv
149.357 194.856 li
149.071 194.617 148.862 194.383 148.731 194.153 cv
148.603 193.932 148.538 193.672 148.538 193.375 cv
148.538 192.937 148.67 192.598 148.933 192.358 cv
149.189 192.122 149.535 192.004 149.97 192.004 cv
150.411 192.004 150.751 192.146 150.989 192.429 cv
151.227 192.712 151.359 193.095 151.386 193.577 cv
150.85 193.754 li
150.826 193.353 150.744 193.056 150.604 192.861 cv
150.465 192.668 150.263 192.57 150 192.57 cv
149.764 192.57 149.575 192.637 149.434 192.768 cv
149.295 192.896 149.227 193.068 149.227 193.284 cv
149.227 193.48 149.262 193.647 149.332 193.787 cv
149.403 193.927 149.533 194.078 149.722 194.24 cv
150.566 194.998 li
150.719 195.13 150.842 195.245 150.939 195.345 cv
151.034 195.444 151.137 195.567 151.244 195.714 cv
151.352 195.861 151.433 196.019 151.484 196.189 cv
151.537 196.36 151.564 196.543 151.568 196.738 cv
151.568 197.197 151.43 197.552 151.153 197.804 cv
150.877 198.055 150.503 198.18 150.03 198.18 cv
f
153.262 198.084 mo
152.504 198.084 li
152.504 192.095 li
153.262 192.095 li
153.262 198.084 li
153.268 191.27 mo
152.504 191.27 li
152.504 190.239 li
153.268 190.239 li
153.268 191.27 li
f
155.953 198.16 mo
155.545 198.16 155.264 198.048 155.108 197.823 cv
154.953 197.6 154.874 197.271 154.87 196.84 cv
154.87 192.601 li
154.147 192.601 li
154.147 192.095 li
154.87 192.095 li
154.87 190.244 li
155.629 190.244 li
155.629 192.095 li
156.626 192.095 li
156.626 192.601 li
155.629 192.601 li
155.629 196.769 li
155.629 197.072 155.665 197.28 155.735 197.394 cv
155.807 197.507 155.949 197.563 156.165 197.563 cv
156.304 197.563 156.445 197.55 156.591 197.522 cv
156.591 198.094 li
156.364 198.138 156.152 198.16 155.953 198.16 cv
f
160.581 198.18 mo
160.23 198.18 159.942 198.051 159.717 197.793 cv
159.49 197.535 159.378 197.216 159.378 196.835 cv
159.378 196.636 159.395 196.458 159.428 196.301 cv
159.462 196.145 159.525 195.997 159.618 195.858 cv
159.711 195.72 159.812 195.598 159.921 195.491 cv
160.031 195.386 160.187 195.273 160.389 195.152 cv
160.592 195.033 160.794 194.923 160.996 194.821 cv
161.198 194.721 161.463 194.598 161.79 194.452 cv
161.79 194.023 li
161.79 193.473 161.738 193.094 161.634 192.887 cv
161.529 192.68 161.333 192.575 161.047 192.575 cv
160.493 192.575 160.217 192.918 160.217 193.603 cv
160.217 193.82 li
159.469 193.795 li
159.469 193.697 159.47 193.636 159.474 193.612 cv
159.497 193.05 159.644 192.641 159.914 192.386 cv
160.184 192.132 160.574 192.004 161.087 192.004 cv
161.616 192.004 161.992 192.161 162.215 192.475 cv
162.438 192.788 162.549 193.291 162.549 193.982 cv
162.549 196.895 li
162.549 197.378 162.567 197.773 162.605 198.084 cv
161.932 198.084 li
161.82 197.255 li
161.729 197.518 161.575 197.737 161.357 197.914 cv
161.141 198.092 160.882 198.18 160.581 198.18 cv
161.79 194.953 mo
161.694 195.004 li
161.529 195.091 161.402 195.159 161.314 195.206 cv
161.227 195.253 161.122 195.312 160.999 195.383 cv
160.875 195.454 160.783 195.513 160.723 195.56 cv
160.513 195.732 li
160.341 195.922 li
160.232 196.127 li
160.156 196.372 li
160.143 196.458 160.136 196.553 160.136 196.657 cv
160.136 196.951 160.202 197.169 160.333 197.312 cv
160.465 197.456 160.63 197.527 160.829 197.527 cv
161.031 197.527 161.218 197.458 161.388 197.317 cv
161.559 197.178 161.692 197.012 161.79 196.819 cv
161.79 194.953 li
f
169.216 198.084 mo
168.497 198.084 li
168.497 193.38 li
168.497 193.053 168.446 192.825 168.346 192.697 cv
168.244 192.569 168.1 192.505 167.91 192.505 cv
167.529 192.512 167.153 192.719 166.782 193.127 cv
166.789 193.229 166.793 193.306 166.793 193.359 cv
166.793 198.084 li
166.085 198.084 li
166.085 193.38 li
166.085 193.053 166.032 192.825 165.928 192.697 cv
165.823 192.569 165.677 192.505 165.487 192.505 cv
165.106 192.512 164.734 192.719 164.37 193.127 cv
164.37 198.084 li
163.656 198.084 li
163.656 192.095 li
164.37 192.095 li
164.37 192.702 li
164.772 192.227 165.241 191.989 165.781 191.989 cv
166.28 191.989 166.594 192.252 166.722 192.778 cv
167.14 192.252 167.633 191.989 168.199 191.989 cv
168.496 191.989 168.739 192.096 168.93 192.31 cv
169.12 192.524 169.216 192.874 169.216 193.359 cv
169.216 198.084 li
f
171.836 198.18 mo
171.263 198.18 170.85 198.003 170.597 197.649 cv
170.344 197.295 170.218 196.689 170.218 195.833 cv
170.218 194.32 li
170.218 193.737 170.277 193.274 170.397 192.933 cv
170.517 192.59 170.692 192.35 170.923 192.212 cv
171.154 192.073 171.46 192.004 171.841 192.004 cv
172.094 192.004 172.31 192.037 172.488 192.102 cv
172.667 192.169 172.815 192.262 172.934 192.384 cv
173.052 192.505 173.146 192.669 173.214 192.877 cv
173.283 193.084 173.331 193.313 173.358 193.564 cv
173.386 193.815 173.398 194.118 173.398 194.473 cv
173.394 195.014 li
170.976 195.014 li
170.976 195.909 li
170.976 196.529 171.036 196.968 171.155 197.224 cv
171.275 197.48 171.5 197.608 171.831 197.608 cv
172.094 197.608 172.296 197.525 172.437 197.358 cv
172.579 197.191 172.65 196.889 172.65 196.45 cv
172.65 196.035 li
173.394 196.035 li
173.394 196.369 li
173.394 196.949 173.272 197.397 173.029 197.71 cv
172.787 198.023 172.389 198.18 171.836 198.18 cv
171.836 192.57 mo
171.516 192.57 171.292 192.682 171.166 192.904 cv
171.039 193.127 170.976 193.55 170.976 194.174 cv
170.976 194.579 li
172.65 194.579 li
172.65 194.083 li
172.65 193.874 172.646 193.7 172.635 193.562 cv
172.625 193.424 172.603 193.286 172.572 193.149 cv
172.54 193.014 172.495 192.906 172.437 192.828 cv
172.381 192.751 172.301 192.688 172.2 192.642 cv
172.099 192.594 171.978 192.57 171.836 192.57 cv
f
175.842 198.16 mo
175.434 198.16 175.152 198.048 174.997 197.823 cv
174.842 197.6 174.763 197.271 174.759 196.84 cv
174.759 192.601 li
174.036 192.601 li
174.036 192.095 li
174.759 192.095 li
174.759 190.244 li
175.518 190.244 li
175.518 192.095 li
176.515 192.095 li
176.515 192.601 li
175.518 192.601 li
175.518 196.769 li
175.518 197.072 175.554 197.28 175.624 197.394 cv
175.695 197.507 175.838 197.563 176.054 197.563 cv
176.192 197.563 176.334 197.55 176.479 197.522 cv
176.479 198.094 li
176.253 198.138 176.041 198.16 175.842 198.16 cv
f
177.41 199.293 mo
177.253 198.959 li
177.432 198.857 177.559 198.74 177.635 198.604 cv
177.711 198.47 177.749 198.297 177.749 198.084 cv
177.294 198.084 li
177.294 196.956 li
178.144 196.956 li
178.144 198.003 li
178.144 198.34 178.088 198.606 177.977 198.8 cv
177.865 198.993 177.676 199.158 177.41 199.293 cv
f
182.796 198.18 mo
182.523 198.18 182.289 198.14 182.093 198.059 cv
181.897 197.978 181.742 197.872 181.628 197.742 cv
181.514 197.612 181.423 197.441 181.357 197.23 cv
181.292 197.017 181.248 196.802 181.226 196.584 cv
181.204 196.367 181.193 196.109 181.193 195.812 cv
181.193 194.417 li
181.193 193.982 181.217 193.62 181.264 193.332 cv
181.31 193.044 181.395 192.797 181.514 192.591 cv
181.634 192.385 181.797 192.236 182.005 192.144 cv
182.212 192.051 182.475 192.004 182.791 192.004 cv
183.041 192.004 183.257 192.034 183.438 192.095 cv
183.621 192.156 183.769 192.239 183.881 192.346 cv
183.994 192.452 184.084 192.588 184.149 192.753 cv
184.215 192.918 184.261 193.093 184.286 193.276 cv
184.312 193.46 184.324 193.675 184.324 193.921 cv
184.324 194.204 li
183.621 194.204 li
183.621 193.921 li
183.621 193.408 183.561 193.056 183.438 192.861 cv
183.317 192.668 183.105 192.57 182.802 192.57 cv
182.457 192.57 182.229 192.692 182.118 192.937 cv
182.007 193.182 181.951 193.633 181.951 194.29 cv
181.951 195.97 li
181.951 196.583 182.012 197.01 182.131 197.249 cv
182.251 197.489 182.476 197.608 182.807 197.608 cv
182.948 197.608 183.067 197.588 183.166 197.548 cv
183.264 197.508 183.342 197.452 183.4 197.381 cv
183.46 197.31 183.506 197.212 183.54 197.088 cv
183.573 196.963 183.596 196.83 183.605 196.69 cv
183.616 196.551 183.621 196.374 183.621 196.162 cv
183.621 195.833 li
184.324 195.833 li
184.324 196.127 li
184.324 196.39 184.312 196.617 184.291 196.81 cv
184.269 197.002 184.226 197.187 184.159 197.368 cv
184.094 197.549 184.006 197.695 183.897 197.809 cv
183.787 197.921 183.64 198.012 183.454 198.079 cv
183.269 198.147 183.049 198.18 182.796 198.18 cv
f
186.817 198.18 mo
186.511 198.18 186.253 198.131 186.044 198.033 cv
185.835 197.935 185.67 197.787 185.551 197.588 cv
185.431 197.39 185.346 197.156 185.295 196.888 cv
185.244 196.62 185.22 196.297 185.22 195.919 cv
185.22 194.26 li
185.22 193.498 185.337 192.932 185.573 192.561 cv
185.81 192.189 186.224 192.004 186.817 192.004 cv
187.414 192.004 187.83 192.189 188.064 192.558 cv
188.299 192.927 188.416 193.494 188.416 194.26 cv
188.416 195.919 li
188.416 196.297 188.391 196.62 188.34 196.888 cv
188.29 197.156 188.204 197.39 188.085 197.588 cv
187.965 197.787 187.801 197.935 187.592 198.033 cv
187.383 198.131 187.124 198.18 186.817 198.18 cv
186.817 192.57 mo
186.689 192.57 186.578 192.588 186.483 192.621 cv
186.39 192.655 186.312 192.71 186.251 192.785 cv
186.105 193.028 li
186.067 193.114 186.039 193.227 186.021 193.364 cv
186.002 193.503 185.99 193.634 185.985 193.757 cv
185.98 193.88 185.978 194.034 185.978 194.22 cv
185.978 195.96 li
185.978 196.145 185.98 196.3 185.985 196.423 cv
185.99 196.546 186.002 196.676 186.021 196.814 cv
186.039 196.953 186.067 197.064 186.105 197.15 cv
186.251 197.394 li
186.312 197.47 186.39 197.524 186.483 197.558 cv
186.578 197.592 186.689 197.608 186.817 197.608 cv
186.97 197.608 187.098 197.581 187.202 197.525 cv
187.307 197.47 187.389 197.399 187.447 197.315 cv
187.506 197.23 187.551 197.111 187.581 196.956 cv
187.611 196.801 187.631 196.652 187.64 196.511 cv
187.648 196.369 187.652 196.186 187.652 195.96 cv
187.652 194.22 li
187.652 193.994 187.648 193.81 187.64 193.668 cv
187.631 193.526 187.611 193.378 187.581 193.223 cv
187.551 193.068 187.506 192.948 187.447 192.864 cv
187.389 192.779 187.307 192.71 187.202 192.654 cv
187.098 192.599 186.97 192.57 186.817 192.57 cv
f
192.578 198.084 mo
191.819 198.084 li
191.819 193.44 li
191.819 193.137 191.773 192.921 191.681 192.793 cv
191.588 192.665 191.443 192.601 191.248 192.601 cv
190.921 192.601 190.577 192.785 190.216 193.152 cv
190.216 198.084 li
189.457 198.084 li
189.457 192.095 li
190.216 192.095 li
190.216 192.718 li
190.658 192.242 191.139 192.004 191.658 192.004 cv
191.954 192.004 192.182 192.114 192.341 192.335 cv
192.499 192.557 192.578 192.871 192.578 193.278 cv
192.578 198.084 li
f
195.066 198.18 mo
194.591 198.18 194.211 198.026 193.926 197.72 cv
193.641 197.413 193.478 196.998 193.437 196.476 cv
194.075 196.283 li
194.115 196.738 194.22 197.073 194.389 197.287 cv
194.558 197.502 194.793 197.608 195.097 197.608 cv
195.36 197.608 195.567 197.531 195.719 197.376 cv
195.864 197.228 195.937 197.028 195.937 196.779 cv
195.937 196.743 li
195.927 196.346 195.684 195.948 195.208 195.55 cv
194.394 194.856 li
194.107 194.617 193.898 194.383 193.767 194.153 cv
193.639 193.932 193.574 193.672 193.574 193.375 cv
193.574 192.937 193.706 192.598 193.969 192.358 cv
194.226 192.122 194.571 192.004 195.006 192.004 cv
195.447 192.004 195.787 192.146 196.025 192.429 cv
196.263 192.712 196.395 193.095 196.422 193.577 cv
195.886 193.754 li
195.862 193.353 195.78 193.056 195.641 192.861 cv
195.501 192.668 195.299 192.57 195.036 192.57 cv
194.8 192.57 194.611 192.637 194.47 192.768 cv
194.331 192.896 194.263 193.068 194.263 193.284 cv
194.263 193.48 194.298 193.647 194.368 193.787 cv
194.439 193.927 194.569 194.078 194.758 194.24 cv
195.603 194.998 li
195.755 195.13 195.878 195.245 195.975 195.345 cv
196.07 195.444 196.173 195.567 196.28 195.714 cv
196.389 195.861 196.469 196.019 196.521 196.189 cv
196.573 196.36 196.601 196.543 196.605 196.738 cv
196.605 197.197 196.466 197.552 196.189 197.804 cv
195.913 198.055 195.539 198.18 195.066 198.18 cv
f
198.961 198.18 mo
198.388 198.18 197.975 198.003 197.722 197.649 cv
197.469 197.295 197.343 196.689 197.343 195.833 cv
197.343 194.32 li
197.343 193.737 197.402 193.274 197.522 192.933 cv
197.642 192.59 197.817 192.35 198.048 192.212 cv
198.279 192.073 198.585 192.004 198.966 192.004 cv
199.219 192.004 199.435 192.037 199.613 192.102 cv
199.792 192.169 199.94 192.262 200.059 192.384 cv
200.177 192.505 200.271 192.669 200.339 192.877 cv
200.408 193.084 200.456 193.313 200.483 193.564 cv
200.511 193.815 200.523 194.118 200.523 194.473 cv
200.519 195.014 li
198.101 195.014 li
198.101 195.909 li
198.101 196.529 198.161 196.968 198.28 197.224 cv
198.4 197.48 198.625 197.608 198.956 197.608 cv
199.219 197.608 199.421 197.525 199.562 197.358 cv
199.704 197.191 199.775 196.889 199.775 196.45 cv
199.775 196.035 li
200.519 196.035 li
200.519 196.369 li
200.519 196.949 200.397 197.397 200.154 197.71 cv
199.912 198.023 199.514 198.18 198.961 198.18 cv
198.961 192.57 mo
198.641 192.57 198.417 192.682 198.291 192.904 cv
198.164 193.127 198.101 193.55 198.101 194.174 cv
198.101 194.579 li
199.775 194.579 li
199.775 194.083 li
199.775 193.874 199.771 193.7 199.76 193.562 cv
199.75 193.424 199.728 193.286 199.697 193.149 cv
199.665 193.014 199.62 192.906 199.562 192.828 cv
199.506 192.751 199.426 192.688 199.325 192.642 cv
199.224 192.594 199.103 192.57 198.961 192.57 cv
f
203.037 198.18 mo
202.765 198.18 202.53 198.14 202.334 198.059 cv
202.139 197.978 201.983 197.872 201.869 197.742 cv
201.755 197.612 201.664 197.441 201.599 197.23 cv
201.533 197.017 201.489 196.802 201.467 196.584 cv
201.445 196.367 201.435 196.109 201.435 195.812 cv
201.435 194.417 li
201.435 193.982 201.458 193.62 201.505 193.332 cv
201.552 193.044 201.636 192.797 201.755 192.591 cv
201.875 192.385 202.038 192.236 202.246 192.144 cv
202.453 192.051 202.716 192.004 203.032 192.004 cv
203.282 192.004 203.498 192.034 203.68 192.095 cv
203.862 192.156 204.01 192.239 204.122 192.346 cv
204.235 192.452 204.325 192.588 204.391 192.753 cv
204.456 192.918 204.502 193.093 204.527 193.276 cv
204.553 193.46 204.565 193.675 204.565 193.921 cv
204.565 194.204 li
203.862 194.204 li
203.862 193.921 li
203.862 193.408 203.802 193.056 203.68 192.861 cv
203.559 192.668 203.346 192.57 203.043 192.57 cv
202.698 192.57 202.471 192.692 202.359 192.937 cv
202.248 193.182 202.192 193.633 202.192 194.29 cv
202.192 195.97 li
202.192 196.583 202.253 197.01 202.372 197.249 cv
202.492 197.489 202.717 197.608 203.048 197.608 cv
203.189 197.608 203.309 197.588 203.407 197.548 cv
203.505 197.508 203.583 197.452 203.642 197.381 cv
203.701 197.31 203.747 197.212 203.781 197.088 cv
203.814 196.963 203.837 196.83 203.847 196.69 cv
203.857 196.551 203.862 196.374 203.862 196.162 cv
203.862 195.833 li
204.565 195.833 li
204.565 196.127 li
204.565 196.39 204.554 196.617 204.532 196.81 cv
204.51 197.002 204.467 197.187 204.4 197.368 cv
204.335 197.549 204.247 197.695 204.138 197.809 cv
204.028 197.921 203.881 198.012 203.695 198.079 cv
203.51 198.147 203.29 198.18 203.037 198.18 cv
f
206.993 198.16 mo
206.585 198.16 206.304 198.048 206.148 197.823 cv
205.993 197.6 205.914 197.271 205.91 196.84 cv
205.91 192.601 li
205.187 192.601 li
205.187 192.095 li
205.91 192.095 li
205.91 190.244 li
206.669 190.244 li
206.669 192.095 li
207.666 192.095 li
207.666 192.601 li
206.669 192.601 li
206.669 196.769 li
206.669 197.072 206.705 197.28 206.775 197.394 cv
206.847 197.507 206.989 197.563 207.205 197.563 cv
207.344 197.563 207.485 197.55 207.631 197.522 cv
207.631 198.094 li
207.404 198.138 207.192 198.16 206.993 198.16 cv
f
209.978 198.18 mo
209.404 198.18 208.991 198.003 208.738 197.649 cv
208.485 197.295 208.359 196.689 208.359 195.833 cv
208.359 194.32 li
208.359 193.737 208.419 193.274 208.538 192.933 cv
208.658 192.59 208.834 192.35 209.065 192.212 cv
209.296 192.073 209.602 192.004 209.982 192.004 cv
210.235 192.004 210.451 192.037 210.63 192.102 cv
210.809 192.169 210.957 192.262 211.075 192.384 cv
211.193 192.505 211.287 192.669 211.355 192.877 cv
211.425 193.084 211.473 193.313 211.5 193.564 cv
211.527 193.815 211.54 194.118 211.54 194.473 cv
211.535 195.014 li
209.117 195.014 li
209.117 195.909 li
209.117 196.529 209.178 196.968 209.297 197.224 cv
209.417 197.48 209.642 197.608 209.973 197.608 cv
210.235 197.608 210.438 197.525 210.579 197.358 cv
210.721 197.191 210.792 196.889 210.792 196.45 cv
210.792 196.035 li
211.535 196.035 li
211.535 196.369 li
211.535 196.949 211.414 197.397 211.171 197.71 cv
210.929 198.023 210.53 198.18 209.978 198.18 cv
209.978 192.57 mo
209.657 192.57 209.434 192.682 209.308 192.904 cv
209.181 193.127 209.117 193.55 209.117 194.174 cv
209.117 194.579 li
210.792 194.579 li
210.792 194.083 li
210.792 193.874 210.787 193.7 210.776 193.562 cv
210.767 193.424 210.745 193.286 210.714 193.149 cv
210.682 193.014 210.637 192.906 210.579 192.828 cv
210.522 192.751 210.442 192.688 210.342 192.642 cv
210.24 192.594 210.119 192.57 209.978 192.57 cv
f
213.983 198.16 mo
213.575 198.16 213.294 198.048 213.139 197.823 cv
212.983 197.6 212.904 197.271 212.9 196.84 cv
212.9 192.601 li
212.178 192.601 li
212.178 192.095 li
212.9 192.095 li
212.9 190.244 li
213.659 190.244 li
213.659 192.095 li
214.656 192.095 li
214.656 192.601 li
213.659 192.601 li
213.659 196.769 li
213.659 197.072 213.695 197.28 213.766 197.394 cv
213.837 197.507 213.979 197.563 214.195 197.563 cv
214.334 197.563 214.476 197.55 214.621 197.522 cv
214.621 198.094 li
214.395 198.138 214.183 198.16 213.983 198.16 cv
f
216.341 198.175 mo
216.04 198.175 215.812 198.063 215.652 197.841 cv
215.494 197.618 215.415 197.304 215.415 196.895 cv
215.415 192.095 li
216.179 192.095 li
216.179 196.738 li
216.179 197.042 216.225 197.258 216.315 197.386 cv
216.406 197.514 216.55 197.578 216.745 197.578 cv
217.086 197.578 217.439 197.383 217.808 196.991 cv
217.808 192.095 li
218.566 192.095 li
218.566 198.084 li
217.808 198.084 li
217.808 197.421 li
217.362 197.924 216.873 198.175 216.341 198.175 cv
f
220.544 198.084 mo
219.785 198.084 li
219.785 192.095 li
220.544 192.095 li
220.544 192.92 li
220.726 192.616 220.938 192.392 221.184 192.247 cv
221.428 192.102 221.675 192.029 221.925 192.029 cv
222.056 192.034 li
222.056 192.853 li
221.948 192.811 221.826 192.788 221.691 192.788 cv
221.206 192.788 220.823 193.021 220.544 193.486 cv
220.544 198.084 li
f
225.961 198.18 mo
225.61 198.18 225.322 198.051 225.097 197.793 cv
224.87 197.535 224.758 197.216 224.758 196.835 cv
224.758 196.636 224.774 196.458 224.808 196.301 cv
224.842 196.145 224.905 195.997 224.998 195.858 cv
225.091 195.72 225.191 195.598 225.301 195.491 cv
225.411 195.386 225.566 195.273 225.769 195.152 cv
225.972 195.033 226.174 194.923 226.376 194.821 cv
226.578 194.721 226.843 194.598 227.17 194.452 cv
227.17 194.023 li
227.17 193.473 227.118 193.094 227.014 192.887 cv
226.909 192.68 226.713 192.575 226.427 192.575 cv
225.873 192.575 225.597 192.918 225.597 193.603 cv
225.597 193.82 li
224.849 193.795 li
224.849 193.697 224.85 193.636 224.853 193.612 cv
224.877 193.05 225.023 192.641 225.294 192.386 cv
225.563 192.132 225.954 192.004 226.467 192.004 cv
226.996 192.004 227.372 192.161 227.595 192.475 cv
227.817 192.788 227.929 193.291 227.929 193.982 cv
227.929 196.895 li
227.929 197.378 227.947 197.773 227.984 198.084 cv
227.312 198.084 li
227.2 197.255 li
227.109 197.518 226.955 197.737 226.737 197.914 cv
226.52 198.092 226.262 198.18 225.961 198.18 cv
227.17 194.953 mo
227.074 195.004 li
226.909 195.091 226.782 195.159 226.694 195.206 cv
226.607 195.253 226.502 195.312 226.379 195.383 cv
226.255 195.454 226.163 195.513 226.103 195.56 cv
225.893 195.732 li
225.721 195.922 li
225.612 196.127 li
225.536 196.372 li
225.522 196.458 225.516 196.553 225.516 196.657 cv
225.516 196.951 225.582 197.169 225.713 197.312 cv
225.845 197.456 226.01 197.527 226.209 197.527 cv
226.411 197.527 226.598 197.458 226.768 197.317 cv
226.938 197.178 227.072 197.012 227.17 196.819 cv
227.17 194.953 li
f
230.372 198.18 mo
229.856 198.18 229.486 197.986 229.262 197.599 cv
229.037 197.211 228.926 196.566 228.926 195.666 cv
228.926 194.559 li
228.926 194.228 228.938 193.938 228.961 193.688 cv
228.984 193.439 229.028 193.205 229.092 192.985 cv
229.156 192.767 229.24 192.588 229.345 192.449 cv
229.449 192.31 229.585 192.202 229.75 192.123 cv
229.915 192.044 230.11 192.004 230.337 192.004 cv
230.731 192.008 231.083 192.181 231.394 192.525 cv
231.394 189.697 li
232.152 189.697 li
232.152 198.084 li
231.394 198.084 li
231.394 197.659 li
231.09 198.003 230.75 198.177 230.372 198.18 cv
230.504 192.601 mo
230.183 192.601 229.967 192.735 229.853 193.003 cv
229.74 193.271 229.684 193.709 229.684 194.315 cv
229.684 195.727 li
229.684 196.381 229.741 196.854 229.856 197.144 cv
229.971 197.434 230.193 197.578 230.523 197.578 cv
230.817 197.578 231.107 197.446 231.394 197.184 cv
231.394 193.025 li
231.09 192.742 230.793 192.601 230.504 192.601 cv
f
234.155 198.084 mo
233.398 198.084 li
233.398 192.095 li
234.155 192.095 li
234.155 198.084 li
234.161 191.27 mo
233.398 191.27 li
233.398 190.239 li
234.161 190.239 li
234.161 191.27 li
f
236.19 200.057 mo
235.431 200.057 li
235.431 192.095 li
236.19 192.095 li
236.19 192.596 li
236.51 192.201 236.893 192.004 237.337 192.004 cv
237.56 192.004 237.755 192.05 237.922 192.141 cv
238.088 192.231 238.22 192.35 238.316 192.495 cv
238.412 192.64 238.489 192.82 238.549 193.036 cv
238.607 193.252 238.647 193.465 238.665 193.676 cv
238.684 193.887 238.692 194.125 238.692 194.392 cv
238.692 195.656 li
238.692 195.973 238.68 196.256 238.652 196.506 cv
238.625 196.756 238.578 196.987 238.511 197.201 cv
238.443 197.415 238.355 197.593 238.245 197.732 cv
238.136 197.872 237.998 197.982 237.833 198.061 cv
237.668 198.141 237.476 198.18 237.256 198.18 cv
236.868 198.18 236.513 197.989 236.19 197.608 cv
236.19 200.057 li
237.12 192.601 mo
236.813 192.601 236.503 192.755 236.19 193.062 cv
236.19 197.144 li
236.466 197.434 236.781 197.578 237.135 197.578 cv
237.269 197.578 237.385 197.551 237.479 197.495 cv
237.573 197.439 237.65 197.363 237.709 197.268 cv
237.768 197.171 237.814 197.04 237.848 196.875 cv
237.882 196.71 237.904 196.533 237.916 196.347 cv
237.928 196.159 237.935 195.933 237.935 195.666 cv
237.935 194.392 li
237.935 193.751 237.88 193.292 237.773 193.016 cv
237.664 192.739 237.447 192.601 237.12 192.601 cv
f
240.595 198.084 mo
239.837 198.084 li
239.837 192.095 li
240.595 192.095 li
240.595 198.084 li
240.601 191.27 mo
239.837 191.27 li
239.837 190.239 li
240.601 190.239 li
240.601 191.27 li
f
243.235 198.18 mo
242.76 198.18 242.38 198.026 242.095 197.72 cv
241.81 197.413 241.647 196.998 241.606 196.476 cv
242.244 196.283 li
242.284 196.738 242.389 197.073 242.558 197.287 cv
242.727 197.502 242.962 197.608 243.266 197.608 cv
243.529 197.608 243.736 197.531 243.888 197.376 cv
244.033 197.228 244.105 197.028 244.105 196.779 cv
244.105 196.743 li
244.096 196.346 243.853 195.948 243.377 195.55 cv
242.563 194.856 li
242.276 194.617 242.067 194.383 241.936 194.153 cv
241.808 193.932 241.743 193.672 241.743 193.375 cv
241.743 192.937 241.875 192.598 242.138 192.358 cv
242.395 192.122 242.74 192.004 243.175 192.004 cv
243.616 192.004 243.956 192.146 244.194 192.429 cv
244.432 192.712 244.564 193.095 244.591 193.577 cv
244.055 193.754 li
244.031 193.353 243.949 193.056 243.809 192.861 cv
243.67 192.668 243.468 192.57 243.205 192.57 cv
242.969 192.57 242.78 192.637 242.639 192.768 cv
242.5 192.896 242.432 193.068 242.432 193.284 cv
242.432 193.48 242.467 193.647 242.537 193.787 cv
242.608 193.927 242.738 194.078 242.927 194.24 cv
243.771 194.998 li
243.924 195.13 244.047 195.245 244.144 195.345 cv
244.239 195.444 244.342 195.567 244.449 195.714 cv
244.558 195.861 244.638 196.019 244.689 196.189 cv
244.742 196.36 244.77 196.543 244.773 196.738 cv
244.773 197.197 244.635 197.552 244.358 197.804 cv
244.082 198.055 243.708 198.18 243.235 198.18 cv
f
247.114 198.18 mo
246.842 198.18 246.607 198.14 246.411 198.059 cv
246.216 197.978 246.061 197.872 245.946 197.742 cv
245.832 197.612 245.741 197.441 245.676 197.23 cv
245.61 197.017 245.566 196.802 245.544 196.584 cv
245.522 196.367 245.512 196.109 245.512 195.812 cv
245.512 194.417 li
245.512 193.982 245.535 193.62 245.582 193.332 cv
245.629 193.044 245.713 192.797 245.832 192.591 cv
245.952 192.385 246.115 192.236 246.323 192.144 cv
246.53 192.051 246.793 192.004 247.109 192.004 cv
247.359 192.004 247.575 192.034 247.757 192.095 cv
247.939 192.156 248.087 192.239 248.199 192.346 cv
248.312 192.452 248.402 192.588 248.468 192.753 cv
248.533 192.918 248.579 193.093 248.604 193.276 cv
248.63 193.46 248.643 193.675 248.643 193.921 cv
248.643 194.204 li
247.939 194.204 li
247.939 193.921 li
247.939 193.408 247.879 193.056 247.757 192.861 cv
247.636 192.668 247.423 192.57 247.12 192.57 cv
246.775 192.57 246.548 192.692 246.437 192.937 cv
246.325 193.182 246.27 193.633 246.27 194.29 cv
246.27 195.97 li
246.27 196.583 246.33 197.01 246.449 197.249 cv
246.569 197.489 246.794 197.608 247.125 197.608 cv
247.267 197.608 247.386 197.588 247.484 197.548 cv
247.582 197.508 247.66 197.452 247.719 197.381 cv
247.778 197.31 247.824 197.212 247.858 197.088 cv
247.892 196.963 247.914 196.83 247.924 196.69 cv
247.935 196.551 247.939 196.374 247.939 196.162 cv
247.939 195.833 li
248.643 195.833 li
248.643 196.127 li
248.643 196.39 248.631 196.617 248.609 196.81 cv
248.587 197.002 248.544 197.187 248.478 197.368 cv
248.412 197.549 248.324 197.695 248.215 197.809 cv
248.105 197.921 247.958 198.012 247.772 198.079 cv
247.587 198.147 247.367 198.18 247.114 198.18 cv
f
250.493 198.084 mo
249.735 198.084 li
249.735 192.095 li
250.493 192.095 li
250.493 198.084 li
250.499 191.27 mo
249.735 191.27 li
249.735 190.239 li
250.499 190.239 li
250.499 191.27 li
f
254.884 198.084 mo
254.125 198.084 li
254.125 193.44 li
254.125 193.137 254.079 192.921 253.986 192.793 cv
253.894 192.665 253.749 192.601 253.554 192.601 cv
253.227 192.601 252.883 192.785 252.521 193.152 cv
252.521 198.084 li
251.763 198.084 li
251.763 192.095 li
252.521 192.095 li
252.521 192.718 li
252.964 192.242 253.444 192.004 253.964 192.004 cv
254.26 192.004 254.487 192.114 254.647 192.335 cv
254.805 192.557 254.884 192.871 254.884 193.278 cv
254.884 198.084 li
f
257.646 200.052 mo
257.328 200.052 257.049 200.035 256.809 200.001 cv
256.567 199.967 256.353 199.912 256.168 199.834 cv
255.982 199.757 255.841 199.651 255.743 199.518 cv
255.646 199.385 255.597 199.226 255.597 199.04 cv
255.597 198.75 255.693 198.484 255.885 198.243 cv
256.077 198.002 256.312 197.81 256.588 197.664 cv
256.406 197.613 256.249 197.54 256.118 197.444 cv
255.986 197.348 255.921 197.244 255.921 197.133 cv
255.921 196.816 256.158 196.413 256.634 195.924 cv
256.135 195.56 255.885 194.949 255.885 194.093 cv
255.885 193.803 255.919 193.534 255.986 193.286 cv
256.054 193.038 256.154 192.817 256.287 192.624 cv
256.42 192.43 256.595 192.278 256.811 192.169 cv
257.026 192.059 257.274 192.004 257.555 192.004 cv
258.158 192.004 258.588 192.252 258.844 192.748 cv
258.908 192.637 259.016 192.516 259.168 192.386 cv
259.319 192.256 259.481 192.154 259.653 192.08 cv
259.811 192.015 li
260.013 192.545 li
259.848 192.586 259.663 192.658 259.459 192.763 cv
259.255 192.867 259.11 192.969 259.026 193.066 cv
259.077 193.188 259.121 193.357 259.16 193.572 cv
259.199 193.788 259.219 193.969 259.219 194.113 cv
259.219 194.758 259.086 195.268 258.821 195.644 cv
258.557 196.019 258.138 196.207 257.564 196.207 cv
257.474 196.207 257.362 196.196 257.23 196.175 cv
257.099 196.152 257.008 196.132 256.957 196.111 cv
256.947 196.128 256.909 196.186 256.844 196.283 cv
256.778 196.381 256.729 196.456 256.697 196.509 cv
256.599 196.7 li
256.548 196.891 li
256.548 196.988 256.715 197.064 257.049 197.118 cv
257.119 197.138 257.288 197.168 257.555 197.206 cv
257.82 197.245 257.973 197.269 258.01 197.279 cv
258.502 197.367 258.874 197.52 259.127 197.74 cv
259.38 197.959 259.507 198.266 259.507 198.66 cv
259.507 199.136 259.34 199.486 259.006 199.713 cv
258.672 199.938 258.219 200.052 257.646 200.052 cv
257.008 197.766 mo
256.502 198.079 256.249 198.421 256.249 198.792 cv
256.249 199.021 256.357 199.187 256.573 199.29 cv
256.789 199.393 257.143 199.444 257.635 199.444 cv
258.026 199.444 258.336 199.382 258.563 199.255 cv
258.791 199.129 258.905 198.937 258.905 198.681 cv
258.905 198.462 258.827 198.291 258.672 198.17 cv
258.517 198.049 258.219 197.947 257.776 197.866 cv
257.008 197.766 li
257.569 192.545 mo
257.411 192.545 257.27 192.578 257.147 192.643 cv
257.024 192.71 256.926 192.793 256.853 192.894 cv
256.781 192.995 256.723 193.117 256.677 193.259 cv
256.631 193.4 256.601 193.537 256.586 193.671 cv
256.57 193.804 256.563 193.944 256.563 194.093 cv
256.563 195.139 256.896 195.661 257.564 195.661 cv
257.733 195.661 257.88 195.629 258.005 195.565 cv
258.129 195.501 258.226 195.42 258.293 195.322 cv
258.36 195.225 258.414 195.102 258.455 194.955 cv
258.495 194.809 258.521 194.671 258.533 194.541 cv
258.545 194.411 258.551 194.262 258.551 194.093 cv
258.551 193.062 258.224 192.545 257.569 192.545 cv
f
116.723 210.61 mo
116.416 210.61 116.158 210.561 115.949 210.464 cv
115.74 210.366 115.575 210.218 115.456 210.019 cv
115.336 209.82 115.251 209.587 115.2 209.318 cv
115.149 209.051 115.125 208.727 115.125 208.35 cv
115.125 206.69 li
115.125 205.929 115.242 205.362 115.479 204.991 cv
115.715 204.62 116.129 204.435 116.723 204.435 cv
117.319 204.435 117.735 204.619 117.97 204.988 cv
118.204 205.357 118.321 205.925 118.321 206.69 cv
118.321 208.35 li
118.321 208.727 118.296 209.051 118.245 209.318 cv
118.195 209.587 118.109 209.82 117.99 210.019 cv
117.87 210.218 117.706 210.366 117.497 210.464 cv
117.288 210.561 117.029 210.61 116.723 210.61 cv
116.723 205.001 mo
116.595 205.001 116.483 205.018 116.389 205.052 cv
116.295 205.086 116.217 205.141 116.156 205.216 cv
116.01 205.459 li
115.973 205.545 115.944 205.657 115.926 205.795 cv
115.907 205.934 115.896 206.064 115.891 206.188 cv
115.886 206.311 115.883 206.465 115.883 206.65 cv
115.883 208.391 li
115.883 208.576 115.886 208.73 115.891 208.853 cv
115.896 208.977 115.907 209.106 115.926 209.245 cv
115.944 209.384 115.973 209.495 116.01 209.581 cv
116.156 209.824 li
116.217 209.9 116.295 209.955 116.389 209.988 cv
116.483 210.023 116.595 210.039 116.723 210.039 cv
116.875 210.039 117.003 210.012 117.107 209.956 cv
117.212 209.9 117.294 209.83 117.353 209.746 cv
117.411 209.661 117.456 209.542 117.486 209.387 cv
117.517 209.231 117.536 209.083 117.545 208.941 cv
117.554 208.8 117.558 208.616 117.558 208.391 cv
117.558 206.65 li
117.558 206.425 117.554 206.24 117.545 206.099 cv
117.536 205.957 117.517 205.809 117.486 205.653 cv
117.456 205.499 117.411 205.379 117.353 205.295 cv
117.294 205.21 117.212 205.141 117.107 205.085 cv
117.003 205.029 116.875 205.001 116.723 205.001 cv
f
122.985 210.61 mo
122.412 210.61 121.999 210.434 121.746 210.08 cv
121.493 209.726 121.367 209.12 121.367 208.264 cv
121.367 206.751 li
121.367 206.168 121.427 205.705 121.546 205.363 cv
121.666 205.02 121.842 204.78 122.072 204.643 cv
122.304 204.504 122.609 204.435 122.99 204.435 cv
123.243 204.435 123.459 204.468 123.638 204.533 cv
123.816 204.6 123.965 204.692 124.083 204.814 cv
124.201 204.936 124.295 205.1 124.363 205.308 cv
124.433 205.515 124.48 205.744 124.508 205.995 cv
124.535 206.246 124.548 206.549 124.548 206.903 cv
124.543 207.444 li
122.125 207.444 li
122.125 208.34 li
122.125 208.96 122.185 209.398 122.305 209.654 cv
122.425 209.911 122.649 210.039 122.981 210.039 cv
123.243 210.039 123.445 209.956 123.587 209.789 cv
123.729 209.622 123.8 209.319 123.8 208.881 cv
123.8 208.466 li
124.543 208.466 li
124.543 208.8 li
124.543 209.38 124.422 209.827 124.179 210.141 cv
123.937 210.454 123.538 210.61 122.985 210.61 cv
122.985 205.001 mo
122.665 205.001 122.441 205.112 122.315 205.335 cv
122.188 205.558 122.125 205.981 122.125 206.604 cv
122.125 207.01 li
123.8 207.01 li
123.8 206.514 li
123.8 206.305 123.795 206.131 123.784 205.992 cv
123.774 205.855 123.753 205.717 123.722 205.58 cv
123.689 205.444 123.645 205.337 123.587 205.259 cv
123.53 205.182 123.45 205.119 123.35 205.072 cv
123.248 205.024 123.127 205.001 122.985 205.001 cv
f
126.414 210.515 mo
125.656 210.515 li
125.656 204.525 li
126.414 204.525 li
126.414 210.515 li
126.42 203.701 mo
125.656 203.701 li
125.656 202.67 li
126.42 202.67 li
126.42 203.701 li
f
128.564 210.605 mo
128.264 210.605 128.035 210.494 127.876 210.271 cv
127.718 210.049 127.639 209.734 127.639 209.326 cv
127.639 204.525 li
128.402 204.525 li
128.402 209.169 li
128.402 209.473 128.448 209.688 128.539 209.816 cv
128.63 209.944 128.773 210.009 128.969 210.009 cv
129.31 210.009 129.663 209.813 130.031 209.422 cv
130.031 204.525 li
130.79 204.525 li
130.79 210.515 li
130.031 210.515 li
130.031 209.852 li
129.586 210.354 129.097 210.605 128.564 210.605 cv
f
133.318 210.61 mo
132.843 210.61 132.463 210.457 132.178 210.15 cv
131.893 209.844 131.73 209.429 131.689 208.906 cv
132.327 208.714 li
132.367 209.169 132.472 209.504 132.641 209.718 cv
132.81 209.933 133.045 210.039 133.349 210.039 cv
133.612 210.039 133.819 209.962 133.971 209.807 cv
134.116 209.658 134.188 209.459 134.188 209.21 cv
134.188 209.174 li
134.179 208.776 133.936 208.379 133.46 207.98 cv
132.646 207.287 li
132.359 207.048 132.15 206.813 132.019 206.584 cv
131.891 206.362 131.826 206.102 131.826 205.806 cv
131.826 205.367 131.958 205.028 132.221 204.789 cv
132.478 204.553 132.823 204.435 133.258 204.435 cv
133.699 204.435 134.039 204.576 134.277 204.859 cv
134.515 205.143 134.647 205.525 134.674 206.008 cv
134.138 206.185 li
134.114 205.783 134.032 205.486 133.893 205.292 cv
133.753 205.099 133.551 205.001 133.288 205.001 cv
133.052 205.001 132.863 205.067 132.722 205.198 cv
132.583 205.327 132.515 205.499 132.515 205.715 cv
132.515 205.91 132.55 206.078 132.62 206.218 cv
132.691 206.357 132.821 206.509 133.01 206.671 cv
133.855 207.429 li
134.007 207.561 134.13 207.676 134.227 207.775 cv
134.322 207.875 134.425 207.998 134.532 208.145 cv
134.641 208.292 134.721 208.45 134.772 208.62 cv
134.825 208.791 134.853 208.974 134.857 209.169 cv
134.857 209.628 134.718 209.982 134.441 210.234 cv
134.165 210.485 133.791 210.61 133.318 210.61 cv
f
141.265 210.515 mo
140.546 210.515 li
140.546 205.811 li
140.546 205.483 140.495 205.256 140.395 205.128 cv
140.293 205 140.148 204.936 139.959 204.936 cv
139.578 204.942 139.202 205.149 138.831 205.558 cv
138.838 205.659 138.842 205.736 138.842 205.79 cv
138.842 210.515 li
138.134 210.515 li
138.134 205.811 li
138.134 205.483 138.081 205.256 137.977 205.128 cv
137.872 205 137.726 204.936 137.536 204.936 cv
137.155 204.942 136.783 205.149 136.419 205.558 cv
136.419 210.515 li
135.705 210.515 li
135.705 204.525 li
136.419 204.525 li
136.419 205.133 li
136.82 204.657 137.29 204.42 137.83 204.42 cv
138.329 204.42 138.643 204.683 138.771 205.209 cv
139.189 204.683 139.682 204.42 140.248 204.42 cv
140.545 204.42 140.788 204.526 140.979 204.741 cv
141.169 204.955 141.265 205.305 141.265 205.79 cv
141.265 210.515 li
f
143.864 210.61 mo
143.558 210.61 143.3 210.561 143.091 210.464 cv
142.882 210.366 142.717 210.218 142.598 210.019 cv
142.478 209.82 142.393 209.587 142.342 209.318 cv
142.291 209.051 142.267 208.727 142.267 208.35 cv
142.267 206.69 li
142.267 205.929 142.384 205.362 142.62 204.991 cv
142.857 204.62 143.27 204.435 143.864 204.435 cv
144.461 204.435 144.877 204.619 145.111 204.988 cv
145.346 205.357 145.463 205.925 145.463 206.69 cv
145.463 208.35 li
145.463 208.727 145.437 209.051 145.387 209.318 cv
145.337 209.587 145.251 209.82 145.132 210.019 cv
145.012 210.218 144.848 210.366 144.639 210.464 cv
144.43 210.561 144.171 210.61 143.864 210.61 cv
143.864 205.001 mo
143.736 205.001 143.625 205.018 143.53 205.052 cv
143.436 205.086 143.358 205.141 143.298 205.216 cv
143.151 205.459 li
143.114 205.545 143.086 205.657 143.067 205.795 cv
143.049 205.934 143.037 206.064 143.032 206.188 cv
143.027 206.311 143.024 206.465 143.024 206.65 cv
143.024 208.391 li
143.024 208.576 143.027 208.73 143.032 208.853 cv
143.037 208.977 143.049 209.106 143.067 209.245 cv
143.086 209.384 143.114 209.495 143.151 209.581 cv
143.298 209.824 li
143.358 209.9 143.436 209.955 143.53 209.988 cv
143.625 210.023 143.736 210.039 143.864 210.039 cv
144.017 210.039 144.145 210.012 144.249 209.956 cv
144.353 209.9 144.436 209.83 144.494 209.746 cv
144.553 209.661 144.598 209.542 144.628 209.387 cv
144.658 209.231 144.678 209.083 144.686 208.941 cv
144.695 208.8 144.699 208.616 144.699 208.391 cv
144.699 206.65 li
144.699 206.425 144.695 206.24 144.686 206.099 cv
144.678 205.957 144.658 205.809 144.628 205.653 cv
144.598 205.499 144.553 205.379 144.494 205.295 cv
144.436 205.21 144.353 205.141 144.249 205.085 cv
144.145 205.029 144.017 205.001 143.864 205.001 cv
f
147.84 210.61 mo
147.324 210.61 146.954 210.417 146.73 210.029 cv
146.505 209.642 146.394 208.997 146.394 208.097 cv
146.394 206.989 li
146.394 206.658 146.405 206.369 146.429 206.119 cv
146.452 205.869 146.496 205.636 146.56 205.416 cv
146.624 205.197 146.708 205.018 146.812 204.88 cv
146.917 204.741 147.053 204.633 147.218 204.554 cv
147.383 204.475 147.578 204.435 147.805 204.435 cv
148.199 204.439 148.551 204.611 148.861 204.956 cv
148.861 202.128 li
149.62 202.128 li
149.62 210.515 li
148.861 210.515 li
148.861 210.09 li
148.558 210.434 148.218 210.607 147.84 210.61 cv
147.972 205.031 mo
147.65 205.031 147.435 205.166 147.321 205.434 cv
147.208 205.702 147.151 206.14 147.151 206.746 cv
147.151 208.157 li
147.151 208.812 147.209 209.284 147.324 209.574 cv
147.438 209.864 147.661 210.009 147.991 210.009 cv
148.285 210.009 148.575 209.877 148.861 209.614 cv
148.861 205.456 li
148.558 205.173 148.261 205.031 147.972 205.031 cv
f
154.314 210.591 mo
153.906 210.591 153.625 210.479 153.47 210.254 cv
153.314 210.03 153.235 209.702 153.231 209.27 cv
153.231 205.031 li
152.509 205.031 li
152.509 204.525 li
153.231 204.525 li
153.231 202.675 li
153.99 202.675 li
153.99 204.525 li
154.987 204.525 li
154.987 205.031 li
153.99 205.031 li
153.99 209.199 li
153.99 209.503 154.026 209.711 154.097 209.824 cv
154.168 209.938 154.311 209.994 154.526 209.994 cv
154.665 209.994 154.807 209.98 154.952 209.953 cv
154.952 210.524 li
154.726 210.568 154.514 210.591 154.314 210.591 cv
f
157.299 210.61 mo
156.726 210.61 156.313 210.434 156.06 210.08 cv
155.807 209.726 155.681 209.12 155.681 208.264 cv
155.681 206.751 li
155.681 206.168 155.74 205.705 155.859 205.363 cv
155.98 205.02 156.155 204.78 156.386 204.643 cv
156.617 204.504 156.923 204.435 157.304 204.435 cv
157.557 204.435 157.772 204.468 157.951 204.533 cv
158.13 204.6 158.278 204.692 158.396 204.814 cv
158.515 204.936 158.608 205.1 158.677 205.308 cv
158.746 205.515 158.794 205.744 158.821 205.995 cv
158.849 206.246 158.861 206.549 158.861 206.903 cv
158.856 207.444 li
156.439 207.444 li
156.439 208.34 li
156.439 208.96 156.499 209.398 156.618 209.654 cv
156.738 209.911 156.963 210.039 157.294 210.039 cv
157.557 210.039 157.759 209.956 157.9 209.789 cv
158.042 209.622 158.113 209.319 158.113 208.881 cv
158.113 208.466 li
158.856 208.466 li
158.856 208.8 li
158.856 209.38 158.735 209.827 158.492 210.141 cv
158.25 210.454 157.852 210.61 157.299 210.61 cv
157.299 205.001 mo
156.979 205.001 156.755 205.112 156.629 205.335 cv
156.502 205.558 156.439 205.981 156.439 206.604 cv
156.439 207.01 li
158.113 207.01 li
158.113 206.514 li
158.113 206.305 158.108 206.131 158.098 205.992 cv
158.088 205.855 158.066 205.717 158.035 205.58 cv
158.003 205.444 157.958 205.337 157.9 205.259 cv
157.844 205.182 157.764 205.119 157.663 205.072 cv
157.561 205.024 157.44 205.001 157.299 205.001 cv
f
165.442 210.515 mo
164.724 210.515 li
164.724 205.811 li
164.724 205.483 164.673 205.256 164.572 205.128 cv
164.471 205 164.326 204.936 164.137 204.936 cv
163.756 204.942 163.38 205.149 163.009 205.558 cv
163.016 205.659 163.02 205.736 163.02 205.79 cv
163.02 210.515 li
162.312 210.515 li
162.312 205.811 li
162.312 205.483 162.259 205.256 162.154 205.128 cv
162.05 205 161.903 204.936 161.714 204.936 cv
161.333 204.942 160.961 205.149 160.597 205.558 cv
160.597 210.515 li
159.883 210.515 li
159.883 204.525 li
160.597 204.525 li
160.597 205.133 li
160.998 204.657 161.468 204.42 162.008 204.42 cv
162.507 204.42 162.82 204.683 162.948 205.209 cv
163.366 204.683 163.859 204.42 164.426 204.42 cv
164.723 204.42 164.966 204.526 165.156 204.741 cv
165.347 204.955 165.442 205.305 165.442 205.79 cv
165.442 210.515 li
f
167.319 212.487 mo
166.56 212.487 li
166.56 204.525 li
167.319 204.525 li
167.319 205.026 li
167.64 204.632 168.022 204.435 168.467 204.435 cv
168.689 204.435 168.885 204.48 169.052 204.571 cv
169.218 204.662 169.35 204.78 169.446 204.926 cv
169.542 205.07 169.619 205.251 169.679 205.467 cv
169.737 205.683 169.776 205.896 169.795 206.106 cv
169.813 206.317 169.822 206.556 169.822 206.822 cv
169.822 208.087 li
169.822 208.403 169.81 208.686 169.782 208.937 cv
169.755 209.186 169.708 209.418 169.641 209.632 cv
169.573 209.846 169.484 210.023 169.375 210.163 cv
169.266 210.303 169.128 210.413 168.963 210.492 cv
168.798 210.571 168.605 210.61 168.386 210.61 cv
167.998 210.61 167.643 210.42 167.319 210.039 cv
167.319 212.487 li
168.25 205.031 mo
167.942 205.031 167.633 205.186 167.319 205.492 cv
167.319 209.574 li
167.596 209.864 167.911 210.009 168.265 210.009 cv
168.399 210.009 168.515 209.982 168.608 209.926 cv
168.703 209.87 168.78 209.794 168.839 209.698 cv
168.897 209.602 168.944 209.471 168.978 209.306 cv
169.012 209.141 169.034 208.964 169.046 208.777 cv
169.058 208.59 169.065 208.363 169.065 208.097 cv
169.065 206.822 li
169.065 206.182 169.01 205.723 168.902 205.446 cv
168.794 205.17 168.577 205.031 168.25 205.031 cv
f
172.366 210.61 mo
172.06 210.61 171.802 210.561 171.593 210.464 cv
171.384 210.366 171.219 210.218 171.1 210.019 cv
170.979 209.82 170.895 209.587 170.844 209.318 cv
170.793 209.051 170.769 208.727 170.769 208.35 cv
170.769 206.69 li
170.769 205.929 170.886 205.362 171.122 204.991 cv
171.358 204.62 171.772 204.435 172.366 204.435 cv
172.963 204.435 173.379 204.619 173.613 204.988 cv
173.848 205.357 173.965 205.925 173.965 206.69 cv
173.965 208.35 li
173.965 208.727 173.939 209.051 173.889 209.318 cv
173.839 209.587 173.753 209.82 173.634 210.019 cv
173.514 210.218 173.35 210.366 173.141 210.464 cv
172.932 210.561 172.673 210.61 172.366 210.61 cv
172.366 205.001 mo
172.238 205.001 172.127 205.018 172.032 205.052 cv
171.939 205.086 171.86 205.141 171.8 205.216 cv
171.653 205.459 li
171.616 205.545 171.588 205.657 171.569 205.795 cv
171.551 205.934 171.539 206.064 171.534 206.188 cv
171.529 206.311 171.526 206.465 171.526 206.65 cv
171.526 208.391 li
171.526 208.576 171.529 208.73 171.534 208.853 cv
171.539 208.977 171.551 209.106 171.569 209.245 cv
171.588 209.384 171.616 209.495 171.653 209.581 cv
171.8 209.824 li
171.86 209.9 171.939 209.955 172.032 209.988 cv
172.127 210.023 172.238 210.039 172.366 210.039 cv
172.519 210.039 172.646 210.012 172.751 209.956 cv
172.855 209.9 172.938 209.83 172.996 209.746 cv
173.055 209.661 173.1 209.542 173.13 209.387 cv
173.16 209.231 173.18 209.083 173.189 208.941 cv
173.197 208.8 173.201 208.616 173.201 208.391 cv
173.201 206.65 li
173.201 206.425 173.197 206.24 173.189 206.099 cv
173.18 205.957 173.16 205.809 173.13 205.653 cv
173.1 205.499 173.055 205.379 172.996 205.295 cv
172.938 205.21 172.855 205.141 172.751 205.085 cv
172.646 205.029 172.519 205.001 172.366 205.001 cv
f
175.826 210.515 mo
175.067 210.515 li
175.067 204.525 li
175.826 204.525 li
175.826 205.351 li
176.008 205.047 176.221 204.822 176.466 204.678 cv
176.71 204.532 176.957 204.46 177.207 204.46 cv
177.338 204.465 li
177.338 205.284 li
177.23 205.241 177.108 205.219 176.974 205.219 cv
176.488 205.219 176.105 205.451 175.826 205.917 cv
175.826 210.515 li
f
181.051 210.515 mo
180.293 210.515 li
180.293 204.525 li
181.051 204.525 li
181.051 210.515 li
181.057 203.701 mo
180.293 203.701 li
180.293 202.67 li
181.057 202.67 li
181.057 203.701 li
f
185.441 210.515 mo
184.683 210.515 li
184.683 205.871 li
184.683 205.567 184.637 205.351 184.544 205.224 cv
184.451 205.096 184.307 205.031 184.111 205.031 cv
183.784 205.031 183.44 205.216 183.079 205.583 cv
183.079 210.515 li
182.32 210.515 li
182.32 204.525 li
183.079 204.525 li
183.079 205.148 li
183.521 204.673 184.002 204.435 184.522 204.435 cv
184.817 204.435 185.045 204.545 185.204 204.766 cv
185.362 204.987 185.441 205.302 185.441 205.709 cv
185.441 210.515 li
f
188.051 210.61 mo
187.778 210.61 187.544 210.57 187.348 210.489 cv
187.152 210.408 186.997 210.303 186.883 210.173 cv
186.769 210.043 186.678 209.872 186.612 209.66 cv
186.547 209.447 186.503 209.232 186.48 209.015 cv
186.459 208.798 186.448 208.54 186.448 208.243 cv
186.448 206.848 li
186.448 206.412 186.472 206.051 186.518 205.763 cv
186.565 205.475 186.649 205.228 186.769 205.021 cv
186.889 204.815 187.052 204.667 187.26 204.574 cv
187.467 204.482 187.729 204.435 188.046 204.435 cv
188.296 204.435 188.512 204.465 188.693 204.525 cv
188.876 204.587 189.023 204.67 189.136 204.776 cv
189.249 204.883 189.339 205.018 189.404 205.184 cv
189.47 205.349 189.516 205.523 189.541 205.707 cv
189.566 205.891 189.579 206.105 189.579 206.352 cv
189.579 206.635 li
188.876 206.635 li
188.876 206.352 li
188.876 205.839 188.815 205.486 188.693 205.292 cv
188.572 205.099 188.359 205.001 188.057 205.001 cv
187.712 205.001 187.484 205.123 187.373 205.368 cv
187.262 205.612 187.206 206.063 187.206 206.721 cv
187.206 208.4 li
187.206 209.014 187.267 209.44 187.386 209.68 cv
187.506 209.92 187.73 210.039 188.062 210.039 cv
188.203 210.039 188.322 210.019 188.421 209.979 cv
188.519 209.938 188.597 209.883 188.655 209.811 cv
188.715 209.741 188.761 209.643 188.795 209.519 cv
188.828 209.394 188.851 209.261 188.86 209.121 cv
188.871 208.981 188.876 208.805 188.876 208.593 cv
188.876 208.264 li
189.579 208.264 li
189.579 208.558 li
189.579 208.82 189.567 209.048 189.546 209.24 cv
189.523 209.433 189.48 209.618 189.414 209.799 cv
189.349 209.98 189.261 210.126 189.151 210.239 cv
189.042 210.352 188.895 210.442 188.709 210.51 cv
188.523 210.577 188.304 210.61 188.051 210.61 cv
f
191.43 210.515 mo
190.672 210.515 li
190.672 204.525 li
191.43 204.525 li
191.43 210.515 li
191.436 203.701 mo
190.672 203.701 li
190.672 202.67 li
191.436 202.67 li
191.436 203.701 li
f
194.035 210.61 mo
193.519 210.61 193.149 210.417 192.925 210.029 cv
192.7 209.642 192.589 208.997 192.589 208.097 cv
192.589 206.989 li
192.589 206.658 192.601 206.369 192.624 206.119 cv
192.647 205.869 192.691 205.636 192.755 205.416 cv
192.819 205.197 192.903 205.018 193.008 204.88 cv
193.112 204.741 193.248 204.633 193.413 204.554 cv
193.578 204.475 193.773 204.435 194 204.435 cv
194.395 204.439 194.746 204.611 195.057 204.956 cv
195.057 202.128 li
195.815 202.128 li
195.815 210.515 li
195.057 210.515 li
195.057 210.09 li
194.753 210.434 194.413 210.607 194.035 210.61 cv
194.167 205.031 mo
193.846 205.031 193.63 205.166 193.517 205.434 cv
193.403 205.702 193.347 206.14 193.347 206.746 cv
193.347 208.157 li
193.347 208.812 193.404 209.284 193.519 209.574 cv
193.634 209.864 193.856 210.009 194.187 210.009 cv
194.48 210.009 194.771 209.877 195.057 209.614 cv
195.057 205.456 li
194.753 205.173 194.456 205.031 194.167 205.031 cv
f
197.818 210.515 mo
197.061 210.515 li
197.061 204.525 li
197.818 204.525 li
197.818 210.515 li
197.824 203.701 mo
197.061 203.701 li
197.061 202.67 li
197.824 202.67 li
197.824 203.701 li
f
200.424 210.61 mo
199.908 210.61 199.538 210.417 199.313 210.029 cv
199.089 209.642 198.978 208.997 198.978 208.097 cv
198.978 206.989 li
198.978 206.658 198.989 206.369 199.013 206.119 cv
199.036 205.869 199.08 205.636 199.144 205.416 cv
199.208 205.197 199.292 205.018 199.396 204.88 cv
199.501 204.741 199.637 204.633 199.802 204.554 cv
199.967 204.475 200.162 204.435 200.389 204.435 cv
200.783 204.439 201.135 204.611 201.445 204.956 cv
201.445 202.128 li
202.204 202.128 li
202.204 210.515 li
201.445 210.515 li
201.445 210.09 li
201.142 210.434 200.802 210.607 200.424 210.61 cv
200.556 205.031 mo
200.234 205.031 200.018 205.166 199.905 205.434 cv
199.792 205.702 199.735 206.14 199.735 206.746 cv
199.735 208.157 li
199.735 208.812 199.793 209.284 199.908 209.574 cv
200.022 209.864 200.245 210.009 200.575 210.009 cv
200.869 210.009 201.159 209.877 201.445 209.614 cv
201.445 205.456 li
201.142 205.173 200.845 205.031 200.556 205.031 cv
f
204.243 210.605 mo
203.942 210.605 203.714 210.494 203.555 210.271 cv
203.396 210.049 203.317 209.734 203.317 209.326 cv
203.317 204.525 li
204.081 204.525 li
204.081 209.169 li
204.081 209.473 204.127 209.688 204.218 209.816 cv
204.309 209.944 204.452 210.009 204.647 210.009 cv
204.988 210.009 205.342 209.813 205.71 209.422 cv
205.71 204.525 li
206.469 204.525 li
206.469 210.515 li
205.71 210.515 li
205.71 209.852 li
205.265 210.354 204.775 210.605 204.243 210.605 cv
f
210.747 210.515 mo
209.988 210.515 li
209.988 205.871 li
209.988 205.567 209.942 205.351 209.85 205.224 cv
209.757 205.096 209.612 205.031 209.417 205.031 cv
209.09 205.031 208.746 205.216 208.385 205.583 cv
208.385 210.515 li
207.626 210.515 li
207.626 204.525 li
208.385 204.525 li
208.385 205.148 li
208.827 204.673 209.308 204.435 209.827 204.435 cv
210.123 204.435 210.351 204.545 210.51 204.766 cv
210.668 204.987 210.747 205.302 210.747 205.709 cv
210.747 210.515 li
f
213.286 210.591 mo
212.878 210.591 212.597 210.479 212.441 210.254 cv
212.286 210.03 212.207 209.702 212.203 209.27 cv
212.203 205.031 li
211.48 205.031 li
211.48 204.525 li
212.203 204.525 li
212.203 202.675 li
212.962 202.675 li
212.962 204.525 li
213.959 204.525 li
213.959 205.031 li
212.962 205.031 li
212.962 209.199 li
212.962 209.503 212.998 209.711 213.068 209.824 cv
213.14 209.938 213.282 209.994 213.498 209.994 cv
213.637 209.994 213.778 209.98 213.924 209.953 cv
213.924 210.524 li
213.697 210.568 213.485 210.591 213.286 210.591 cv
f
0 0 mo
0 86.5708 li
7.89551 92.6128 18.4355 94.2598 27.9053 90.688 cv
75.7559 72.6406 li
83.5723 69.6919 89.7422 63.522 92.6904 55.7051 cv
110.738 7.85449 li
111.705 5.29102 112.28 2.64795 112.5 0 cv
0 0 li
cp
.147219 .0154116 0 0 cmyk
f
600 301.404 mo
533.847 342.424 li
526.469 346.981 524.182 356.656 528.738 364.034 cv
550.951 400 li
600 400 li
600 301.404 li
cp
f
84.1455 329.555 mo
82.376 323.196 77.3477 318.265 70.9561 316.618 cv
31.9551 306.572 li
25.5635 304.926 18.7783 306.814 14.1572 311.526 cv
0 325.96 li
0 400 li
76.8457 400 li
90.3369 386.244 li
94.959 381.532 96.7158 374.712 94.9463 368.354 cv
84.1455 329.555 li
cp
.657221 .328313 0 0 cmyk
f
399.257 240.636 mo
423.774 226.48 li
425.279 225.611 425.091 224.095 423.353 223.091 cv
399.679 209.423 li
397.941 208.42 395.313 208.311 393.809 209.18 cv
369.291 223.335 li
367.786 224.204 367.975 225.722 369.712 226.725 cv
393.386 240.393 li
395.124 241.396 397.752 241.505 399.257 240.636 cv
cp
.280034 .073518 .0233463 0 cmyk
f
361.157 212.554 mo
361.157 212.554 li
361.157 201.96 li
384.911 201.947 li
393.121 197.207 li
395.006 196.119 398.297 196.255 400.473 197.511 cv
408.133 201.934 li
431.908 201.921 li
431.908 212.815 li
431.962 213.552 431.551 214.262 430.646 214.785 cv
399.944 232.511 li
398.06 233.599 394.769 233.462 392.593 232.206 cv
362.947 215.09 li
361.692 214.365 361.087 213.427 361.157 212.554 cv
cp
.827268 .57586 .071809 .00112917 cmyk
f
396.532 196.478 mo
397.911 196.511 399.343 196.858 400.473 197.511 cv
408.133 201.934 li
431.908 201.921 li
431.908 212.815 li
431.962 213.552 431.551 214.262 430.646 214.785 cv
399.944 232.511 li
399.038 233.033 397.808 233.271 396.532 233.239 cv
396.532 196.478 li
cp
f
429.217 201.922 mo
431.908 201.921 li
431.908 212.815 li
431.962 213.552 431.551 214.262 430.646 214.785 cv
429.217 215.609 li
429.217 201.922 li
cp
.657221 .328313 0 0 cmyk
f
399.471 232.742 mo
397.846 233.438 395.495 233.399 393.595 232.675 cv
393.595 220.305 li
399.471 220.305 li
399.471 232.742 li
cp
f
399.944 221.655 mo
430.646 203.93 li
432.529 202.842 432.294 200.941 430.118 199.685 cv
400.473 182.57 li
398.297 181.313 395.006 181.177 393.121 182.265 cv
362.42 199.991 li
360.535 201.078 360.771 202.979 362.947 204.235 cv
392.593 221.351 li
394.769 222.606 398.06 222.743 399.944 221.655 cv
cp
.147219 .0154116 0 0 cmyk
f
399.392 218.465 mo
425.119 203.61 li
426.698 202.699 426.501 201.106 424.678 200.054 cv
399.835 185.711 li
398.012 184.658 395.253 184.544 393.674 185.456 cv
367.946 200.31 li
366.367 201.222 366.564 202.813 368.388 203.866 cv
393.23 218.209 li
395.054 219.262 397.813 219.376 399.392 218.465 cv
cp
.657221 .328313 0 0 cmyk
f
372.45 215.349 mo
372.45 216.14 373.005 217.102 373.69 217.497 cv
374.375 217.893 374.93 217.571 374.93 216.781 cv
374.93 215.99 374.375 215.028 373.69 214.633 cv
373.005 214.237 372.45 214.559 372.45 215.349 cv
cp
.147219 .0154116 0 0 cmyk
f
368.46 213.046 mo
368.46 213.836 369.016 214.798 369.7 215.193 cv
370.385 215.589 370.94 215.269 370.94 214.478 cv
370.94 213.687 370.385 212.725 369.7 212.329 cv
369.016 211.935 368.46 212.255 368.46 213.046 cv
cp
f
364.471 210.742 mo
364.471 211.533 365.025 212.494 365.711 212.89 cv
366.396 213.285 366.95 212.965 366.95 212.174 cv
366.95 211.383 366.396 210.422 365.711 210.026 cv
365.025 209.631 364.471 209.951 364.471 210.742 cv
cp
f
361.157 195.625 mo
361.157 195.625 li
361.157 185.031 li
384.911 185.018 li
393.121 180.278 li
395.006 179.19 398.297 179.326 400.473 180.583 cv
408.133 185.005 li
431.908 184.992 li
431.908 195.887 li
431.962 196.623 431.551 197.333 430.646 197.856 cv
399.944 215.582 li
398.06 216.67 394.769 216.533 392.593 215.277 cv
362.947 198.162 li
361.692 197.437 361.087 196.499 361.157 195.625 cv
cp
.827268 .57586 .071809 .00112917 cmyk
f
396.532 179.549 mo
397.911 179.583 399.343 179.93 400.473 180.583 cv
408.133 185.005 li
431.908 184.992 li
431.908 195.887 li
431.962 196.623 431.551 197.333 430.646 197.856 cv
399.944 215.582 li
399.038 216.104 397.808 216.342 396.532 216.311 cv
396.532 179.549 li
cp
f
429.217 184.993 mo
431.908 184.992 li
431.908 195.887 li
431.962 196.623 431.551 197.333 430.646 197.856 cv
429.217 198.681 li
429.217 184.993 li
cp
.657221 .328313 0 0 cmyk
f
399.471 215.813 mo
397.846 216.51 395.495 216.471 393.595 215.746 cv
393.595 203.376 li
399.471 203.376 li
399.471 215.813 li
cp
f
399.944 204.727 mo
430.646 187.001 li
432.529 185.913 432.294 184.013 430.118 182.756 cv
400.473 165.641 li
398.297 164.385 395.006 164.249 393.121 165.336 cv
362.42 183.062 li
360.535 184.15 360.771 186.05 362.947 187.306 cv
392.593 204.422 li
394.769 205.678 398.06 205.814 399.944 204.727 cv
cp
.147219 .0154116 0 0 cmyk
f
399.392 201.536 mo
425.119 186.682 li
426.698 185.77 426.501 184.178 424.678 183.125 cv
399.835 168.782 li
398.012 167.729 395.253 167.615 393.674 168.527 cv
367.946 183.381 li
366.367 184.292 366.564 185.885 368.388 186.938 cv
393.23 201.28 li
395.054 202.333 397.813 202.447 399.392 201.536 cv
cp
.657221 .328313 0 0 cmyk
f
372.45 198.42 mo
372.45 199.211 373.005 200.172 373.69 200.568 cv
374.375 200.963 374.93 200.643 374.93 199.852 cv
374.93 199.062 374.375 198.1 373.69 197.704 cv
373.005 197.309 372.45 197.629 372.45 198.42 cv
cp
.147219 .0154116 0 0 cmyk
f
368.46 196.117 mo
368.46 196.908 369.016 197.869 369.7 198.265 cv
370.385 198.66 370.94 198.339 370.94 197.549 cv
370.94 196.758 370.385 195.796 369.7 195.401 cv
369.016 195.005 368.46 195.326 368.46 196.117 cv
cp
.657221 .328313 0 0 cmyk
f
364.471 193.813 mo
364.471 194.604 365.025 195.565 365.711 195.961 cv
366.396 196.356 366.95 196.036 366.95 195.245 cv
366.95 194.455 366.396 193.493 365.711 193.097 cv
365.025 192.702 364.471 193.022 364.471 193.813 cv
cp
f
361.157 178.696 mo
361.157 178.696 li
361.157 168.103 li
384.911 168.089 li
393.121 163.349 li
395.006 162.261 398.297 162.397 400.473 163.654 cv
408.133 168.077 li
431.908 168.063 li
431.908 178.958 li
431.962 179.694 431.551 180.405 430.646 180.927 cv
399.944 198.653 li
398.06 199.741 394.769 199.604 392.593 198.348 cv
362.947 181.233 li
361.692 180.508 361.087 179.57 361.157 178.696 cv
cp
.827268 .57586 .071809 .00112917 cmyk
f
396.532 162.62 mo
397.911 162.654 399.343 163.001 400.473 163.654 cv
408.133 168.077 li
431.908 168.063 li
431.908 178.958 li
431.962 179.694 431.551 180.405 430.646 180.927 cv
399.944 198.653 li
399.038 199.176 397.808 199.413 396.532 199.382 cv
396.532 162.62 li
cp
f
429.217 168.064 mo
431.908 168.063 li
431.908 178.958 li
431.962 179.694 431.551 180.405 430.646 180.927 cv
429.217 181.752 li
429.217 168.064 li
cp
.657221 .328313 0 0 cmyk
f
399.471 198.885 mo
397.846 199.581 395.495 199.542 393.595 198.817 cv
393.595 186.447 li
399.471 186.447 li
399.471 198.885 li
cp
f
399.944 187.798 mo
430.646 170.072 li
432.529 168.984 432.294 167.084 430.118 165.828 cv
400.473 148.712 li
398.297 147.456 395.006 147.32 393.121 148.408 cv
362.42 166.133 li
360.535 167.221 360.771 169.121 362.947 170.377 cv
392.593 187.493 li
394.769 188.749 398.06 188.886 399.944 187.798 cv
cp
.147219 .0154116 0 0 cmyk
f
362.947 168.293 mo
392.593 185.408 li
394.769 186.665 398.06 186.801 399.944 185.713 cv
430.646 167.987 li
431.065 167.745 431.374 167.46 431.586 167.153 cv
432.233 168.195 431.939 169.325 430.646 170.072 cv
399.944 187.798 li
398.06 188.886 394.769 188.749 392.593 187.493 cv
362.947 170.377 li
361.257 169.401 360.743 168.038 361.479 166.967 cv
361.775 167.442 362.266 167.899 362.947 168.293 cv
cp
0 0 0 0 cmyk
f
372.45 181.492 mo
372.45 182.282 373.005 183.244 373.69 183.639 cv
374.375 184.035 374.93 183.714 374.93 182.923 cv
374.93 182.133 374.375 181.171 373.69 180.775 cv
373.005 180.38 372.45 180.701 372.45 181.492 cv
cp
.657221 .328313 0 0 cmyk
f
368.46 179.188 mo
368.46 179.979 369.016 180.94 369.7 181.336 cv
370.385 181.731 370.94 181.411 370.94 180.62 cv
370.94 179.829 370.385 178.868 369.7 178.472 cv
369.016 178.077 368.46 178.397 368.46 179.188 cv
cp
.147219 .0154116 0 0 cmyk
f
364.471 176.884 mo
364.471 177.675 365.025 178.637 365.711 179.032 cv
366.396 179.428 366.95 179.107 366.95 178.316 cv
366.95 177.525 366.396 176.564 365.711 176.168 cv
365.025 175.773 364.471 176.094 364.471 176.884 cv
cp
f
398.129 176.808 mo
412.495 168.513 li
413.377 168.004 413.267 167.115 412.248 166.527 cv
398.376 158.518 li
397.357 157.93 395.817 157.866 394.936 158.375 cv
380.569 166.67 li
379.688 167.179 379.798 168.068 380.816 168.656 cv
394.688 176.666 li
395.707 177.253 397.247 177.317 398.129 176.808 cv
cp
.657221 .328313 0 0 cmyk
f
396.753 169.863 mo
398.741 168.715 li
398.863 168.645 398.848 168.522 398.707 168.44 cv
396.787 167.333 li
396.646 167.251 396.434 167.242 396.312 167.313 cv
394.323 168.46 li
394.202 168.531 394.217 168.654 394.357 168.735 cv
396.277 169.843 li
396.418 169.925 396.631 169.934 396.753 169.863 cv
cp
.147219 .0154116 0 0 cmyk
f
412.495 168.514 mo
412.455 168.537 li
412.248 168.395 li
398.376 160.386 li
397.357 159.798 395.817 159.734 394.936 160.243 cv
380.609 168.514 li
379.797 167.933 379.755 167.141 380.569 166.67 cv
394.936 158.375 li
395.817 157.866 397.357 157.93 398.376 158.518 cv
412.248 166.527 li
413.267 167.115 413.377 168.004 412.495 168.514 cv
cp
.827268 .57586 .071809 .00112917 cmyk
f
453.398 271.096 mo
477.916 256.94 li
479.421 256.072 479.231 254.555 477.494 253.551 cv
453.82 239.883 li
452.083 238.88 449.454 238.771 447.95 239.64 cv
423.432 253.795 li
421.928 254.664 422.116 256.182 423.854 257.185 cv
447.527 270.853 li
449.265 271.855 451.894 271.965 453.398 271.096 cv
cp
.280034 .073518 .0233463 0 cmyk
f
415.299 243.014 mo
415.299 243.014 li
415.299 232.42 li
439.052 232.407 li
447.263 227.667 li
449.146 226.579 452.438 226.715 454.614 227.972 cv
462.274 232.394 li
486.049 232.381 li
486.049 243.275 li
486.103 244.012 485.692 244.723 484.787 245.245 cv
454.085 262.971 li
452.201 264.059 448.909 263.922 446.733 262.666 cv
417.089 245.55 li
415.834 244.825 415.229 243.887 415.299 243.014 cv
cp
.827268 .57586 .071809 .00112917 cmyk
f
450.674 226.938 mo
452.053 226.971 453.483 227.318 454.614 227.972 cv
462.274 232.394 li
486.049 232.381 li
486.049 243.275 li
486.103 244.012 485.692 244.723 484.787 245.245 cv
454.085 262.971 li
453.18 263.493 451.949 263.73 450.674 263.699 cv
450.674 226.938 li
cp
f
483.358 232.382 mo
486.049 232.381 li
486.049 243.275 li
486.103 244.012 485.692 244.723 484.787 245.245 cv
483.358 246.069 li
483.358 232.382 li
cp
.657221 .328313 0 0 cmyk
f
453.612 263.202 mo
451.987 263.898 449.636 263.859 447.735 263.135 cv
447.735 250.765 li
453.612 250.765 li
453.612 263.202 li
cp
f
454.085 252.115 mo
484.787 234.39 li
486.671 233.302 486.435 231.401 484.259 230.146 cv
454.614 213.03 li
452.438 211.773 449.146 211.637 447.263 212.725 cv
416.562 230.45 li
414.677 231.538 414.913 233.438 417.089 234.695 cv
446.733 251.811 li
448.909 253.066 452.201 253.203 454.085 252.115 cv
cp
.147219 .0154116 0 0 cmyk
f
453.532 248.925 mo
479.261 234.07 li
480.84 233.159 480.642 231.566 478.818 230.514 cv
453.976 216.171 li
452.152 215.118 449.395 215.004 447.815 215.915 cv
422.087 230.77 li
420.508 231.682 420.706 233.273 422.529 234.326 cv
447.372 248.669 li
449.195 249.722 451.953 249.836 453.532 248.925 cv
cp
.657221 .328313 0 0 cmyk
f
426.591 245.809 mo
426.591 246.6 427.146 247.562 427.831 247.957 cv
428.516 248.353 429.071 248.031 429.071 247.241 cv
429.071 246.45 428.516 245.488 427.831 245.093 cv
427.146 244.697 426.591 245.019 426.591 245.809 cv
cp
.147219 .0154116 0 0 cmyk
f
422.602 243.506 mo
422.602 244.296 423.156 245.258 423.842 245.653 cv
424.526 246.049 425.082 245.729 425.082 244.938 cv
425.082 244.146 424.526 243.185 423.842 242.79 cv
423.156 242.395 422.602 242.715 422.602 243.506 cv
cp
.657221 .328313 0 0 cmyk
f
418.611 241.202 mo
418.611 241.993 419.167 242.954 419.852 243.35 cv
420.536 243.745 421.092 243.425 421.092 242.634 cv
421.092 241.843 420.536 240.882 419.852 240.486 cv
419.167 240.091 418.611 240.411 418.611 241.202 cv
cp
.147219 .0154116 0 0 cmyk
f
415.299 226.085 mo
415.299 226.085 li
415.299 215.491 li
439.052 215.479 li
447.263 210.738 li
449.146 209.65 452.438 209.786 454.614 211.043 cv
462.274 215.465 li
486.049 215.452 li
486.049 226.347 li
486.103 227.083 485.692 227.794 484.787 228.316 cv
454.085 246.042 li
452.201 247.13 448.909 246.993 446.733 245.737 cv
417.089 228.621 li
415.834 227.896 415.229 226.958 415.299 226.085 cv
cp
.827268 .57586 .071809 .00112917 cmyk
f
450.674 210.009 mo
452.053 210.042 453.483 210.39 454.614 211.043 cv
462.274 215.465 li
486.049 215.452 li
486.049 226.347 li
486.103 227.083 485.692 227.794 484.787 228.316 cv
454.085 246.042 li
453.18 246.564 451.949 246.802 450.674 246.771 cv
450.674 210.009 li
cp
f
483.358 215.453 mo
486.049 215.452 li
486.049 226.347 li
486.103 227.083 485.692 227.794 484.787 228.316 cv
483.358 229.141 li
483.358 215.453 li
cp
.657221 .328313 0 0 cmyk
f
453.612 246.273 mo
451.987 246.97 449.636 246.931 447.735 246.206 cv
447.735 233.836 li
453.612 233.836 li
453.612 246.273 li
cp
f
454.085 235.187 mo
484.787 217.461 li
486.671 216.373 486.435 214.473 484.259 213.217 cv
454.614 196.101 li
452.438 194.845 449.146 194.708 447.263 195.796 cv
416.562 213.521 li
414.677 214.609 414.913 216.51 417.089 217.767 cv
446.733 234.882 li
448.909 236.138 452.201 236.274 454.085 235.187 cv
cp
.147219 .0154116 0 0 cmyk
f
453.532 231.996 mo
479.261 217.142 li
480.84 216.23 480.642 214.638 478.818 213.585 cv
453.976 199.242 li
452.152 198.189 449.395 198.075 447.815 198.987 cv
422.087 213.841 li
420.508 214.753 420.706 216.345 422.529 217.397 cv
447.372 231.74 li
449.195 232.793 451.953 232.907 453.532 231.996 cv
cp
.657221 .328313 0 0 cmyk
f
426.591 228.88 mo
426.591 229.671 427.146 230.633 427.831 231.028 cv
428.516 231.424 429.071 231.103 429.071 230.313 cv
429.071 229.521 428.516 228.56 427.831 228.164 cv
427.146 227.769 426.591 228.09 426.591 228.88 cv
cp
.147219 .0154116 0 0 cmyk
f
422.602 226.577 mo
422.602 227.367 423.156 228.329 423.842 228.725 cv
424.526 229.12 425.082 228.8 425.082 228.009 cv
425.082 227.218 424.526 226.256 423.842 225.861 cv
423.156 225.466 422.602 225.786 422.602 226.577 cv
cp
f
418.611 224.273 mo
418.611 225.064 419.167 226.025 419.852 226.421 cv
420.536 226.816 421.092 226.496 421.092 225.705 cv
421.092 224.914 420.536 223.953 419.852 223.558 cv
419.167 223.162 418.611 223.482 418.611 224.273 cv
cp
.657221 .328313 0 0 cmyk
f
415.299 209.156 mo
415.299 209.156 li
415.299 198.563 li
439.052 198.549 li
447.263 193.809 li
449.146 192.721 452.438 192.857 454.614 194.114 cv
462.274 198.537 li
486.049 198.523 li
486.049 209.418 li
486.103 210.154 485.692 210.864 484.787 211.388 cv
454.085 229.113 li
452.201 230.201 448.909 230.064 446.733 228.809 cv
417.089 211.692 li
415.834 210.968 415.229 210.029 415.299 209.156 cv
cp
.827268 .57586 .071809 .00112917 cmyk
f
450.674 193.08 mo
452.053 193.114 453.483 193.461 454.614 194.114 cv
462.274 198.537 li
486.049 198.523 li
486.049 209.418 li
486.103 210.154 485.692 210.864 484.787 211.388 cv
454.085 229.113 li
453.18 229.636 451.949 229.873 450.674 229.842 cv
450.674 193.08 li
cp
f
483.358 198.525 mo
486.049 198.523 li
486.049 209.418 li
486.103 210.154 485.692 210.864 484.787 211.388 cv
483.358 212.212 li
483.358 198.525 li
cp
.657221 .328313 0 0 cmyk
f
453.612 229.345 mo
451.987 230.041 449.636 230.002 447.735 229.277 cv
447.735 216.907 li
453.612 216.907 li
453.612 229.345 li
cp
f
454.085 218.258 mo
484.787 200.532 li
486.671 199.444 486.435 197.544 484.259 196.288 cv
454.614 179.172 li
452.438 177.916 449.146 177.78 447.263 178.868 cv
416.562 196.593 li
414.677 197.681 414.913 199.582 417.089 200.837 cv
446.733 217.953 li
448.909 219.209 452.201 219.346 454.085 218.258 cv
cp
.147219 .0154116 0 0 cmyk
f
417.089 198.753 mo
446.733 215.868 li
448.909 217.124 452.201 217.261 454.085 216.173 cv
484.787 198.447 li
485.207 198.205 485.516 197.92 485.727 197.613 cv
486.374 198.655 486.081 199.785 484.787 200.532 cv
454.085 218.258 li
452.201 219.346 448.909 219.209 446.733 217.953 cv
417.089 200.837 li
415.398 199.861 414.885 198.498 415.621 197.427 cv
415.916 197.902 416.407 198.359 417.089 198.753 cv
cp
0 0 0 0 cmyk
f
426.591 211.951 mo
426.591 212.742 427.146 213.704 427.831 214.1 cv
428.516 214.495 429.071 214.174 429.071 213.384 cv
429.071 212.593 428.516 211.631 427.831 211.235 cv
427.146 210.84 426.591 211.161 426.591 211.951 cv
cp
.657221 .328313 0 0 cmyk
f
422.602 209.648 mo
422.602 210.438 423.156 211.4 423.842 211.796 cv
424.526 212.191 425.082 211.871 425.082 211.08 cv
425.082 210.289 424.526 209.327 423.842 208.932 cv
423.156 208.537 422.602 208.857 422.602 209.648 cv
cp
f
418.611 207.345 mo
418.611 208.136 419.167 209.097 419.852 209.492 cv
420.536 209.888 421.092 209.567 421.092 208.776 cv
421.092 207.985 420.536 207.024 419.852 206.629 cv
419.167 206.233 418.611 206.554 418.611 207.345 cv
cp
.147219 .0154116 0 0 cmyk
f
452.27 207.269 mo
466.637 198.974 li
467.519 198.464 467.408 197.575 466.39 196.987 cv
452.518 188.978 li
451.499 188.39 449.959 188.327 449.077 188.835 cv
434.71 197.13 li
433.828 197.639 433.939 198.528 434.957 199.116 cv
448.83 207.126 li
449.848 207.713 451.388 207.777 452.27 207.269 cv
cp
.657221 .328313 0 0 cmyk
f
450.895 200.323 mo
452.882 199.175 li
453.004 199.105 452.988 198.982 452.848 198.901 cv
450.929 197.792 li
450.788 197.711 450.574 197.702 450.452 197.773 cv
448.465 198.92 li
448.343 198.991 448.358 199.114 448.499 199.195 cv
450.418 200.303 li
450.56 200.385 450.772 200.394 450.895 200.323 cv
cp
.147219 .0154116 0 0 cmyk
f
466.637 198.974 mo
466.596 198.997 li
466.39 198.855 li
452.518 190.846 li
451.499 190.258 449.959 190.194 449.077 190.703 cv
434.751 198.975 li
433.938 198.393 433.896 197.601 434.71 197.13 cv
449.077 188.835 li
449.959 188.327 451.499 188.39 452.518 188.978 cv
466.39 196.987 li
467.408 197.575 467.519 198.464 466.637 198.974 cv
cp
.827268 .57586 .071809 .00112917 cmyk
f
456.813 237.712 mo
456.813 238.279 457.212 238.509 457.703 238.226 cv
458.194 237.941 458.592 237.252 458.592 236.685 cv
458.592 236.118 458.194 235.888 457.703 236.172 cv
457.212 236.455 456.813 237.145 456.813 237.712 cv
cp
.147219 .0154116 0 0 cmyk
f
459.572 236.13 mo
459.572 236.696 459.971 236.927 460.462 236.643 cv
460.953 236.359 461.351 235.67 461.351 235.103 cv
461.351 234.535 460.953 234.306 460.462 234.589 cv
459.971 234.873 459.572 235.563 459.572 236.13 cv
cp
f
456.813 241.041 mo
456.813 241.608 457.212 241.838 457.703 241.555 cv
458.194 241.271 458.592 240.581 458.592 240.015 cv
458.592 239.447 458.194 239.218 457.703 239.501 cv
457.212 239.784 456.813 240.474 456.813 241.041 cv
cp
f
459.572 239.459 mo
459.572 240.026 459.971 240.256 460.462 239.973 cv
460.953 239.688 461.351 238.999 461.351 238.432 cv
461.351 237.865 460.953 237.635 460.462 237.919 cv
459.971 238.202 459.572 238.892 459.572 239.459 cv
cp
.657221 .328313 0 0 cmyk
f
507.539 301.556 mo
532.057 287.4 li
533.562 286.532 533.373 285.015 531.636 284.011 cv
507.962 270.343 li
506.225 269.34 503.596 269.231 502.091 270.1 cv
477.573 284.255 li
476.068 285.124 476.257 286.642 477.995 287.645 cv
501.669 301.313 li
503.406 302.315 506.034 302.425 507.539 301.556 cv
cp
.280034 .073518 .0233463 0 cmyk
f
469.44 273.474 mo
469.44 273.474 li
469.44 262.88 li
493.193 262.867 li
501.404 258.127 li
503.288 257.039 506.579 257.175 508.755 258.432 cv
516.415 262.854 li
540.19 262.841 li
540.19 273.735 li
540.244 274.472 539.833 275.183 538.928 275.705 cv
508.227 293.431 li
506.342 294.519 503.051 294.382 500.875 293.126 cv
471.23 276.011 li
469.975 275.286 469.369 274.347 469.44 273.474 cv
cp
.827268 .57586 .071809 .00112917 cmyk
f
504.814 257.397 mo
506.193 257.432 507.625 257.778 508.755 258.432 cv
516.415 262.854 li
540.19 262.841 li
540.19 273.735 li
540.244 274.472 539.833 275.183 538.928 275.705 cv
508.227 293.431 li
507.321 293.953 506.09 294.19 504.814 294.159 cv
504.814 257.397 li
cp
f
537.5 262.842 mo
540.19 262.841 li
540.19 273.735 li
540.244 274.472 539.833 275.183 538.928 275.705 cv
537.5 276.529 li
537.5 262.842 li
cp
.657221 .328313 0 0 cmyk
f
507.753 293.662 mo
506.128 294.358 503.777 294.319 501.877 293.595 cv
501.877 281.225 li
507.753 281.225 li
507.753 293.662 li
cp
f
508.227 282.575 mo
538.928 264.85 li
540.813 263.762 540.576 261.861 538.4 260.605 cv
508.755 243.49 li
506.579 242.233 503.288 242.098 501.404 243.186 cv
470.702 260.911 li
468.818 261.999 469.055 263.898 471.23 265.155 cv
500.875 282.271 li
503.051 283.526 506.342 283.663 508.227 282.575 cv
cp
.147219 .0154116 0 0 cmyk
f
507.674 279.385 mo
533.402 264.53 li
534.981 263.619 534.783 262.026 532.96 260.974 cv
508.117 246.631 li
506.294 245.578 503.535 245.464 501.956 246.376 cv
476.229 261.229 li
474.649 262.142 474.848 263.733 476.671 264.786 cv
501.514 279.13 li
503.337 280.182 506.095 280.297 507.674 279.385 cv
cp
.657221 .328313 0 0 cmyk
f
480.732 276.269 mo
480.732 277.06 481.288 278.021 481.973 278.417 cv
482.657 278.813 483.213 278.491 483.213 277.701 cv
483.213 276.91 482.657 275.948 481.973 275.553 cv
481.288 275.157 480.732 275.479 480.732 276.269 cv
cp
.147219 .0154116 0 0 cmyk
f
476.742 273.966 mo
476.742 274.756 477.298 275.718 477.982 276.113 cv
478.668 276.509 479.223 276.188 479.223 275.397 cv
479.223 274.606 478.668 273.645 477.982 273.25 cv
477.298 272.854 476.742 273.175 476.742 273.966 cv
cp
.657221 .328313 0 0 cmyk
f
472.753 271.662 mo
472.753 272.453 473.309 273.414 473.993 273.81 cv
474.678 274.205 475.233 273.885 475.233 273.094 cv
475.233 272.303 474.678 271.342 473.993 270.946 cv
473.309 270.551 472.753 270.871 472.753 271.662 cv
cp
.147219 .0154116 0 0 cmyk
f
469.44 256.545 mo
469.44 256.545 li
469.44 245.951 li
493.193 245.938 li
501.404 241.198 li
503.288 240.11 506.579 240.246 508.755 241.503 cv
516.415 245.925 li
540.19 245.912 li
540.19 256.807 li
540.244 257.543 539.833 258.254 538.928 258.776 cv
508.227 276.502 li
506.342 277.59 503.051 277.453 500.875 276.197 cv
471.23 259.082 li
469.975 258.356 469.369 257.418 469.44 256.545 cv
cp
.827268 .57586 .071809 .00112917 cmyk
f
504.814 240.469 mo
506.193 240.503 507.625 240.85 508.755 241.503 cv
516.415 245.925 li
540.19 245.912 li
540.19 256.807 li
540.244 257.543 539.833 258.254 538.928 258.776 cv
508.227 276.502 li
507.321 277.024 506.09 277.262 504.814 277.23 cv
504.814 240.469 li
cp
f
537.5 245.913 mo
540.19 245.912 li
540.19 256.807 li
540.244 257.543 539.833 258.254 538.928 258.776 cv
537.5 259.601 li
537.5 245.913 li
cp
.657221 .328313 0 0 cmyk
f
507.753 276.733 mo
506.128 277.43 503.777 277.391 501.877 276.666 cv
501.877 264.296 li
507.753 264.296 li
507.753 276.733 li
cp
f
508.227 265.646 mo
538.928 247.921 li
540.813 246.833 540.576 244.933 538.4 243.677 cv
508.755 226.562 li
506.579 225.305 503.288 225.169 501.404 226.257 cv
470.702 243.982 li
468.818 245.07 469.055 246.97 471.23 248.227 cv
500.875 265.342 li
503.051 266.598 506.342 266.734 508.227 265.646 cv
cp
.147219 .0154116 0 0 cmyk
f
507.674 262.456 mo
533.402 247.602 li
534.981 246.69 534.783 245.098 532.96 244.045 cv
508.117 229.702 li
506.294 228.649 503.535 228.535 501.956 229.446 cv
476.229 244.301 li
474.649 245.213 474.848 246.805 476.671 247.857 cv
501.514 262.201 li
503.337 263.253 506.095 263.368 507.674 262.456 cv
cp
.657221 .328313 0 0 cmyk
f
480.732 259.34 mo
480.732 260.131 481.288 261.093 481.973 261.488 cv
482.657 261.884 483.213 261.563 483.213 260.772 cv
483.213 259.981 482.657 259.02 481.973 258.624 cv
481.288 258.229 480.732 258.55 480.732 259.34 cv
cp
f
476.742 257.037 mo
476.742 257.827 477.298 258.789 477.982 259.185 cv
478.668 259.58 479.223 259.26 479.223 258.469 cv
479.223 257.678 478.668 256.716 477.982 256.321 cv
477.298 255.926 476.742 256.246 476.742 257.037 cv
cp
f
472.753 254.733 mo
472.753 255.524 473.309 256.485 473.993 256.881 cv
474.678 257.276 475.233 256.956 475.233 256.165 cv
475.233 255.374 474.678 254.413 473.993 254.018 cv
473.309 253.622 472.753 253.942 472.753 254.733 cv
cp
.147219 .0154116 0 0 cmyk
f
469.44 239.616 mo
469.44 239.616 li
469.44 229.022 li
493.193 229.01 li
501.404 224.27 li
503.288 223.182 506.579 223.317 508.755 224.574 cv
516.415 228.996 li
540.19 228.983 li
540.19 239.878 li
540.244 240.614 539.833 241.325 538.928 241.848 cv
508.227 259.573 li
506.342 260.661 503.051 260.524 500.875 259.269 cv
471.23 242.153 li
469.975 241.428 469.369 240.489 469.44 239.616 cv
cp
.827268 .57586 .071809 .00112917 cmyk
f
504.814 223.54 mo
506.193 223.574 507.625 223.921 508.755 224.574 cv
516.415 228.996 li
540.19 228.983 li
540.19 239.878 li
540.244 240.614 539.833 241.325 538.928 241.848 cv
508.227 259.573 li
507.321 260.096 506.09 260.333 504.814 260.302 cv
504.814 223.54 li
cp
f
537.5 228.984 mo
540.19 228.983 li
540.19 239.878 li
540.244 240.614 539.833 241.325 538.928 241.848 cv
537.5 242.672 li
537.5 228.984 li
cp
.657221 .328313 0 0 cmyk
f
507.753 259.805 mo
506.128 260.501 503.777 260.462 501.877 259.737 cv
501.877 247.367 li
507.753 247.367 li
507.753 259.805 li
cp
f
508.227 248.718 mo
538.928 230.992 li
540.813 229.904 540.576 228.004 538.4 226.748 cv
508.755 209.633 li
506.579 208.376 503.288 208.24 501.404 209.328 cv
470.702 227.053 li
468.818 228.141 469.055 230.041 471.23 231.298 cv
500.875 248.413 li
503.051 249.669 506.342 249.806 508.227 248.718 cv
cp
.147219 .0154116 0 0 cmyk
f
471.23 229.213 mo
500.875 246.328 li
503.051 247.584 506.342 247.721 508.227 246.633 cv
538.928 228.907 li
539.348 228.665 539.657 228.381 539.868 228.073 cv
540.516 229.115 540.222 230.245 538.928 230.992 cv
508.227 248.718 li
506.342 249.806 503.051 249.669 500.875 248.413 cv
471.23 231.298 li
469.539 230.321 469.025 228.958 469.762 227.888 cv
470.058 228.362 470.549 228.819 471.23 229.213 cv
cp
0 0 0 0 cmyk
f
480.732 242.411 mo
480.732 243.202 481.288 244.164 481.973 244.56 cv
482.657 244.955 483.213 244.634 483.213 243.844 cv
483.213 243.053 482.657 242.091 481.973 241.695 cv
481.288 241.3 480.732 241.621 480.732 242.411 cv
cp
.147219 .0154116 0 0 cmyk
f
476.742 240.108 mo
476.742 240.898 477.298 241.86 477.982 242.256 cv
478.668 242.651 479.223 242.331 479.223 241.54 cv
479.223 240.749 478.668 239.787 477.982 239.393 cv
477.298 238.997 476.742 239.317 476.742 240.108 cv
cp
f
472.753 237.805 mo
472.753 238.596 473.309 239.557 473.993 239.952 cv
474.678 240.348 475.233 240.027 475.233 239.236 cv
475.233 238.445 474.678 237.484 473.993 237.089 cv
473.309 236.693 472.753 237.014 472.753 237.805 cv
cp
.657221 .328313 0 0 cmyk
f
506.411 237.729 mo
520.778 229.434 li
521.659 228.925 521.549 228.035 520.531 227.447 cv
506.658 219.438 li
505.641 218.851 504.101 218.786 503.219 219.296 cv
488.852 227.59 li
487.97 228.1 488.08 228.988 489.099 229.576 cv
502.971 237.586 li
503.989 238.174 505.529 238.237 506.411 237.729 cv
cp
f
505.035 230.783 mo
507.023 229.636 li
507.146 229.565 507.13 229.442 506.989 229.36 cv
505.069 228.253 li
504.929 228.171 504.716 228.162 504.594 228.232 cv
502.606 229.381 li
502.484 229.451 502.499 229.574 502.641 229.655 cv
504.56 230.764 li
504.7 230.845 504.913 230.854 505.035 230.783 cv
cp
.147219 .0154116 0 0 cmyk
f
520.778 229.434 mo
520.737 229.457 li
520.531 229.315 li
506.658 221.306 li
505.641 220.718 504.101 220.654 503.219 221.163 cv
488.893 229.435 li
488.079 228.853 488.037 228.061 488.852 227.59 cv
503.219 219.296 li
504.101 218.786 505.641 218.851 506.658 219.438 cv
520.531 227.447 li
521.549 228.035 521.659 228.925 520.778 229.434 cv
cp
.827268 .57586 .071809 .00112917 cmyk
f
510.563 251.485 mo
510.563 252.052 510.962 252.282 511.453 251.998 cv
511.944 251.715 512.342 251.025 512.342 250.458 cv
512.342 249.891 511.944 249.661 511.453 249.944 cv
510.962 250.229 510.563 250.918 510.563 251.485 cv
cp
.147219 .0154116 0 0 cmyk
f
513.322 249.902 mo
513.322 250.47 513.721 250.699 514.212 250.416 cv
514.703 250.133 515.101 249.442 515.101 248.876 cv
515.101 248.309 514.703 248.079 514.212 248.362 cv
513.721 248.646 513.322 249.336 513.322 249.902 cv
cp
f
510.563 254.814 mo
510.563 255.382 510.962 255.611 511.453 255.328 cv
511.944 255.044 512.342 254.354 512.342 253.787 cv
512.342 253.221 511.944 252.99 511.453 253.274 cv
510.962 253.558 510.563 254.247 510.563 254.814 cv
cp
f
513.322 253.232 mo
513.322 253.799 513.721 254.029 514.212 253.745 cv
514.703 253.462 515.101 252.772 515.101 252.205 cv
515.101 251.638 514.703 251.408 514.212 251.691 cv
513.721 251.976 513.322 252.665 513.322 253.232 cv
cp
.657221 .328313 0 0 cmyk
f
510.563 268.414 mo
510.563 268.98 510.962 269.211 511.453 268.927 cv
511.944 268.644 512.342 267.954 512.342 267.387 cv
512.342 266.819 511.944 266.59 511.453 266.873 cv
510.962 267.157 510.563 267.847 510.563 268.414 cv
cp
f
513.322 266.831 mo
513.322 267.398 513.721 267.628 514.212 267.345 cv
514.703 267.062 515.101 266.371 515.101 265.805 cv
515.101 265.237 514.703 265.008 514.212 265.291 cv
513.721 265.574 513.322 266.265 513.322 266.831 cv
cp
.147219 .0154116 0 0 cmyk
f
510.563 271.743 mo
510.563 272.311 510.962 272.54 511.453 272.257 cv
511.944 271.973 512.342 271.283 512.342 270.716 cv
512.342 270.149 511.944 269.919 511.453 270.203 cv
510.962 270.486 510.563 271.176 510.563 271.743 cv
cp
.657221 .328313 0 0 cmyk
f
513.322 270.161 mo
513.322 270.728 513.721 270.958 514.212 270.674 cv
514.703 270.391 515.101 269.701 515.101 269.134 cv
515.101 268.566 514.703 268.337 514.212 268.62 cv
513.721 268.904 513.322 269.594 513.322 270.161 cv
cp
.147219 .0154116 0 0 cmyk
f
510.563 285.343 mo
510.563 285.909 510.962 286.14 511.453 285.855 cv
511.944 285.572 512.342 284.883 512.342 284.315 cv
512.342 283.748 511.944 283.519 511.453 283.802 cv
510.962 284.086 510.563 284.775 510.563 285.343 cv
cp
f
513.322 283.76 mo
513.322 284.327 513.721 284.557 514.212 284.273 cv
514.703 283.99 515.101 283.3 515.101 282.733 cv
515.101 282.166 514.703 281.937 514.212 282.22 cv
513.721 282.503 513.322 283.193 513.322 283.76 cv
cp
.657221 .328313 0 0 cmyk
f
510.563 288.672 mo
510.563 289.239 510.962 289.469 511.453 289.186 cv
511.944 288.901 512.342 288.212 512.342 287.645 cv
512.342 287.078 511.944 286.848 511.453 287.132 cv
510.962 287.415 510.563 288.104 510.563 288.672 cv
cp
.147219 .0154116 0 0 cmyk
f
513.322 287.09 mo
513.322 287.656 513.721 287.887 514.212 287.603 cv
514.703 287.319 515.101 286.63 515.101 286.063 cv
515.101 285.495 514.703 285.266 514.212 285.549 cv
513.721 285.833 513.322 286.522 513.322 287.09 cv
cp
f
509.689 197.63 mo
511.681 196.828 li
510.132 195.637 li
509.689 197.63 li
cp
.657221 .328313 0 0 cmyk
f
508.693 176.051 mo
510.628 175.267 li
510.491 176.078 li
508.693 176.051 li
cp
f
515.944 192.586 mo
517.963 191.772 li
515.02 188.809 li
515.944 192.586 li
cp
f
511.157 196.777 mo
503.442 192.322 li
503.051 192.096 502.814 191.527 502.915 191.051 cv
504.764 182.294 li
513.897 187.568 li
512.049 196.324 li
511.948 196.8 511.549 197.003 511.157 196.777 cv
cp
f
510.607 175.276 mo
500.182 180.532 li
499.739 180.755 499.886 181.587 500.423 181.897 cv
508.934 186.811 li
517.444 191.724 li
517.981 192.034 518.409 191.535 518.146 190.905 cv
511.965 176.06 li
511.698 175.419 511.058 175.049 510.607 175.276 cv
cp
f
509.135 197.594 mo
501.419 193.139 li
501.027 192.913 500.792 192.344 500.893 191.867 cv
502.741 183.111 li
511.874 188.384 li
510.025 197.141 li
509.925 197.617 509.526 197.82 509.135 197.594 cv
cp
.147219 .0154116 0 0 cmyk
f
508.584 176.093 mo
498.158 181.349 li
497.716 181.572 497.863 182.404 498.4 182.714 cv
506.911 187.627 li
515.421 192.541 li
515.958 192.851 516.387 192.352 516.124 191.722 cv
509.942 176.877 li
509.675 176.235 509.034 175.866 508.584 176.093 cv
cp
f
456.152 166.919 mo
458.145 166.117 li
456.595 164.926 li
456.152 166.919 li
cp
.657221 .328313 0 0 cmyk
f
455.156 145.34 mo
457.092 144.556 li
456.955 145.367 li
455.156 145.34 li
cp
f
462.407 161.875 mo
464.426 161.061 li
461.482 158.098 li
462.407 161.875 li
cp
f
457.621 166.066 mo
449.905 161.611 li
449.514 161.385 449.278 160.816 449.379 160.34 cv
451.227 151.583 li
460.36 156.857 li
458.512 165.613 li
458.411 166.089 458.013 166.292 457.621 166.066 cv
cp
f
457.07 144.565 mo
446.645 149.821 li
446.202 150.044 446.35 150.876 446.887 151.186 cv
455.396 156.1 li
463.907 161.013 li
464.444 161.323 464.873 160.824 464.61 160.194 cv
458.428 145.349 li
458.161 144.708 457.521 144.338 457.07 144.565 cv
cp
f
455.598 166.882 mo
447.883 162.428 li
447.491 162.202 447.255 161.633 447.355 161.156 cv
449.204 152.4 li
458.338 157.673 li
456.489 166.43 li
456.389 166.906 455.989 167.108 455.598 166.882 cv
cp
.147219 .0154116 0 0 cmyk
f
455.048 145.382 mo
444.622 150.638 li
444.18 150.861 444.326 151.693 444.863 152.003 cv
453.374 156.916 li
461.885 161.83 li
462.422 162.14 462.85 161.641 462.587 161.011 cv
456.405 146.166 li
456.139 145.524 455.498 145.155 455.048 145.382 cv
cp
f
270.496 288.113 mo
328.481 254.798 li
333.055 252.171 341.032 252.518 346.3 255.574 cv
465.216 324.563 li
470.483 327.62 471.046 332.228 466.474 334.854 cv
408.487 368.17 li
403.914 370.798 395.938 370.45 390.669 367.395 cv
271.754 298.404 li
266.486 295.349 265.923 290.741 270.496 288.113 cv
cp
.280034 .073518 .0233463 0 cmyk
f
410.798 357.158 mo
470.178 323.042 li
472.776 321.548 474.084 319.558 474.15 317.461 cv
474.152 317.462 li
474.203 307.239 li
472.295 310.528 li
471.381 309.459 470.14 308.439 468.569 307.528 cv
348.994 238.156 li
342.22 234.226 331.959 233.779 326.078 237.158 cv
266.698 271.274 li
266.068 271.637 265.519 272.029 265.04 272.444 cv
262.764 269.527 li
262.715 279.137 li
262.717 279.134 li
262.633 281.78 264.526 284.595 268.308 286.788 cv
387.882 356.16 li
394.657 360.091 404.917 360.537 410.798 357.158 cv
cp
.827268 .57586 .071809 .00112917 cmyk
f
266.74 263.678 mo
326.12 229.562 li
332.001 226.183 342.262 226.629 349.036 230.56 cv
468.61 299.932 li
475.386 303.862 476.11 309.788 470.229 313.167 cv
410.85 347.283 li
404.968 350.662 394.708 350.216 387.933 346.285 cv
268.358 276.913 li
261.583 272.982 260.859 267.058 266.74 263.678 cv
cp
.147219 .0154116 0 0 cmyk
f
470.229 313.167 mo
410.85 347.283 li
404.968 350.663 394.708 350.216 387.933 346.285 cv
268.358 276.913 li
265.077 275.01 263.229 272.638 262.85 270.314 cv
262.376 273.155 264.244 276.276 268.358 278.663 cv
387.933 348.035 li
394.708 351.966 404.968 352.413 410.85 349.033 cv
470.229 314.917 li
473.261 313.175 474.523 310.755 474.12 308.281 cv
473.814 310.118 472.538 311.84 470.229 313.167 cv
cp
0 0 0 0 cmyk
f
270.496 265.052 mo
328.481 231.736 li
333.055 229.108 341.032 229.456 346.3 232.513 cv
465.216 301.502 li
470.483 304.558 471.046 309.165 466.474 311.793 cv
408.487 345.108 li
403.914 347.736 395.938 347.389 390.669 344.333 cv
271.754 275.343 li
266.486 272.287 265.923 267.68 270.496 265.052 cv
cp
f
483.788 120.596 mo
483.788 121.163 483.39 121.393 482.898 121.109 cv
482.407 120.826 482.01 120.136 482.01 119.569 cv
482.01 119.002 482.407 118.772 482.898 119.056 cv
483.39 119.339 483.788 120.029 483.788 120.596 cv
cp
.147219 .0154116 0 0 cmyk
f
496.08 127.234 mo
496.08 127.801 495.682 128.031 495.19 127.748 cv
494.699 127.464 494.301 126.774 494.301 126.208 cv
494.301 125.64 494.699 125.41 495.19 125.694 cv
495.682 125.978 496.08 126.667 496.08 127.234 cv
cp
f
363.915 277.172 mo
342.449 264.779 li
341.653 264.319 341.753 263.517 342.673 262.986 cv
343.592 262.455 344.981 262.397 345.777 262.857 cv
367.243 275.251 li
368.039 275.71 367.939 276.513 367.021 277.043 cv
366.102 277.574 364.711 277.632 363.915 277.172 cv
cp
.280034 .073518 .0233463 0 cmyk
f
343.569 272.975 mo
335.912 268.554 li
335.116 268.094 335.216 267.291 336.135 266.761 cv
337.054 266.23 338.444 266.173 339.24 266.632 cv
346.897 271.053 li
347.693 271.513 347.594 272.315 346.674 272.846 cv
345.755 273.376 344.365 273.434 343.569 272.975 cv
cp
f
356.419 280.394 mo
348.762 275.973 li
347.966 275.513 348.066 274.71 348.985 274.18 cv
349.904 273.649 351.294 273.592 352.091 274.051 cv
359.747 278.472 li
360.544 278.932 360.443 279.734 359.524 280.265 cv
358.605 280.796 357.215 280.854 356.419 280.394 cv
cp
.827268 .57586 .071809 .00112917 cmyk
f
382.403 295.396 mo
361.612 283.392 li
360.816 282.933 360.916 282.13 361.835 281.599 cv
362.755 281.068 364.145 281.011 364.94 281.47 cv
385.731 293.474 li
386.527 293.934 386.428 294.736 385.509 295.267 cv
384.59 295.797 383.199 295.854 382.403 295.396 cv
cp
.280034 .073518 .0233463 0 cmyk
f
356.194 287.813 mo
329.374 272.328 li
328.578 271.868 328.678 271.065 329.597 270.535 cv
330.516 270.005 331.906 269.947 332.702 270.406 cv
359.522 285.891 li
360.318 286.351 360.219 287.153 359.3 287.684 cv
359.299 287.684 li
358.38 288.215 356.99 288.272 356.194 287.813 cv
cp
f
388.449 313.987 mo
322.836 276.103 li
322.04 275.643 322.141 274.841 323.06 274.31 cv
323.979 273.779 325.368 273.722 326.165 274.181 cv
391.777 312.066 li
392.573 312.525 392.474 313.328 391.555 313.858 cv
390.636 314.39 389.245 314.447 388.449 313.987 cv
cp
.827268 .57586 .071809 .00112917 cmyk
f
407.595 302.391 mo
369.841 280.594 li
369.045 280.134 369.145 279.331 370.063 278.801 cv
370.983 278.27 372.373 278.212 373.169 278.672 cv
410.923 300.469 li
411.719 300.929 411.619 301.731 410.7 302.262 cv
409.781 302.793 408.391 302.851 407.595 302.391 cv
cp
.280034 .073518 .0233463 0 cmyk
f
342.514 337.982 mo
336.993 334.798 li
336.443 334.48 335.998 333.63 335.998 332.897 cv
335.998 332.165 336.443 331.828 336.993 332.146 cv
342.514 335.33 li
343.063 335.647 343.509 336.498 343.509 337.23 cv
343.509 337.963 343.063 338.3 342.514 337.982 cv
cp
.147219 .0154116 0 0 cmyk
f
351.201 343.014 mo
345.681 339.829 li
345.131 339.512 344.686 338.66 344.686 337.928 cv
344.686 337.195 345.131 336.858 345.681 337.176 cv
351.201 340.361 li
351.751 340.678 352.196 341.529 352.196 342.262 cv
352.196 342.994 351.751 343.331 351.201 343.014 cv
cp
f
461.017 324.3 mo
461.017 325.453 460.207 326.855 459.209 327.432 cv
458.21 328.008 457.4 327.541 457.4 326.388 cv
457.4 325.235 458.21 323.833 459.209 323.257 cv
460.207 322.68 461.017 323.147 461.017 324.3 cv
cp
.280034 .073518 .0233463 0 cmyk
f
414.331 174.049 mo
416.318 172.901 li
416.44 172.831 416.426 172.708 416.284 172.626 cv
414.365 171.519 li
414.225 171.437 414.011 171.428 413.89 171.499 cv
411.901 172.646 li
411.779 172.717 411.795 172.84 411.936 172.921 cv
413.854 174.029 li
413.996 174.11 414.209 174.119 414.331 174.049 cv
cp
.827268 .57586 .071809 .00112917 cmyk
f
409.749 176.694 mo
411.736 175.546 li
411.858 175.476 411.844 175.353 411.702 175.272 cv
409.783 174.164 li
409.643 174.083 409.43 174.074 409.308 174.144 cv
407.319 175.292 li
407.197 175.362 407.213 175.485 407.354 175.566 cv
409.273 176.674 li
409.414 176.756 409.627 176.765 409.749 176.694 cv
cp
f
405.167 179.339 mo
407.155 178.192 li
407.276 178.122 407.262 177.999 407.121 177.917 cv
405.201 176.809 li
405.061 176.728 404.848 176.719 404.726 176.789 cv
402.737 177.937 li
402.615 178.007 402.631 178.13 402.771 178.212 cv
404.691 179.32 li
404.832 179.401 405.045 179.41 405.167 179.339 cv
cp
f
388.081 158.317 mo
390.068 157.17 li
390.19 157.1 390.176 156.977 390.034 156.895 cv
388.115 155.787 li
387.975 155.706 387.761 155.697 387.64 155.767 cv
385.651 156.915 li
385.529 156.985 385.545 157.108 385.686 157.189 cv
387.604 158.298 li
387.746 158.379 387.959 158.388 388.081 158.317 cv
cp
f
383.499 160.963 mo
385.486 159.815 li
385.608 159.745 385.594 159.622 385.452 159.541 cv
383.533 158.432 li
383.393 158.351 383.18 158.342 383.058 158.413 cv
381.069 159.56 li
380.947 159.63 380.963 159.753 381.104 159.835 cv
383.023 160.943 li
383.164 161.024 383.377 161.033 383.499 160.963 cv
cp
f
378.917 163.608 mo
380.905 162.46 li
381.026 162.39 381.012 162.267 380.871 162.186 cv
378.951 161.078 li
378.811 160.996 378.598 160.987 378.476 161.058 cv
376.487 162.206 li
376.365 162.276 376.381 162.399 376.521 162.48 cv
378.441 163.588 li
378.582 163.67 378.795 163.679 378.917 163.608 cv
cp
f
110.052 223.038 mo
109.476 223.038 109.062 222.867 108.81 222.507 cv
108.558 222.156 108.432 221.553 108.432 220.698 cv
108.432 219.186 li
108.432 218.601 108.495 218.133 108.612 217.791 cv
108.729 217.449 108.909 217.215 109.143 217.071 cv
109.368 216.936 109.674 216.864 110.061 216.864 cv
110.313 216.864 110.529 216.9 110.709 216.963 cv
110.88 217.026 111.033 217.125 111.15 217.242 cv
111.267 217.368 111.366 217.53 111.429 217.737 cv
111.501 217.944 111.546 218.178 111.573 218.43 cv
111.6 218.673 111.618 218.979 111.618 219.33 cv
111.609 219.879 li
109.188 219.879 li
109.188 220.77 li
109.188 221.391 109.251 221.832 109.368 222.084 cv
109.494 222.345 109.719 222.471 110.052 222.471 cv
110.313 222.471 110.511 222.39 110.655 222.219 cv
110.799 222.057 110.871 221.751 110.871 221.31 cv
110.871 220.896 li
111.609 220.896 li
111.609 221.229 li
111.609 221.814 111.492 222.255 111.249 222.57 cv
111.006 222.885 110.601 223.038 110.052 223.038 cv
110.052 223.038 li
109.386 217.764 mo
109.26 217.989 109.188 218.412 109.188 219.033 cv
109.188 219.438 li
110.871 219.438 li
110.871 218.943 li
110.871 218.736 110.862 218.565 110.853 218.421 cv
110.844 218.286 110.817 218.151 110.79 218.007 cv
110.754 217.872 110.709 217.764 110.655 217.692 cv
110.601 217.611 110.52 217.548 110.421 217.503 cv
110.313 217.458 110.196 217.431 110.052 217.431 cv
109.728 217.431 109.512 217.539 109.386 217.764 cv
102.816 223.038 mo
102.51 223.038 102.258 222.993 102.042 222.894 cv
101.835 222.795 101.673 222.651 101.556 222.453 cv
101.43 222.255 101.349 222.021 101.295 221.751 cv
101.241 221.481 101.223 221.157 101.223 220.779 cv
101.223 219.123 li
101.223 218.358 101.34 217.791 101.574 217.422 cv
101.808 217.053 102.222 216.864 102.816 216.864 cv
103.419 216.864 103.833 217.053 104.067 217.422 cv
104.301 217.791 104.418 218.358 104.418 219.123 cv
104.418 220.779 li
104.418 221.157 104.391 221.481 104.337 221.751 cv
104.292 222.021 104.202 222.255 104.085 222.453 cv
103.968 222.651 103.806 222.795 103.59 222.894 cv
103.383 222.993 103.122 223.038 102.816 223.038 cv
102.816 223.038 li
102.483 217.485 mo
102.393 217.521 102.312 217.575 102.249 217.647 cv
102.105 217.89 li
102.069 217.98 102.042 218.088 102.024 218.223 cv
102.006 218.367 101.988 218.493 101.988 218.619 cv
101.979 218.745 101.979 218.898 101.979 219.078 cv
101.979 220.824 li
101.979 221.004 101.979 221.157 101.988 221.283 cv
101.988 221.409 102.006 221.535 102.024 221.679 cv
102.042 221.814 102.069 221.922 102.105 222.012 cv
102.249 222.255 li
102.312 222.327 102.393 222.39 102.483 222.417 cv
102.582 222.453 102.69 222.471 102.816 222.471 cv
102.969 222.471 103.095 222.444 103.203 222.39 cv
103.311 222.327 103.392 222.264 103.446 222.174 cv
103.509 222.093 103.554 221.976 103.581 221.814 cv
103.608 221.661 103.635 221.517 103.644 221.373 cv
103.653 221.229 103.653 221.049 103.653 220.824 cv
103.653 219.078 li
103.653 218.853 103.653 218.673 103.644 218.529 cv
103.635 218.385 103.608 218.241 103.581 218.088 cv
103.554 217.926 103.509 217.809 103.446 217.728 cv
103.392 217.638 103.311 217.575 103.203 217.512 cv
103.095 217.458 102.969 217.431 102.816 217.431 cv
102.69 217.431 102.582 217.449 102.483 217.485 cv
98.856 223.038 mo
98.46 223.038 98.109 222.849 97.794 222.471 cv
97.794 222.948 li
97.029 222.948 li
97.029 214.56 li
97.794 214.56 li
97.794 217.449 li
98.109 217.062 98.487 216.864 98.937 216.864 cv
99.153 216.864 99.351 216.909 99.522 216.999 cv
99.684 217.089 99.819 217.215 99.909 217.359 cv
100.008 217.503 100.089 217.683 100.143 217.899 cv
100.206 218.115 100.242 218.322 100.26 218.538 cv
100.278 218.745 100.287 218.988 100.287 219.249 cv
100.287 220.518 li
100.287 220.833 100.278 221.121 100.251 221.364 cv
100.224 221.616 100.179 221.85 100.107 222.066 cv
100.044 222.273 99.954 222.453 99.846 222.597 cv
99.738 222.732 99.603 222.84 99.432 222.921 cv
99.27 223.002 99.081 223.038 98.856 223.038 cv
98.856 223.038 li
97.794 217.926 mo
97.794 222.003 li
98.064 222.291 98.379 222.435 98.73 222.435 cv
99.054 222.435 99.27 222.291 99.369 221.994 cv
99.477 221.697 99.531 221.202 99.531 220.527 cv
99.531 219.249 li
99.531 218.61 99.477 218.151 99.369 217.881 cv
99.27 217.602 99.045 217.458 98.721 217.458 cv
98.415 217.458 98.1 217.62 97.794 217.926 cv
93.942 223.038 mo
93.6 223.038 93.312 222.912 93.078 222.651 cv
92.853 222.399 92.745 222.075 92.745 221.697 cv
92.745 221.499 92.763 221.319 92.79 221.166 cv
92.826 221.004 92.889 220.86 92.979 220.716 cv
93.078 220.581 93.177 220.455 93.285 220.356 cv
93.393 220.248 93.555 220.131 93.753 220.014 cv
93.96 219.897 94.158 219.78 94.365 219.681 cv
94.563 219.582 94.824 219.456 95.157 219.312 cv
95.157 218.88 li
95.157 218.331 95.103 217.953 94.995 217.746 cv
94.896 217.539 94.698 217.44 94.41 217.44 cv
93.861 217.44 93.582 217.782 93.582 218.466 cv
93.582 218.682 li
92.835 218.655 li
92.835 218.556 92.835 218.493 92.835 218.475 cv
92.862 217.908 93.006 217.503 93.276 217.251 cv
93.546 216.99 93.942 216.864 94.455 216.864 cv
94.977 216.864 95.355 217.026 95.58 217.332 cv
95.805 217.647 95.913 218.151 95.913 218.844 cv
95.913 221.76 li
95.913 222.237 95.931 222.633 95.967 222.948 cv
95.301 222.948 li
95.184 222.12 li
95.094 222.381 94.941 222.597 94.725 222.777 cv
94.509 222.957 94.248 223.038 93.942 223.038 cv
93.942 223.038 li
95.058 219.861 mo
94.896 219.951 94.77 220.023 94.68 220.068 cv
94.59 220.113 94.491 220.176 94.365 220.248 cv
94.239 220.311 94.149 220.374 94.086 220.419 cv
93.879 220.59 li
93.708 220.779 li
93.6 220.986 li
93.519 221.229 li
93.51 221.319 93.501 221.418 93.501 221.517 cv
93.501 221.814 93.564 222.03 93.699 222.174 cv
93.834 222.318 93.996 222.39 94.194 222.39 cv
94.392 222.39 94.581 222.318 94.752 222.183 cv
94.923 222.039 95.058 221.877 95.157 221.679 cv
95.157 219.816 li
95.058 219.861 li
82.422 223.038 mo
82.116 223.038 81.891 222.921 81.729 222.705 cv
81.576 222.48 81.495 222.165 81.495 221.76 cv
81.495 216.954 li
82.26 216.954 li
82.26 221.598 li
82.26 221.904 82.305 222.12 82.395 222.246 cv
82.485 222.372 82.629 222.435 82.827 222.435 cv
83.169 222.435 83.52 222.246 83.889 221.85 cv
83.889 216.954 li
84.645 216.954 li
84.645 222.948 li
83.889 222.948 li
83.889 222.282 li
83.439 222.786 82.953 223.038 82.422 223.038 cv
82.422 223.038 li
86.382 222.687 mo
86.229 222.462 86.148 222.129 86.139 221.697 cv
86.139 217.458 li
85.419 217.458 li
85.419 216.954 li
86.139 216.954 li
86.139 215.109 li
86.904 215.109 li
86.904 216.954 li
87.894 216.954 li
87.894 217.458 li
86.904 217.458 li
86.904 221.634 li
86.904 221.931 86.94 222.138 87.003 222.255 cv
87.075 222.372 87.219 222.426 87.435 222.426 cv
87.579 222.426 87.714 222.408 87.858 222.381 cv
87.858 222.957 li
87.633 223.002 87.426 223.02 87.228 223.02 cv
86.814 223.02 86.535 222.912 86.382 222.687 cv
105.525 222.948 mo
105.525 216.954 li
106.281 216.954 li
106.281 217.782 li
106.461 217.476 106.677 217.251 106.92 217.107 cv
107.163 216.963 107.406 216.891 107.658 216.891 cv
107.793 216.891 li
107.793 217.719 li
107.685 217.674 107.559 217.647 107.424 217.647 cv
106.938 217.647 106.56 217.881 106.281 218.349 cv
106.281 222.948 li
105.525 222.948 li
90.918 222.948 mo
90.918 214.56 li
91.683 214.56 li
91.683 222.948 li
90.918 222.948 li
92.673 211.392 mo
92.853 211.284 92.979 211.167 93.051 211.032 cv
93.132 210.897 93.168 210.726 93.168 210.519 cv
92.709 210.519 li
92.709 209.385 li
93.564 209.385 li
93.564 210.438 li
93.564 210.771 93.51 211.032 93.393 211.23 cv
93.285 211.428 93.096 211.59 92.826 211.725 cv
92.673 211.392 li
111.186 210.033 mo
110.961 209.646 110.853 208.998 110.853 208.098 cv
110.853 206.991 li
110.853 206.658 110.862 206.37 110.889 206.118 cv
110.907 205.866 110.952 205.632 111.015 205.416 cv
111.078 205.2 111.168 205.02 111.267 204.876 cv
111.375 204.741 111.51 204.633 111.672 204.552 cv
111.843 204.471 112.032 204.435 112.266 204.435 cv
112.653 204.435 113.004 204.615 113.319 204.957 cv
113.319 202.131 li
114.075 202.131 li
114.075 210.519 li
113.319 210.519 li
113.319 210.087 li
113.013 210.438 112.671 210.609 112.293 210.609 cv
111.78 210.609 111.411 210.42 111.186 210.033 cv
111.78 205.434 mo
111.663 205.704 111.609 206.136 111.609 206.748 cv
111.609 208.161 li
111.609 208.809 111.663 209.286 111.78 209.574 cv
111.897 209.862 112.122 210.006 112.446 210.006 cv
112.743 210.006 113.031 209.88 113.319 209.61 cv
113.319 205.452 li
113.013 205.173 112.716 205.029 112.428 205.029 cv
112.104 205.029 111.888 205.164 111.78 205.434 cv
104.796 210.033 mo
104.571 209.646 104.463 208.998 104.463 208.098 cv
104.463 206.991 li
104.463 206.658 104.472 206.37 104.499 206.118 cv
104.517 205.866 104.562 205.632 104.625 205.416 cv
104.688 205.2 104.778 205.02 104.877 204.876 cv
104.985 204.741 105.12 204.633 105.282 204.552 cv
105.453 204.471 105.642 204.435 105.876 204.435 cv
106.272 204.435 106.623 204.615 106.929 204.957 cv
106.929 202.131 li
107.685 202.131 li
107.685 210.519 li
106.929 210.519 li
106.929 210.087 li
106.623 210.438 106.29 210.609 105.912 210.609 cv
105.39 210.609 105.021 210.42 104.796 210.033 cv
105.39 205.434 mo
105.273 205.704 105.219 206.136 105.219 206.748 cv
105.219 208.161 li
105.219 208.809 105.273 209.286 105.39 209.574 cv
105.507 209.862 105.732 210.006 106.056 210.006 cv
106.353 210.006 106.641 209.88 106.929 209.61 cv
106.929 205.452 li
106.623 205.173 106.326 205.029 106.038 205.029 cv
105.723 205.029 105.507 205.164 105.39 205.434 cv
100.746 210.078 mo
100.494 209.727 100.368 209.124 100.368 208.26 cv
100.368 206.748 li
100.368 206.172 100.431 205.704 100.548 205.362 cv
100.665 205.02 100.845 204.777 101.079 204.642 cv
101.304 204.507 101.61 204.435 101.997 204.435 cv
102.249 204.435 102.465 204.471 102.645 204.534 cv
102.816 204.597 102.969 204.696 103.086 204.813 cv
103.203 204.939 103.302 205.101 103.365 205.308 cv
103.437 205.515 103.482 205.74 103.509 205.992 cv
103.536 206.244 103.554 206.55 103.554 206.901 cv
103.545 207.441 li
101.124 207.441 li
101.124 208.341 li
101.124 208.962 101.187 209.394 101.304 209.655 cv
101.43 209.907 101.655 210.042 101.979 210.042 cv
102.249 210.042 102.447 209.952 102.591 209.79 cv
102.735 209.619 102.807 209.322 102.807 208.881 cv
102.807 208.467 li
103.545 208.467 li
103.545 208.8 li
103.545 209.376 103.428 209.826 103.185 210.141 cv
102.942 210.456 102.537 210.609 101.988 210.609 cv
101.412 210.609 100.998 210.438 100.746 210.078 cv
101.322 205.335 mo
101.187 205.56 101.124 205.983 101.124 206.604 cv
101.124 207.009 li
102.807 207.009 li
102.807 206.514 li
102.807 206.307 102.798 206.127 102.789 205.992 cv
102.78 205.857 102.753 205.713 102.726 205.578 cv
102.69 205.443 102.645 205.335 102.591 205.263 cv
102.537 205.182 102.456 205.119 102.357 205.074 cv
102.249 205.02 102.132 205.002 101.988 205.002 cv
101.664 205.002 101.448 205.11 101.322 205.335 cv
96.957 210.15 mo
96.669 209.844 96.507 209.43 96.462 208.908 cv
97.101 208.71 li
97.146 209.169 97.245 209.502 97.416 209.718 cv
97.587 209.934 97.821 210.042 98.127 210.042 cv
98.388 210.042 98.595 209.961 98.748 209.808 cv
98.892 209.655 98.964 209.457 98.964 209.214 cv
98.964 209.178 li
98.955 208.773 98.712 208.377 98.235 207.981 cv
97.425 207.288 li
97.137 207.045 96.93 206.811 96.795 206.586 cv
96.669 206.361 96.606 206.1 96.606 205.803 cv
96.606 205.371 96.732 205.029 96.993 204.786 cv
97.254 204.552 97.596 204.435 98.037 204.435 cv
98.478 204.435 98.811 204.579 99.054 204.858 cv
99.288 205.146 99.423 205.524 99.45 206.01 cv
98.91 206.181 li
98.892 205.785 98.811 205.488 98.667 205.29 cv
98.532 205.101 98.325 205.002 98.064 205.002 cv
97.83 205.002 97.641 205.065 97.497 205.2 cv
97.362 205.326 97.29 205.497 97.29 205.713 cv
97.29 205.911 97.326 206.082 97.398 206.217 cv
97.47 206.361 97.596 206.505 97.785 206.667 cv
98.631 207.432 li
98.784 207.558 98.901 207.675 99 207.774 cv
99.099 207.873 99.198 207.999 99.306 208.143 cv
99.414 208.296 99.495 208.449 99.549 208.62 cv
99.603 208.791 99.63 208.971 99.63 209.169 cv
99.63 209.628 99.495 209.979 99.216 210.231 cv
98.937 210.483 98.568 210.609 98.091 210.609 cv
97.614 210.609 97.236 210.456 96.957 210.15 cv
81.81 210.078 mo
81.558 209.727 81.432 209.124 81.432 208.26 cv
81.432 206.748 li
81.432 206.172 81.486 205.704 81.603 205.362 cv
81.729 205.02 81.9 204.777 82.134 204.642 cv
82.368 204.507 82.674 204.435 83.052 204.435 cv
83.304 204.435 83.52 204.471 83.7 204.534 cv
83.88 204.597 84.024 204.696 84.141 204.813 cv
84.267 204.939 84.357 205.101 84.429 205.308 cv
84.492 205.515 84.546 205.74 84.573 205.992 cv
84.6 206.244 84.609 206.55 84.609 206.901 cv
84.6 207.441 li
82.188 207.441 li
82.188 208.341 li
82.188 208.962 82.251 209.394 82.368 209.655 cv
82.485 209.907 82.71 210.042 83.043 210.042 cv
83.304 210.042 83.511 209.952 83.646 209.79 cv
83.79 209.619 83.862 209.322 83.862 208.881 cv
83.862 208.467 li
84.6 208.467 li
84.6 208.8 li
84.6 209.376 84.483 209.826 84.24 210.141 cv
83.997 210.456 83.601 210.609 83.043 210.609 cv
82.476 210.609 82.062 210.438 81.81 210.078 cv
82.377 205.335 mo
82.251 205.56 82.188 205.983 82.188 206.604 cv
82.188 207.009 li
83.862 207.009 li
83.862 206.514 li
83.862 206.307 83.853 206.127 83.844 205.992 cv
83.835 205.857 83.817 205.713 83.781 205.578 cv
83.754 205.443 83.709 205.335 83.646 205.263 cv
83.592 205.182 83.511 205.119 83.412 205.074 cv
83.313 205.02 83.187 205.002 83.043 205.002 cv
82.728 205.002 82.503 205.11 82.377 205.335 cv
90.414 210.258 mo
90.261 210.033 90.18 209.7 90.18 209.268 cv
90.18 205.029 li
89.451 205.029 li
89.451 204.525 li
90.18 204.525 li
90.18 202.671 li
90.936 202.671 li
90.936 204.525 li
91.935 204.525 li
91.935 205.029 li
90.936 205.029 li
90.936 209.196 li
90.936 209.502 90.972 209.709 91.044 209.826 cv
91.116 209.934 91.26 209.997 91.476 209.997 cv
91.611 209.997 91.755 209.979 91.899 209.952 cv
91.899 210.528 li
91.674 210.564 91.458 210.591 91.26 210.591 cv
90.855 210.591 90.567 210.483 90.414 210.258 cv
87.813 210.519 mo
87.813 204.525 li
88.569 204.525 li
88.569 210.519 li
87.813 210.519 li
85.734 210.519 mo
85.734 202.131 li
86.499 202.131 li
86.499 210.519 li
85.734 210.519 li
87.813 203.697 mo
87.813 202.671 li
88.578 202.671 li
88.578 203.697 li
87.813 203.697 li
107.712 200.061 mo
107.712 192.096 li
108.468 192.096 li
108.468 192.6 li
108.792 192.204 109.17 192.006 109.62 192.006 cv
109.836 192.006 110.034 192.051 110.205 192.141 cv
110.367 192.231 110.502 192.348 110.601 192.492 cv
110.691 192.636 110.772 192.816 110.826 193.032 cv
110.889 193.248 110.925 193.464 110.943 193.68 cv
110.961 193.887 110.97 194.121 110.97 194.391 cv
110.97 195.66 li
110.97 195.975 110.961 196.254 110.934 196.506 cv
110.907 196.758 110.862 196.983 110.79 197.199 cv
110.727 197.415 110.637 197.595 110.529 197.73 cv
110.412 197.874 110.277 197.982 110.115 198.063 cv
109.944 198.144 109.755 198.18 109.539 198.18 cv
109.152 198.18 108.792 197.991 108.468 197.604 cv
108.468 200.061 li
107.712 200.061 li
108.468 193.059 mo
108.468 197.145 li
108.747 197.433 109.062 197.577 109.413 197.577 cv
109.548 197.577 109.665 197.55 109.755 197.496 cv
109.854 197.442 109.935 197.361 109.989 197.271 cv
110.052 197.172 110.097 197.037 110.124 196.875 cv
110.16 196.713 110.187 196.533 110.196 196.344 cv
110.205 196.155 110.214 195.93 110.214 195.669 cv
110.214 194.391 li
110.214 193.752 110.16 193.293 110.052 193.014 cv
109.944 192.735 109.728 192.6 109.404 192.6 cv
109.089 192.6 108.783 192.753 108.468 193.059 cv
112.257 197.721 mo
111.978 197.415 111.816 197.001 111.771 196.479 cv
112.41 196.281 li
112.446 196.74 112.554 197.073 112.725 197.289 cv
112.896 197.505 113.13 197.604 113.427 197.604 cv
113.697 197.604 113.904 197.532 114.057 197.379 cv
114.201 197.226 114.273 197.028 114.273 196.776 cv
114.273 196.74 li
114.264 196.344 114.021 195.948 113.544 195.552 cv
112.725 194.859 li
112.437 194.616 112.23 194.382 112.104 194.157 cv
111.969 193.932 111.906 193.671 111.906 193.374 cv
111.906 192.933 112.041 192.6 112.302 192.357 cv
112.563 192.123 112.905 192.006 113.337 192.006 cv
113.778 192.006 114.12 192.15 114.363 192.429 cv
114.597 192.708 114.732 193.095 114.759 193.581 cv
114.219 193.752 li
114.192 193.356 114.111 193.059 113.976 192.861 cv
113.832 192.672 113.634 192.573 113.373 192.573 cv
113.13 192.573 112.941 192.636 112.806 192.771 cv
112.662 192.897 112.599 193.068 112.599 193.284 cv
112.599 193.482 112.635 193.644 112.698 193.788 cv
112.77 193.923 112.905 194.076 113.094 194.238 cv
113.94 194.994 li
114.093 195.129 114.21 195.246 114.309 195.345 cv
114.408 195.444 114.507 195.57 114.615 195.714 cv
114.723 195.858 114.804 196.02 114.858 196.191 cv
114.903 196.362 114.939 196.542 114.939 196.74 cv
114.939 197.199 114.804 197.55 114.525 197.802 cv
114.246 198.054 113.877 198.18 113.4 198.18 cv
112.923 198.18 112.545 198.027 112.257 197.721 cv
92.979 197.649 mo
92.727 197.298 92.601 196.686 92.601 195.831 cv
92.601 194.319 li
92.601 193.734 92.664 193.275 92.781 192.933 cv
92.898 192.591 93.078 192.348 93.312 192.213 cv
93.537 192.069 93.843 192.006 94.23 192.006 cv
94.482 192.006 94.698 192.033 94.869 192.105 cv
95.049 192.168 95.202 192.258 95.319 192.384 cv
95.436 192.501 95.526 192.672 95.598 192.879 cv
95.67 193.086 95.715 193.311 95.742 193.563 cv
95.769 193.815 95.787 194.121 95.787 194.472 cv
95.778 195.012 li
93.357 195.012 li
93.357 195.912 li
93.357 196.533 93.42 196.965 93.537 197.226 cv
93.663 197.478 93.888 197.604 94.212 197.604 cv
94.482 197.604 94.68 197.523 94.824 197.361 cv
94.968 197.19 95.031 196.893 95.031 196.452 cv
95.031 196.038 li
95.778 196.038 li
95.778 196.371 li
95.778 196.947 95.661 197.397 95.418 197.712 cv
95.175 198.027 94.77 198.18 94.221 198.18 cv
93.645 198.18 93.231 198 92.979 197.649 cv
93.555 192.906 mo
93.42 193.131 93.357 193.554 93.357 194.175 cv
93.357 194.58 li
95.031 194.58 li
95.031 194.085 li
95.031 193.878 95.031 193.698 95.022 193.563 cv
95.013 193.428 94.986 193.284 94.959 193.149 cv
94.923 193.014 94.878 192.906 94.824 192.825 cv
94.77 192.753 94.689 192.69 94.581 192.645 cv
94.482 192.591 94.365 192.573 94.221 192.573 cv
93.897 192.573 93.681 192.681 93.555 192.906 cv
86.211 198.036 mo
86.004 197.937 85.842 197.784 85.725 197.586 cv
85.599 197.388 85.518 197.154 85.464 196.884 cv
85.41 196.623 85.392 196.299 85.392 195.921 cv
85.392 194.256 li
85.392 193.5 85.509 192.933 85.743 192.564 cv
85.977 192.186 86.391 192.006 86.985 192.006 cv
87.588 192.006 88.002 192.186 88.236 192.555 cv
88.47 192.924 88.587 193.491 88.587 194.256 cv
88.587 195.921 li
88.587 196.299 88.56 196.623 88.506 196.884 cv
88.461 197.154 88.371 197.388 88.254 197.586 cv
88.137 197.784 87.975 197.937 87.759 198.036 cv
87.552 198.135 87.291 198.18 86.985 198.18 cv
86.679 198.18 86.427 198.135 86.211 198.036 cv
86.652 192.618 mo
86.562 192.654 86.481 192.708 86.418 192.789 cv
86.274 193.032 li
86.238 193.113 86.211 193.23 86.193 193.365 cv
86.175 193.5 86.157 193.635 86.157 193.761 cv
86.148 193.878 86.148 194.031 86.148 194.22 cv
86.148 195.957 li
86.148 196.146 86.148 196.299 86.157 196.425 cv
86.157 196.542 86.175 196.677 86.193 196.812 cv
86.211 196.956 86.238 197.064 86.274 197.154 cv
86.418 197.397 li
86.481 197.469 86.562 197.523 86.652 197.559 cv
86.751 197.595 86.859 197.604 86.985 197.604 cv
87.138 197.604 87.264 197.577 87.372 197.523 cv
87.48 197.469 87.561 197.397 87.615 197.316 cv
87.678 197.226 87.723 197.109 87.75 196.956 cv
87.777 196.803 87.804 196.65 87.813 196.515 cv
87.822 196.371 87.822 196.182 87.822 195.957 cv
87.822 194.22 li
87.822 193.995 87.822 193.806 87.813 193.671 cv
87.804 193.527 87.777 193.374 87.75 193.221 cv
87.723 193.068 87.678 192.951 87.615 192.861 cv
87.561 192.78 87.48 192.708 87.372 192.654 cv
87.264 192.6 87.138 192.573 86.985 192.573 cv
86.859 192.573 86.751 192.591 86.652 192.618 cv
105.678 198.081 mo
105.678 192.096 li
106.434 192.096 li
106.434 198.081 li
105.678 198.081 li
101.646 198.081 mo
101.646 193.383 li
101.646 193.05 101.592 192.825 101.493 192.699 cv
101.394 192.573 101.25 192.501 101.061 192.501 cv
100.674 192.51 100.305 192.717 99.927 193.131 cv
99.936 193.23 99.945 193.302 99.945 193.356 cv
99.945 198.081 li
99.234 198.081 li
99.234 193.383 li
99.234 193.05 99.18 192.825 99.072 192.699 cv
98.973 192.573 98.829 192.501 98.64 192.501 cv
98.253 192.51 97.884 192.717 97.515 193.131 cv
97.515 198.081 li
96.804 198.081 li
96.804 192.096 li
97.515 192.096 li
97.515 192.699 li
97.92 192.231 98.388 191.988 98.928 191.988 cv
99.432 191.988 99.738 192.249 99.873 192.78 cv
100.287 192.249 100.782 191.988 101.349 191.988 cv
101.646 191.988 101.889 192.096 102.078 192.312 cv
102.267 192.528 102.366 192.87 102.366 193.356 cv
102.366 198.081 li
101.646 198.081 li
89.685 198.081 mo
89.685 192.096 li
90.45 192.096 li
90.45 192.924 li
90.63 192.618 90.846 192.393 91.089 192.249 cv
91.332 192.105 91.575 192.033 91.827 192.033 cv
91.962 192.033 li
91.962 192.852 li
91.854 192.807 91.728 192.789 91.593 192.789 cv
91.107 192.789 90.729 193.023 90.45 193.482 cv
90.45 198.081 li
89.685 198.081 li
81.693 198.081 mo
81.693 189.693 li
82.485 189.693 li
82.485 197.496 li
84.87 197.496 li
84.87 198.081 li
81.693 198.081 li
105.678 191.268 mo
105.678 190.242 li
106.443 190.242 li
106.443 191.268 li
105.678 191.268 li
/0 /CSA get_res setcolorspace
gsave
eclp
[1 0 0 -1 0 400 ]ct
[34.08 0 0 34.08 81.12 176.56 ]ct
snap_to_device
Adobe_AGM_Image/AGMIMG_fl cf /ASCII85Decode fl /RunLengthDecode filter ddf
<<
/T 1
/W 142 
/H 142 
/M[142 0 0 -142 0 142 ]
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS [
[AGMIMG_fl 142 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 142 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 142 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 142 string /rs cvx /pop cvx] cvx
]
/O 3
>>
%%BeginBinary: 1
img
JcLB&JcLB&_Z9X\_uR.ErBo$6V#^H+iW+Q1LB.9u!!%TNpAk.ZO9"JEr=PY%JcNpnrHZ'VjT,7)gAq1>
bQ-2orBo<>r=Rca`rQ&M^]9AprH\2=W;umBh>mNTrBm7YrBorPmf<:uT`G$'quD<Kd/a,j[K,XorH[,t
rBnO(h#RC@gAq0ae,[bor=QR?PlUc.nc5lorH[,trBm7YrBo]Ip&P%'T`G$'o`0RDg&V-QrHY(:rH[`0
n,WDST`G$YqZ,RTr=Pn,quH[-MZCWprHZ<]ZiL%ldf?3Er=S#hJcLQ+rHSACJcPNFrBlYHkQ(PnT)aHC
aoMBc^&S.Y!."A?s*;TarBnd/o)SeXq#LF^`W5rLgAp:7rt5&,rt2:3NWB$'q#L9lpj)`:rH\DCr-A5@
pj)`:rHSACqK`&?qK_W3rH\>ArHSACqK_l:q0Dr>rW)mao)SPQqZ-R^rrDsar;cU[qZ-R^!!)j_rW)d^
nc8VUr;cd`!!)j_r;ccrq*Y#Zr=SW$p_!B'r=T&0r"8l-p_!B'r=K#0q@W],q@W8ur=Su.!"o2B!!)j-
q#L4&SH.%;rH\#8p3HQ9rHSACqg&/@p3HQ9oQ^K<H$T73o)S`7r;cJ8qZ-A9quH[_oDnSPquH[_!!)m`
rW)XZqu?^aog8]Zpd=WQrBpM`oL&KUpI"iYr=SZ%p(@3&r=K#0q[rf-rt5#<quH@$!!)d+o)S_$r;cI%
qZ-@&g&RB<rH\&9rd"6`r;cP:rrD_;quGu,oDni8r;cG7r;cM9r;cd`o`4VOr;cOYrrD^ZquGtKoDnhW
r;cFVr;ca_qEt2]r=S]&oF_$%p(@<)ob%*%kn3Ofr=Su.q%<K9r;cL&QiPh?rrE"Co`4o8rW)kAr;cP:
rrDtBrW)kAr;c_?rW)e?rW)kAoDni8r;c_?rW)kArVuour-A8ArH\>ArBp5Xr'UG`r'UD_p-\i[r'UG`
r'UD_qa:>_qEt5^r'U)VrBpM`s$Q`PrW)j`r;ca_rW)mar;cd.o`4n%rW)j.r;cO'rrDs/rW)j.r;c^,
rW)d,rW)j.q#L<mr=Su.q[rf-r"8l-r"8o.r=Q.3_Z9X\o`4r9quH\@r;c_?q>gJ>quH\@r;ckCrd"DA
r-A2?rH\#8rH\>Ar-A2?rH\>ArH\;@rd"GBrBp5XrBpJ_rBpM`qa:2[rBpJ_rBpM`r'UA^r'UA^rBp2W
rBpM`r'UA^rBpM`rBpJ_r^6Var=S]&r=Sr-r=Su.rt52Aq>gI+quH[-r;ca-quHX,quH[-oDnh%r;ca-
quH[-r;cd.quH^.kl?J=rHSACp&P&:quH\@r;cb@q#LA=quH\@r;ceAqZ-S?qZ-S?oDni8r;ceAqZ-P>
rW)nBrrE#urH\ABrBp5XrBpJ_rBpM`r'U8[rBpJ_rBpM`rBpG^rBpG^rBp2WrBpM`rBpJ_!!)parW)ma
quH[_rW)m/o`4q&quH[-r;ca-q#L@*quH[-r;cd.qZ-R,qZ-R,oDnn'rt520r=So,r"8o.r=Sr-r=Pq-
aoMBcp&P#9quH\@r;ceAq#L><quH\@r;ceAqu?]srH\8?rH\#8rH\>ArH\8?r-A8ArH\;@rH\ABrBp8Y
r'UA^rBpM`rBpA\r'UA^s$QfRr;cd`qZ-R^qZ-R^oDnhWr;cd`qZ-O]rW)maquH[_rW)m/p&P"&quH[-
r;cd.quH]rr"8i,r=Su.r=So,r=So,r=SZ%r=Su.r=So,r"8o.r=Sr-r=S&iNWB$'q#LBor-A2?r-A8A
rH\2=r-A2?r-A8ArH\8?rH\8?rH\#8rH\>ArH\5>rH\ABr-A5@s*=VErW)map&P"XquHX^rW)maq#L=[
quHX^rW)maqZ-R^qZ-R^oDnhWr;cd`q>gI]!!*$!r'UD_s$Q\ar=S`'r"8i,r"8o.r=Si*r"8i,r"8o.
r=So,r=So,r=SZ%r=Su.!"o2Bq>gI+rW)j.r;cj0ScI.<rH\):rH\8?r-A8ArH\2=r-A2?r-A8ArH\8?
rH\DCr;ceAoDni8r;ceAq>gJ>rW)kAp&P%Yp&P%YqZ-O]rW)maq#L=[quHX^rVupcr^6P_rBpG^rBp2W
rBpM`rBpD]rBpPar'U/Xr=S`'r=So,r"8o.r=Si*r=K#AquHX,rW)m/qZ-R,qZ-R,oDnh%r;cd.q>gI+
rW)j.e,Ya6rH\):rH\8?r-A8ArH\2=r-A2?r-A8ArH\8?rH\8?rH\#8rH\>ArH\5>rH\>Ar-A#:rBp8Y
rBpG^r'UG`rBpA\r'UA^r'UG`rBpG^rBpG^rBp2WrBpM`rBpD]rBpM`rBgQPpAk.(p&P%'qZ-O+rW)m/
q#L=)quHX,rW)m/qZ-R,qZ-R,oDnh%r;cd.r;cfsr=Su.r"5(lg&V-QrH\):rH\8?r-A8ArH\2=np137
rH\8?rH\8?rH\#8rH\>ArH\5>rH\DCrrDn@q#L@\p&P%YqZ-O]rW)maq#KtQrW)maqZ-R^qZ-R^oDnhW
r;cjbs$QV_rBpM`qEt&Yr=S`'r=So,r"8o.r=Si*ne(j$r=So,r=So,r=Si*quH[-r;cd.q>gI+r;c[+
W;sg9rH\):rH\8?r-A8ArH\2=np137s*=WiqZ-S?qZ-S?oDni8r;ceAq>gJ>quHS=q>gI]p&P%YqZ-O]
rW)maq#L=[pI"o[rBpG^rBpG^rBp2WrBpM`rBpD]rBpJ_qEt)Zr=S`'r=So,r"8o.rt58Cq#KstrW)m/
qZ-R,qZ-R,oDnh%r;cd.q>gI+quHR*joC/:rHSACpAk/;qZ-P>rW)nBq#Ku2rW)nBqZ-S?qZ-S?oDni8
r;ceAq>gJ>qZ-V@rH\8?rBp8YrBpG^r'UG`rBpA\njEBVrBpG^rBpG^rBp2WrBpM`rBpJ_rrE!bqZ-I[
qZ-R,p&P%'qZ-O+rW)m/q#KstrW)m/qZ-R,qZ-R,oDnn'rt520r=Sl+r=So,q@TM'aoMBcp&P&:qZ-P>
rW)nBq#L><oDni8qu?]srH\8?rH\#8rH\>ArH\5>rH\5>qK_u=rBp8YrBpG^r'UG`rBpA\r'U;\qZ-R^
qZ-R^qZ-R^oDnhWr;cd`q>gI]q>g@ZquH[-p&P%'qZ-O+rW)m/quH]rr"8Q$r=So,r=So,r=SZ%r=Su.
r=Sl+r=Sl+q@VZdNWB$'q#LBorH\8?r-A8ArH\2=r-@o7rH\8?rH\8?rH\#8rH\>ArH\5>rH\/<qfr/A
rW)map&P%YqZ-O]rW)maq#L=[oDnhWqZ-R^qZ-R^oDnhWr;cd`q>gI]!!)fpqa:;^r=S`'r=So,r"8o.
r=Si*r"8Q$r=So,r=So,r=SZ%r=Su.!"o2Bq>gI+p]11'T)d7=rH\):rH\8?r-A8ArH\2=r-@o7rH\8?
rH\DCr;ceAoDni8r;ceAq>gJ>pAk,:r;cd`p&P%YqZ-O]rW)maq#L=[oDekYr^6P_rBpG^rBp2WrBpM`
rBpD]rBp;Zr'UD_r=S`'r=So,r"8o.r=Si*r=K#AoDnh%qZ-R,qZ-R,oDnh%r;cd.q>gI+pAk+'gAmK=
rH\):rH\8?r-A8ArH\2=r-A2?r-A8ArH\8?rH\8?rH\#8rH\>ArH\5>rH\):r-A8ArBp8YrBpG^r'UG`
rBpA\r'UA^r'UG`rBpG^rBpG^rBp2WrBpM`rBpD]rBpA\rW)j`rW)m/p&P%'qZ-O+rW)m/q#L=)quHX,
rW)m/qZ-R,qZ-R,oDnh%r;cd.r;cfsr=S`'r"5=sg&V-QrH\):rH\8?r-A8ArH\2=r-A2?r-A8ArH\8?
rH\8?rH\#8rH\>ArH\5>rH\DCrrE(EqZ-S?rW)map&P%YqZ-O]rW)maq#L=[quHX^rW)maqZ-R^qZ-R^
oDnhWr;cjbs$QV_rBpM`s$QY`rBpPar=S`'r=So,r"8o.r=Si*r"8i,r"8o.r=So,r=So,r=Si*quH[-
r;cd.q>gI+r;cj0qZ-R,XoQ?>rH\):r-A2?r-A8ArH\2=r-A2?r-A8As*=WiqZ-S?qZ-S?oDni8r;ceA
q>gJ>rrE"CqZ-S?rW)map&P"XquHX^rW)maq#L=[quHX^rW)maqZ-R^qZ-R^oDnhWr;cd`q>gI]rrE!b
qZ-R^rW)m/p&P"&quHX,rW)s1rt5&,r"8i,r"8o.r=So,r=So,r=SZ%r=Su.r=Sl+r=T&0r=So,r=S;p
LB.9u!!)`nr-A2?rH\>ArH\2=r-A2?r-A8ArH\8?rH\8?rH\#8rH\>ArH\8?r-A;BrH\ABr;chBrW)ma
p&P"XquH[_r;cd`q#L=[quHX^rW)maqZ-R^qZ-R^oDnhWr;cd`qu?]sr'UJarBpD]r^6Ybr=S`'r"8i,
r=Su.r=Si*r"8i,r"8o.r=So,r=So,r=SZ%rt58Cr;cd.qZ-O+rrE!0q>gL,VZ=j>rH\&9rH\;@rH\>A
rH\/<rH\;@rH\>ArH\;@!!)tCqZ-S?oDni8r;ceAqZ-P>rrDtBquH\@rW)mao`4qXquH[_r;cd`p]17[
quHaas$Q_brBpG^rBpG^rBp2WrBpM`rBpG^r'UJar'UA^rBpPar=S]&r=Sr-r=Su.r=Sr-r;cd.quH[-
r;cd.qZ-R,qZ-R,oDnh%r;cd.qZ-O+rrDs/quH[-irG)>rH\2=r;ceAquH\@r;ceAp]18<quH\@r;ceA
qZ-S?qZ-S?oDni8r;cb@quH\@r;ceAquH\@rW)mao`4qXquH[_r;cd`p]17[quH[_r;cd`qZ-R^qZ-R^
oDnhWr;ca_quH[_rrE'!rBpJ_rBpPar=S]&r=Sr-r=Su.r=Sf)r=Sr-r=Su.r=So,r=So,r=SZ%r=Su.
!"o/AquH[-r;cd.quH[-TE*@>o6L?9r-A8Ar-A5@rH\/<qg&2Ar-A5@rH\8?rH\DCr;ceAoDni8r;c\>
!!)nAr;cb@rW)kArW)OWrrDsarW)j`r;cd`p]11YrrDsar;Zgbr^6P_rBpG^rBp2WrBpM`qEk5_qa:;^
r'UG`r'UG`o+D!&r"8o.r"8l-r=Sf)rXo,ArrDs/r;cd.qZ-R,qZ-R,oDnh%r;c[+!!)m.r;ca-rW)j.
g]3T>o6L<8s*=BbquH\@pAjl3r;ceAqZ-S?qZ-S?oDni8r;cJ8qZ-;7rW)mapI"o[p-\`XrBp;ZogAZX
rBpG^rBpG^rBp2WrBpM`oL&KUrBpBJrW)O%rW)X(quH[-pAjjur;cd.qZ-R,qZ-R,oDnh%r;cX*r"8f+
ob!Slg&V-Qo6L<8pNcW9rH\,;p3HQ9rH\8?rH\8?rH\#8rH\>AoQgB8rrDb<r;cFVrW)[[qZ-R^pAjnS
quH[_qZ-R^qZ-R^oDnhWr;cjbp-\]Wp-\cYo+Cs%pC[9&r=Sc(p(@3&r=So,r=So,r=Si*quH[-r;cI%
qZ-=%XT66=o6L66qK_o;rH\&9q0Di;s*=WiqZ-S?qZ-S?oDni8r;ceA!!)k@p]1/9qZ-4TquHR\q>gI]
o`+tZqEt,[rBpG^rBpG^rBp2WrBpM`rBgPbqEt#XqEt,[o+Cm#q@WQ(rt58Co`4e"qZ-R,qZ-R,qZ-R,
oDnh%r;cd.!!)j-p]1.&k5^)6RK3;3m/W%ErBpJ_JcPZJr=OtgJcOU,rHYCCc2df1\H'AEr=R*NJcMJE
rH[N*OoYGJo`0UE!"o2BK`H])j8f.(UB&gErBmjj`W5rL_#T&eVuZdAhZ0&ErBouQM?*Ser;_ELg&R<:
rH\#8KE2$>s$MG>oDnh%P5p17ec>YoYlMfErBn@#\,cI>cN&OsRK3;3m/W%ErBpJ_JcPZJr=OtgJcLB&
JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&g&Q^)JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&
JcLB&JcP]KrHYLFrH[Z.rH\ABm/[)PXT8;enc8IcrBoiMr=Q.3r=S;pr=PS#^]==Y`rP9&rH[Z.rH[Z.
rBo-9fDtk;l2^cMl2^bpjT*C&r=S;pr=R]_KE2$ts*=PCr-A2?rHZ-XrH[Z.rH\,;oDnhWr;ca_quH[_
^B"4"lMpnbrBoiMr=Su.r"8i,r=QdEr=Sl+nGrM"Q2oV=mK!32r;cb@quH\@^B"4XnGrCcrH[Z.rBpM`
r'UA^rBn="rBgPblN$lNl2^bpr;ca-quH[-aT2&8r=S;pr=Q(1Z2jiKr;cb@quH\@k5a08rH[Z.rH[Z.
rBpM`r'UA^rBp8YaoMB-l2^cMl2^bpr;ca-quH[-^B"3El2^bpk5^)6o`4r9r;cb@quH\@^B"4Xl2^d.
l2^cMr;ca_quH[_^B"4"q#KscrBoiMr=Su.r"8i,r=QmHrW)m/l2^bpU]@q*rH\>Ar-A2?rH[<$huN_$
l2^d.l2^cMr;ca_quH[_mf:`8rBoiMrBoiMr=Su.r"8i,r=T#/_>sNHl2^bphuJ?/quH\@o)S`7^B"4X
l2^d.rW)<crBp/VrBn="rBp,Uq#L@\l2^bpo)S_$^B"3El2^bpSH-G*rH[u7rH[&rk5bI+l2^d.l2^cM
o)S_VkQ'68rBoiMrBoiMr=SW$r=Sc(aT28Ol2^bpf`7-7rH\/<s*=Wio)S`7joG=)o`4r9oDnl9rrE"C
n,WH5rW)nBpAk.Zp]17[o)S_VjoG<Ho`4qXoDnkXrrE!bn,WGTrr<$!rBp;Zr=Sf)r=SW$r=S/lr"8T%
r=SZ%rXo/1r=Sl+pAk1)rW)m/Q2oV=rW)_=q>gJ>r;cb@rrD_;m/Zp,q>g;9q#L)5nc/Z8p3HK7pd=lX
rBpM`r'UJaogA*Hpd=lXpd=iWog8]Zo)SGNq>g:&q>gI+r;ca-rrD^(m/Znnq>g:&qZ-Wrob$`pob"5)
_Z9CUqZ-S?r;cb@rrD_;mK!94pj)c;p3HN8oQg$.oQg<6p-\]WrBpM`r'UJaogATVoDnSPquHFXqZ-7U
o)SDMqZ-=%qZ-R,r;ca-rrE$1p^uoop(@3&p(@0%oF^ZpoF^6dLB.6tqK_u=rH\>Ar-A;Bom-!+om-H8
om-H8oQg'/pNc^_qZ-:VquH[_r;ca_rrD^Zmf<#JquHCWquH@Vq#L<mo0`BTob%*%r=Su.r"8r/ob$Wm
ob%*%ob%*%q[rZ:oDnIpU]AR<r-A5@rH\;@rH\>Ar-A2?rH[Z.r-A8As*=Wir;cb@r;ceAr;cb@r;cb@
oDnf7rW)h@quHX^r;cd`quH[_r;ca_quH[_mf<7cr'UG`rBpM`r'UD_rBpM`r'UD_r'U)Vr'UG`qa:8]
r"8l-r=Sr-r=Su.r"8i,r=T#/m/[%rrW)m/r;ca-r;cd.r;ca-r;ca-oDne$rW)g-huJf<r-A5@rHSBg
r;ceAr;cb@quH\@l2^d.quH\@rW)nBquHY?rW)kAquH\@oDni8qZ-S?rW)rur'UD_r'UD_rBpM`r'UA^
rBoiMrBpJ_rBpParBpJ_r'UG`r'UA^rBp2Ws$QfRqZ-R^quHX,r;ca-r;cd.r;ca-quH[-l2^bpquH[-
rW)m/quHX,rW)j.quH[-oDnh%qZ-R,SH.(<rH\8?rH\>ArH\>Ar-A2?rH[Z.rH\;@rH\AB!."QhqZ-S?
rW)nBqZ-S?oDni8qZ-S?rVutE!<#:^!<#:`!<#:`!;o4^!<#:M!<5Fd6i6r_6iI)a6i-l^6iI)a6i-l^
6hCBW6i-l^6iI&d6NI&sqZ-R,r;cd.r;ca-quH[-pAjgcr=Sr-r=T#/r=So,r=T#/r=So,r=SZ%r=So,
r=T#/!"n#eQ2pl/qZ-S?r;ckCs*=PCr-A2?rH[Z.rH\8?rd"JCrH\8?rH\ABrH\8?rH\#8rH\8?rH\AB
!I4\D6N@,a!<#:`!<#:`!;o4^!<#:M!<#:^!<,@b!<#:^!<#:a!<#:^!<#:W!<#:_!!!#t6iI&d6NI&s
qZ-R,r;cd.r;ca-quH[-l2^bpqZ-U-rW)m/qZ-R,rW)m/qZ-R,q>gBmr=So,r=T#/!"kY"g&M*QrH\8?
rH\>ArH\>Ar-A2?rH[Z.r-A2?!."JBrH\8?rH\ABrH\8?rH\&9rHSBgqZ-S?rVutE!<#:^!<#:`!<#:`
!;o4^!<#:M!;o4^!!#Ca!<#:^!<#:a!<#:^!<#7b!;6Ej6i-l^6iI&d6NI&sqZ-R,r;cd.r;ca-quH[-
l2^_oqu?^/quH[-qZ-R,rW)m/qZ-R,o`4n%qZ-R,rVup1Y5lK@rH\8?rH\>ArH\>Ar-A2?rH[Z.rd"Kg
pAk/;qZ-S?rW)nBqZ-S?o`4o8qZ-S?rVutE!<#:^!<#:`!<#:`!;o4^!<#:Y!;-?h6h^TZ6i-l^6iI)a
6i-l^6hLHW6i-l^6iI&d6NI&sqZ-R,r;cd.r;ca-quH[-l2^\npAk.(qZ-R,rW)m/qZ-R,o`4n%qZ-R,
rVup1lMu_@rH\DCr;ceAr;ceAr;cb@quH\@klCU+p]18<qZ-S?rW)nBqZ-S?o`4o8qZ-S?rVutE!<#:^
!<#:`!<#:`!;o4^!<#:L!;f.Y!<#:^!<#:a!<#:^!<#:\!;uoq6i-l^6iI&d6NI&sqZ-R,r;cd.r;ca-
quH[-klCSmp]17)qZ-R,rW)m/rW)otr=S]&r"8f+r=T#/!"l.0b5h-Zr;ceAr;cb@quH\@kQ(L*rrDor
o6L<8rH\8?rH\&9r-A/>rH\AB!I4\:6i@#`6i@#_6i6r_6gk$O!;f.Z!:rSW!<#:^!<#:X!;o4]!<#:a
!!,Feo+Cp$r=Su.r"8i,r=T#/lN$eoq#L!urW)m/qZ-R,o`4n%qZ-R,rVup1j8b5@oQ^F^r;ceAr;cb@
quH\@k5bC)q>g,4rW)nBqZ-S?o`4o8qZ-S?rVutE!:rSV!<#:`!;o4^!<#:J!;f.[!:rSW!<#:^!<#:X
!<,@c6i-l^6iI&d6NH]ir;cd.r;ca-quH[-k5bAkq>g+!rW)m/qZ-R,o`4n%qZ-R,rVup1T`EL@o6L97
rH\>Ar-A2?rH[N*qg&&=!."3^rW)nBqZ-S?o`4o8qZ-S?rVutE!:rSV!<#:`!;o4^!<#:K!<3&r6i-lT
6iI)a6i-l^6hLHW6i-l^6iI&d6NH]ir;cd.r;ca-quH[-pAj[_q[r]*o+Cs%r=So,r=S]&r"8f+r=T#/
!"n#eQ2pl/o)Sf9s*=PCr-A2?rH[K)qg&)>rH\#8rH\8?rH\&9r-A/>rH\AB!I4\D6N@,Y!<#:`!;o4^
!<#:H!;f.]!<#:W!<#:^!<#:X!;o4^!!!#t6iI&d6NI&so)S_$r;ca-quH[-jT,/iquH[-oDnh%qZ-R,
q>gEnr"8f+r=T#/!"kY"g&M*QrH[u7rH\>Ar-A2?rH[H(qg&,?rH\#8rH\8?rH\&9rHSBgqZ-S?rVutE
!<#:V!<#:`!;o4^!<#:G!;f.^!<#:W!<#:^!<#7b!;6Ej6i-l^6iI&d6NI&so)S_$r;ca-quH[-j8f&h
r;cd.oDnh%qZ-R,o`4n%qZ-R,rVup1Y5lK@rH[u7rH\>Ar-A2?rH[Q+r;c_?rW)nBoDni8qZ-S?o`4o8
qZ-S?rVutE!<#:V!<#:`!;o4^!<#:Y!:Bja6iI)a6hCBW6i-l^6hLHW6i-l^6iI&d6NI&so)S_$r;ca-
quH[-irJrgrW)m/oDnh%qZ-R,o`4n%qZ-R,rVup1lMu_@rH\DCr;ceAr;ceAr;cb@quH\@iW/n%rW)nB
qZ-S?rW)nBqZ-S?o`4o8qZ-S?rVutE!<#:^!<#:`!<#:`!;o4^!<#:E!;o4`!<#:^!<#:a!<#:^!<#:\
!;uoq6i-l^6iI&d6NI&sqZ-R,r;cd.r;ca-quH[-iW/lgrW)m/qZ-R,rW)m/rW)otr=S]&r"8f+r=T#/
!"l.0b5hKdqZ-S?r;ceAr;cb@quH\@klCa/qZ$VArd"JCrH\8?rH\ABrH\8?rH\&9r-A/>rH\AB!I4\D
6i-l^6i@#`6i@#_6i6r_6gk$P!<5F`!<#:a!<#:^!<#:a!<#:^!<#:X!;o4]!<#:a!!,Fer=So,r=Su.
r=Su.r"8i,r=T#/li@%tqZ-R,rW)m/qZ-R,rW)m/qZ-R,o`4n%qZ-R,rVup1j8b5@rH\8?rcnKhr;ceA
r;cb@quH\@lN$m/qZ-P>rrE"CqZ-S?rW)nBqZ-S?o`4o8qZ-S?rVutE!<#:^!<#:`!<#:`!;o4^!<#:N
!<#:^!;o4a!<#:^!<#:a!<#:^!<#:X!<,@c6i-l^6iI&d6NI&sqZ-R,r;cd.r;ca-quH[-lN$kqqZ-O+
rrE!0qZ-R,rW)m/qZ-R,o`4n%qZ-R,rVup1T`EL@rH\8?rH\>ArH\>Ar-A2?rH[Z.rH\8?rHSGE!."Qh
qZ-S?rW)nBqZ-S?oDni8qZ-S?rVutE!<#:^!<#:`!<#:`!;o4^!<#:M!<5Fd6i-l^6iR/b6i-l^6iI)a
6i-l^6hCBW6i-l^6iI&d6NI&sqZ-R,r;cd.r;ca-quH[-pAjgcr=So,r=T&0r=So,r=T#/r=So,r=SZ%
r=So,r=T#/!"n#eQ2pl/qZ-S?r;ckCs*=PCr-A2?rH\5>rH\&9rH\8?rH\DCrH\8?rH\ABr-A2?rH\#8
rH\8?rH\AB!I4\D6N@,a!<#:`!<#:`!;o4^!<#:]!<#:X!<#:^!<#:b!<#:^!<#:a!;o4^!<#:W!<#:_
!!!#t6iI&d6NI&sqZ-R,r;cd.r;ca-quH[-q>gI+o`4q&qZ-R,rrE!0qZ-R,rW)j.quH[-q>gBmr=So,
r=T#/!"kY"g&M*Qr-A5@r-A5@rH\>Ar-A2?r-A/>rH\&9r-A5@rH\ABr-A5@r-A8Ar-A5@r-@o7rd"Nh
r;cb@quHX^r;ca_r;cd`r;ca_quHX^qZ-R^o`4nWr;cd`rW)j`r;ca_rW)j`r;ca_!!)Zlr'UD_r'UA^
r"8l-r"8l-r=Su.r"8i,r"8f+r=S]&r"8l-r=T#/r"8l-r"8o.r"8l-r"8Q$r"8l-r"5t0_Z9U[rrDtB
quH\@r;cb@quHP<rW)nBo`4u:rd"MDr-A5@r-A;Br-A2?oQg'/o6L35r'UJar'UA^rBpM`r'UA^q*Y,]
rBp5Xqa:A`r'UD_r'UJar'UA^oL&6No0`BTr"8r/r"8i,r=Su.r"8i,q%<T+r=S]&q[ri.r"8l-r"8r/
r"8i,oF^]qo+C-cLB.6tqK_u=rH\>Ar-A/>qK`&?rH\#8om-K9om-H8oQg$.pj)g`qZ-:VquH[_r;ca_
qZ-I[rW)maoDnPOr;cLXquH@Vq#L9loL&KUob%*%r=Su.r"8f+q@W],r=SZ%ob%-&ob%*%q[rZ:o)SCp
U]AL:pNcW9rH\>Ar-A/>qK`&?rH[u7q0E!cqZ-A9q>g26o)SE.q>g7WqZ-R^r;ca_qZ-I[rW)maq>g?l
pI"fXpI"cWogA<NoL&HTpC[9&r=Su.r"8f+q[if?rW)m/o)SLsqZ-@&q>g1#o)SCphuJ]9q0Du?quH\@
r;cb@q>gD<rW)nBnGrH3p]1,8p]12:!!)tCnGrK4rrE"CrW)irq*XuYrBpM`r'U;\qa:>_rBp)Tqa:,Y
q*XoWqa1>`rBp,U!!)parrE!bq#L4&q>gI+r;ca-q>gC)rW)m/nGrFup]1+%p]11'!!)s0nGrJ!rrE!0
SH,Aard!Q)P5tSLo)OFDrt,5CK)gK'joG@*T`E[ErBmdha8l/N^Aricg&TM#rHYgO_>sO%`;m4Er=RNZ
JcM&9rd"#6L&h3?!!%TNp&P((O8sk4fDtqsXT6HCs$OF!\cDaBb5d+oJcLB&JcLB&JcLB&JcLB&JcLB&
JcLB&JcLB&JcLB&JcLB&g&Q^)JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&
JcLB&JcLB&mK!01li@!0ZN/k_r'TfNrBnF%ciEtUli?trd/\aug&Te+r-@W/rHZHaaoM?,li?uOf)WD_
r"88qr=S/lJcM>Ar-@W/!."QhOT>;Hq>g*erBleLrW)j.li?trUB#lGoDnf7nc8T5li@!0_#WQsr'U#T
r'TfNrBnp3ec>U[nc8S"li?trhZ/6.\,cGPnc8T5li@!0r;`esr'U#Tr'U&Uq>gI]V#^E*nc8V#!"nPt
r=PP"JcPZJr-@i5r-@W/rHYsSli?rNnc8STli?uOaT1,sr"8K"r"88qr=RZ^JcNOcr-@i5r-@W/rH\):
YQ4Sgnc8STli?uOV#^E*nc8S"qZ-0er=P:pK)bmsrH[r6r-@W/rHY^Lo)S\Unc8STli?uO_>rWsr"8K"
r"88qr=REWJcOL)m/['0nc8T5li@!0a8k&sr'U#Tr'TfNrBo0:cN*kTnc8S"li?trjoBu5YlO]Inc8T5
li7$2rct=?r'U#Tr'U;\o)S_VV#^E*o`4skr"88qr=Pe)L]IC!rrDutrH\DCom-62r-A,=qK_o;rH\DC
rH\):qK_o;rH\ABrH\;@qK_f8p]17[qZ-R^rrD^Zp&P"Xq>g@Zq>gI]rrE!bp&OqVq>gI]rW)maquHaa
r'TlPr=So,r=T&0ob$ltr"8c*q@WQ(r=T&0r=S`'q@WQ(rXf,BrW)m/quHR*Q2o).rH\8?rH\DCom-62
r-A2?pNcW9q0Dpaq#L28qZ-S?!!)nAr;cV<mf<;RqZ-R^rrD^Zp&P"XquHLZ!(6V`ogANTpd=oYrBgPb
qa:;^pd=KMr=So,r=T&0ob$ltr=K#AquHI'qZ-:$q#L1%qZ-R,!!)m.r;cU)df>F/rH\8?rcnQj!!)\;
p&P#9quHG9quHA7qZ->8quHG9rW)Y;nc8[irBpG^rBpSbogAEQr'UA^p-\`XoL&KUp-\`Xp-\fZp-\<L
r=So,r=T&0ob$ltr"8i,p(@3&oF^s#p(@3&pCRB;rW)X(OT<f0rH\8?rH\DCom-62r-A5@om-H8oQgH:
rW)S9r;cP:rrD\:nGrMTqZ-R^rrD^Zp&P"Xr;cLXquH@VquH@Vr;cOYrrD[YnGrM"qZ-R,rrD^(p&P"&
r;cj0pC[<'oF_!$oF_$%p(@<)oF]@KQ2pl/qZ-S?qu?_BrH[r6r-A5@rH\>Ar-A5@r-A5@r-A5@rH\>A
r-A5@q0<)CH$KAir-A5@rH[o5rBgPbquH[_quHX^nc8STr;cd`r;ca_r;ca_r;ca_r;cd`r;ca_r;cX\
"9:eV!!)par;cd`qZ-?jr=So,r=Sr-r"8K"r"8l-r=Su.r"8l-r"8l-r"8l-r=Su.r"8l-q%3`0&J5!C
r=K#Ar;cd.MZDH2!!)tCqZ-S?quHY?nc8T5rW)kAquH\@r;ceAqZ-S?r;ceAquH\@r;c_?q>gJ>quH\@
nGrMTqZ-R^quHX^nc8STrW)j`quH[_r;cd`qZ-R^r;cd`quH[_r;c^^quH`srBpJ_rBp)Tr=So,r=Sr-
r"8K"r"8o.r"8i,r=Su.r=So,r=Su.r=Sr-r=Su.q[rZ)r=Sr-r=P\&_uTa]qZ-S?quHY?nc8T5rW)kA
quH\@r;ZhCrd"A@rH\ABr-A2?rH\>Ar-A,=r-A2?rH[o5rBpG^rBpJ_r'U#Tr'UG`rBgQPquH[_r;cd`
qZ-R^rW)j`quH[_r;ca_q>gF\quH[_nGrM"qZ-R,quHX,o`4skr"8o.r"8i,r=Su.r=So,r=T#/r"8i,
r=Su.r"8c*r"8i,r=RfbL]IC!rrDutrH\;@r-@i5r-A8ArH\8?rH\>ArH\8?rH\ABr-A2?rH\>ArH\2=
r-A2?rH\5>p]17[qZ-R^quHX^nc8STrW)maqZ-R^r;cd`qZ-R^rW)j`quH[_r;cd`q#L=[!!)rtrBp)T
r=So,r=Sr-r"8K"r"8o.r=So,r=Su.r=So,r=T#/r"8i,r=Su.rXf,Bq#L=)quH[-R/kD1rH\8?rH\;@
r-@i5r-A8ArH\8?rH\>ArH\>ArrE"CrW)nBqZ-P>rW)nBq#L><quHY?nc8VUqZ-R^quHX^nc8STrW)ma
qZ$U`r^6VarBpG^rBpParBpG^r'UG`rBpA\r'UA^r'U#Tr=So,r=Sr-r"8K"r=K#ArW)m/qZ-R,r;cd.
qZ-R,rW)m/qZ-O+rW)m/q#L=)quHX,ec:a2rH\8?rcnKhquHY?nc8T5oDni8r;ceAqZ-S?rW)nBqZ-P>
rW)nBq#LA=qZ-P>oDnmkrBpG^rBpJ_r'U#Tr'U)VrBpM`rBpG^rBpParBpG^r'UG`rBpA\rBpG^r^6]Q
nc8V#qZ-R,quHX,nc8S"oDnh%r;cd.qZ-R,rW)m/qZ-O+rW)m/qZ-Wrr=So,r"5+mdK'5kqZ-S?quHY?
nc8T5oDni8r;ceAqZ-S?!!*$!rH\8?r-A8ArH\2=rH\8?r-@i5rBpG^rBpJ_r'U#Tr'U)VrBpM`rBpG^
rBpParBpG^r'UG`rBpA\rBpG^r'U#Tr=So,r=Sr-r"8K"r"8f+q>gI+r;cd.qZ-R,rW)m/qZ-O+rW)m/
q#L@*qZ-O+cN'72rH\8?rH\;@!."Ngnc8T5pAk&8r;ceAqZ-S?rW)nBqZ-P>rW)nBq#Ku2nc8VU!!)os
rBpJ_r'U#Tr'U2YqEt2]rBpG^rBpParBpG^r'UG`rBpA\njE<TpAk.(qZ-R,quHX,nc8S"pAk%%r;cd.
qZ-R,rW)m/qZ-O+rW)m/q#L=)pCW>ag&M*QrH\8?rH\;@r-@i5r-A)<pj)f<rH\8?rH\ABrH\8?r-A8A
rH\2=o6C=]nc8VUqZ-R^quHX^nc8STq#L1Wr;cd`qZ-R^rW)maqZ-O]rW)maq>^KqnjDsJr=So,r=Sr-
r"8K"r"8`)p_!H)r=So,r=T#/r=So,r=K#ArW)m/q#KstT`E"2rH\8?rH\;@r-@i5r-A,=pNc];!."Qh
qZ-S?rW)nBqZ-P>rW)nBq#Ku2nc8VUqZ-R^quHX^nc8STq>g7Wr;cd`qZ-R^rW)maqZ-O]rW)maq#KtQ
nc8V#qZ-R,quHX,o`4skr"8c*pC[?(r=So,r=T#/r=So,r"8o.r=Si*ne'[XL]IC!rrDutrH\;@r-@i5
r-A2?qKW&@rH\>ArH\8?rH\ABrH\8?r-A8ArH\2=rH[l4p]17[qZ-R^quHX^nc8STquHR\!!)sbr;cd`
qZ-R^rW)maqZ-O]rW)maq#L@\rrD9`r=So,r=Sr-r"8K"r"8i,q@N]-r=Su.r=So,r=T#/r=So,r"8o.
rXf,Bq#L@*Nr[?'rH\8?rH\;@r-@i5r-A5@qg&/@rH\>ArH\>ArrE"CrW)nBqZ-P>rW)nBq#LA=k5bHJ
qZ-R^quHX^nc8STr;c^^rVupcr^6VarBpG^rBpParBpG^r'UG`rBpA\rBo`Jr=So,r=Sr-r"8K"r=K#A
r;c^,rW)m/r;cd.qZ-R,rW)m/qZ-O+rW)m/q#L@*b5dS'rH\8?rcnKhquHY?nc8T5r;cb@r;ceAr;ceA
qZ-S?rW)nBqZ-P>rW)nBq#LA=klC_`rBpG^rBpJ_r'U#Tr'UD_r'UD_rBpM`rBpG^rBpParBpG^r'UG`
rBpA\rBp>[n,WD!qZ-R,quHX,nc8S"r;ca-r;cd.r;cd.qZ-R,rW)m/qZ-O+rW)m/qZ-Wrr=OhcdK'5k
qZ-S?quHY?nc8T5rW)kAquH\@r;ceAqZ-S?!!*$!rH\8?r-A8ArH\2=rH\8?r-@i5rBpG^rBpJ_r'U#T
r'UG`r'UA^rBpM`rBpG^rBpParBpG^r'UG`rBpA\rBpG^r'U#Tr=So,r=Sr-r"8K"r"8o.rXo/BquH[-
r;cd.qZ-R,rW)m/qZ-O+rW)m/q#L@*qZ-O+cN'72rH\8?rH\;@!."Ngnc8T5rW)nBqZ-S?r;ceAqZ-S?
rW)nBqZ-P>rW)nBq#L><quHY?nc8VU!!)osrBpJ_r'U#Tr'UG`rBpG^rBpM`rBpG^rBpParBpG^r'UG`
rBpA\r'UA^r'UA^pAk.(qZ-R,quHX,nc8S"rW)m/qZ-R,r;cd.qZ-R,rW)m/qZ-O+rW)m/q#L=)quHX,
Mu_Q3!!)tCqZ-S?quHY?nc8T5rW)nBqZ-S?r;ceAqZ-S?rW)kAquH\@r;ceAq#L><quH\@!.",8rBpG^
rBpJ_r'U#Tr'UG`rBpG^rBpM`rBpG^rBpPar'UA^rBpM`rBpD]!!)paquHX^nc8V#qZ-R,quHX,nc8S"
rW)m/qZ-R,r;cd.qZ-R,rW)j.quH[-r;cd.q#L=)quHX,T`E"2rH\8?rH\;@r-@i5r-A8ArH\8?rH\>A
!."QhqZ-S?rW)kAquH\@r;ceAp]18<quH\@nGrMTqZ-R^quHX^nc8STrW)maqZ-R^r;cd`qZ-R^rW)j`
quH[_r;cd`p]17[quH[_nGrM"qZ-R,quHX,o`4skr"8o.r=So,r=Su.r=So,r=T#/r"8i,r=Su.r=Sf)
r=Sr-r=RfbL]IC!rrE#ur-A2?r-@i5r-A8ArH\;@r-A5@rH\8?rH\>ArH\;@rH\>ArH\/<rH\;@rH\5>
p]17[quHX^quHX^nc8STrW)maquHX^r;cd`qZ-R^r;cd`quH[_r;cd`p]17[!!)rtrBp)Tr=Sr-r"8i,
r"8K"r"8o.r=Sr-r"8l-r=So,r=Su.r=Sr-r=Su.rXf,Bp]17)quH[-R/kD1r-A8Aqg&)>r-@i5r-A8A
qg&2Aqg&,?r-A8A!!)qBr;cb@rW)kAr;ceAp]15;rW)kAnGrJSrW)g_quHX^nc8STrW)g_rrE$cr^6Va
r'UD_r'UD_r'UG`r'UD_rBp>[r'UG`r'TuSr"8o.q[r`+r"8K"r=K#ArW)g-rrDp.r;ca-r;ca-r;ca-
rW)j.r;cd.p]14(rW)j.eGtX1oQ^F^qZ-G;p&P#9rW)P8r;cJ8quHA7r;ceAp]0r3o)Sdjo0`BTq*XiU
r'UG`o0`HVoL&NVoL&QWrBp>[og8^HnGr.mqZ-F(p&P"&rW)O%r;cI%quH@$r;cd.qZ-TqoF[5dd/`fa
qZ-G;p&P#9r;cJ8r;cJ8rrDutp3HQ9rH\,;p3H*,oL&KUq*XiUr'UD_oL&QWoL&KUp-\`XrBp;Zp-\9K
oF^s#q%<<#r"8l-rt4r:r;cI%qZ-=%quH[-pAjn!blF"/q0;r?rH\8?!!)k@p&P#9quHS=!!)tCr;cM9
q#L28qZ-S?p&Ol5mK!2QrBgPbrBpD]qEsrVr'UA^qEk5_rBpM`ogANTpd=oYrBp8Ypd=iWp&On#!!)s0
q>g@(p&P"&quHR*!!)s0r;cL&q#L1%qZ-R,p&P+)q@SPag&V*Pr-@i5r-@Q-r-@f4rH\):qg%B*qg&/@
mf<8Qnc8STl2^`LnGrMTp&OtWmK!+aqa9]Mr"8K"r"82or"8H!r=S`'q[rc,li?npSH+6AJcLB&JcLW-
J,~>

%%EndBinary
grestore
np
%ADOBeginClientInjection: EndPageContent "AI11EPS"
userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse
%ADOEndClientInjection: EndPageContent "AI11EPS"
grestore
grestore
pgrs
%%PageTrailer
%ADOBeginClientInjection: PageTrailer Start "AI11EPS"
[/EMC AI11_PDFMark5[/NamespacePop AI11_PDFMark5
%ADOEndClientInjection: PageTrailer Start "AI11EPS"
[
[/CSA [/0 ]]
] del_res
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get exec
Adobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get exec
Adobe_AGM_Core/dt get exec
%%EOF
%AI9_PrintingDataEnd

userdict /AI9_read_buffer 256 string put
userdict begin
/ai9_skip_data
{
	mark
	{
		currentfile AI9_read_buffer { readline } stopped
		{
		}
		{
			not
			{
				exit
			} if
			(%AI9_PrivateDataEnd) eq
			{
				exit
			} if
		} ifelse
	} loop
	cleartomark
} def
end
userdict /ai9_skip_data get exec
%AI9_PrivateDataBegin
%!PS-Adobe-3.0 EPSF-3.0
%%Creator: Adobe Illustrator(R) 10.0
%%AI8_CreatorVersion: 21.0.0
%%For: (\720\763\761\753\740\755 \716\753\745\743\756\742\750\767 \725\756\753\777\745\742) ()
%%Title: (cloud_technology_04.eps)
%%CreationDate: 12/18/2018 1:00 PM
%%Canvassize: 16383
%AI9_DataStream
%Gb",KB3Q$RfC8\5^97&L@R3j::>8\IPn\g,5sV^8O:2[,8PJXomgm`_Iok<M8k9g^E[S\J%OA./D6:MJ/i,GQDfk<1CAf^@ph)$#
%N6J#1g02K3AnKH[K_O)Jk2ouNpOdWb\ZDJB()@Zl<g]<b2&$J"&Idt@)s-L!;"*bY)WdXJ/i7=&<dQ8oq!$Bd48p*[nMBWd>-7==
%-=?Af(JlKg+c]4G>#8t@0)\Pbc>!J=O/_]>2Um<_n@O?leB>7;-.mkH6"T'hT"!s@F%h''"J$#2*.$.T7"q3+>Og)lA[JOKH&eT9
%(YeJ%c_<'2^u1-Kl'?9Do,g1_M,0/95<5#1T,)g3:QD4AVnaA`^OL]c^#V(f*q)DAoNQdBg8MnK?jQ8Z4?Uh%K2]NhlS'NNW"aXH
%4N_%F$^oft6J>D^c=g/p7OeAt^N;C;W;dWUr')ZSoc&?=11nPcIeNJmfS@9H@/;GUNt#5X^X<-Lk%To6/ZhM6dViEuYJD#WmkD7f
%f)/9.*+_GkLTB^KQIW3S+.0&8lp9/;D)^bda+bcl93E:93KBNXD<fNVorJs0MjQ6o;%<M2b.J/\9$i_`QYU^RWrE7ZZ8J;*VFg9+
%[hc@-e>jV*cQJUq1V;,7">sd@=hRf+Oj2n8VVe\tU#.m=3Zq(T=r/Q0.H?/r]]rg@q`f^6>;bUbml#gp@H/pKFAY!'Ne_i\'eQ;a
%OYuNbm[,3Y$).,Z\)>;_1Pk;sS&<6F2\+.3*luB>X*RgK0.jcN2R];Pd91Bf/!8mP7`OOsKM^6ZrHRTtNZ4qDklc-_Li+1KG+t9Z
%/\?'Hq`$_,?Co[F.T4Z51G8TdK?=EQStb-4QSO)s%C>\&-NCD>;Q[c"e&:.PNP@UeIhrG!C7=o(3m>V$ps_.rBrOMN\XIAF1#'^_
%C`A;c2AWXd;Frb2H!&)XY`&heW4M/#1!daHp^M^_YsJJL'ae'N:r"H4!gY:#n7ek4gJkjc_?-PH=5lO;OEj7L-U5SMlFCUqFo9$a
%L_p'1@YgAfQCf<up`%C!;YZ`#=6/;^L_p'1^CVjlND2.4\7n><IhV8F"i6!2p<#5R&R[=]%=_lU;@-cHQ>#b]Br32?$@d+s`h!e#
%iUc9CIi>tg.TM0%@55\4Iq)D>Oc2:bP7r^YYScAuAsu</Pn?OaNIN+'bQmoI%N[q2)iGl"pmWXpfnG:+,JZJX0@8Vl-`O**+YrGi
%(_]]mL9Y@oB^e,@m[;g1e&Fi+5:hEm.NV"]WB+P7NtFn[NQ%::&P&]+=2s-""qcORMT_811&8<ik&eSfMJ3d^dGUF(Qmn8]W4?L)
%oD"^HgbTV)#-T@CiQ&jV@]FoqSf?VNr(dfo"dM*;kFN!u9pFi`ZZ7>i>R.8Zl&Fat&M'"Hk&_mO&LUKLLmsXi8$f=2*R+eK8Wf4:
%7jLsL<C9eMF2M6_f/<D[T2J\Snt0@[UZdpA=Vh#XII]V$/d-g$:]BN:r-.eTs'1ojG29BH=8pD)peg\*s71I748S#f:q]tA;"Vm0
%f%0Wbk`c$\iBO=)E=VLtcS,=#ro-_ldBEtD.$\iBB?j0K=gVJ7T(@!!lhk_@*&WH#jk%nPZ=9o7<4tZ,>^o/?pAqec8g=qYd^uTH
%&g?[+<DW-;//Y'r\]C;D<@[:EoFlsZSMaKIhJ"`ekF2>cZ%&?)Ctj"_;o8jO>tR8F.+d7;0Q!RqC'',6E[#/MZD!teOM*/nZLZYF
%a<<]'b:!Zr9f=o-)GAM1E:6FHC<Er)*`g:#):U59SL5\bC[euO%\(<7p_0Z;X4X;K\H:J!l+#V#8BO:m2RfPIE>Bh6eo9W&K4k$B
%CHsWc8XAt0A2k6UVpV,r,173[L7a9Z,*W,Q&Sa-A,**rm(=PnS-;KOfR+MsN<J8L,6Hg8@"<0["6$6r.$>BVt0oa+`il;!fZ:V3o
%iTLmrr[E`/0`L7:iOFu6a@bs?FTqd+BOm(+:W9Ol8>5NS9S3d83qFRSLF%35e\&N8jW]JEG;O1_k7REm8VJmDfIo%g_tk?VZVZ*Z
%BMQ2h:a-Au"dJAJAtrJe?`&QS*/DTigLrPh*iQ.c(jDd6Ak>>"/</:bJn\AfE\:>!\S-hbOl1.<1;QSIR0JTa.B>k?e/Q]=CT428
%)(_VQ`I[2c1.bb*Nefb+:6a8@,0l>H.b\oH2-2XT1+`r@PE/AB3>".-9&V36%>XUAcK3n_?S;<?nRm^3_a60sc=NqZ8KgR5;u]gN
%^XHgtP``iYFp7AB8Po^?PBr9<9XF*.aV"q0"6Mt<(_D>(R/#JcBm.e`TV!8C^p_l;c6b^jB$SkAHm1\SKQBlIlX<qDQ;cKAq2S\B
%:Jr)n)cCA`a+VlsUkCKsGm.5iY3$Y-1S>l_jjGPNr/Mf5-sZZqY2`rQa+Aahi!0gl_O:\$Bf=t.B]'D%<N+j6WHG9DeX7]d1TAgg
%.!m@ZXA%.1.!=M1Qq=Am%WI;5kSB0_$Y*!1*U1M785f)]9L5cu*n),O;t$UBdL\P]4:`2>JamtI)`2O?Ado^BAlb3WI&6n<OGc[2
%P$7*2.7oE/M<5!P(+OZojs=ib.5L;@=<u3Kc&q=:m\?H_A0+Opgl#jkbn8:>+METn9&HtSOS737m=6-239ti.Y[D=&158=:)KW?<
%lI*Z.iB)i+Z8R[E9nt+,%OX[Ta(;EnnIS8tr]q#a`h?fSeHt@Mjb[ZRP'Y\3Y-<$_;7(1<gFC4g8MWr*R-Z:4QUFi<,5gs!UARuJ
%b*.;k8gUHRPl;pqLh_L*-T6RKCpZc6GtP"LgChup:kYkPe6+"\6OB^3^STs%.W3fu;VQ/+8gGU'U`,6:V:<:o1b<>ffH!Q9Gk+s(
%)DEghl>L]Qf0\7;!DL(:ToLd[8inNg7b(/u">LPUB<d:_.\MR7r"hC+*ZB*!0l/1-Z\:39a<LqGI"<1a7p6+0"[?.D&DNj=TE;(D
%]r6`:(B7.SC=7(5;W?>Y@H3,1<e%H5;UuhCbbeW;^(i[V4MM36\rhsAB.j$3PsVt,%?#JYB9&n5Pq(4I4@bNe1/t@@EpT\QHF"!r
%'8BgWqf)J463e8GC#9YZg$#a7b_8Mg>$3NS2mJXgK3'3%q\7Hf@L%Q,0cZ6`>(n)Z#1IlVd9*\(l.[1>a#GR%B1\(W:9EGg,dtNl
%`V.gnnI\P8qtI1=24*tfN_:g>knYbF(cgB^OLt<[..bO<MW[!_1()/TiNR<"OOh>u2Z%k]2q3O!aWumC$ETKPKZLH3'=*]9TuQL4
%3lXd&A,sX!VV^m^#p/[?qm<H#3#oeTjk*8266MDQ$nPCk84[ckaB;np&3='[\>-;PO+u.noGt2<r@"VMo#c(tVNnJoZuXBh`&^NN
%YS1,JL),(*qb?Di-W"P]'#m$?WDN0(!fCTA)(T`&/Vfm<3H:K.o3^%GbKUs$\sWn_6^W##".D2^N>[=;@B6n)Bf8AuE`i`o'IBS>
%f;,uC%>'3]PuoIi\S0>VWD.QW6VA,*%nHl.0k(o,#t)NGp5,Q]36oP/9I?aVnd-5]@*..R7;<c3-7=i9for"MkXFPp-1*Cd,0`QJ
%`@(MXl:FhE)5\LOQ6UF4qo/u'Gb4RFE\J,#&LsT\Va=ja"21X0`ELd'</[OpU]e3(BGragZ?42'*/q4@U5?e=R&>e<QAY$R,`I4d
%ok\doGT7??<l<,q/CtlNYt7u2>,Ge'BiLWWB16W@;FW.-!oQONqP$_e(U7%5_b^Ks*l'D7:Lbgjc%@1E=/J<;2GWs2bUP`@2^RM,
%1r<d+.\"3n.NL>-i__r,.'p?.a%QiA@-1jFcU&4XF8W11_i0Rg=]T4raRpd/Q+#30iHnAB,BI*XifN=8Dk;$5DlGq2)=3Km&38f,
%FNI%*cRE)8ZEDu%A0Rjg\4K:X\B;"?JJ\n7V,$h#TrKYtN`-d^Z-1;T)Z=s)?t,4):W>X0R[$D\I]9u?*&qtoF@m9RGm\-H;du<?
%]nYbOG"?\E7q&i7]<1qS7762kOP,E^$S*Z,SL!Y*M.K;UOCRaIKikmBd[,gq/_!0%l(hc8RTc;Gr=B9:;1c/lbR-&gOpk4qh&qc"
%Jcl`,%Rr77Ik.[c<e_mQ$RIim-)Fq';;d$5pC&`Ok,]b-OEeBG%S[;.U-r7oT\eYW#ET$3.qrd^(usLa5]kF;1)[4lI!!T>80u8?
%3TpVi/VO9RBbt)4/oh>fQ`oO?9-qtes$r^0[kVF3U@MoN1_)WIenhYf7)5NRm/R:a'6,DROJejiHml3K;b=9*b)!l-,/W$U,itkf
%8V1oKVQ"YGX(\1h*JpStrG$=<)4mFIoPgVYUXkeMWQ,YKbUd>(84o#K\B<!NQl:7aF;;t1gS**9\E@"MS$irt:dKaq#=kN$^G$s=
%)R)7V$=dYi9Lm+,MT.-:*D&+9i)CtsqX1u&&^>67,5Zj^d[@8f0@E*!gQ\Fk3(K/h]k46VEhd3:&2Y;@[>n\X=A`9RkFAC2#`\??
%_mmf1c;b@BfqbBTk+uTl@2pXg<Xl-QqQ9]A5Pm/%+?YdtAjNEakXTB>;W!<M/u8#5)2'c$<2T6RL"&&V(=^b<VYW]o,Dslr$s:qM
%1Cm)Xi[W1+0R=6N'.KtA#hanM)a_c)>+n/F81<ggCISn_F71=ZL@]6Ir>7MapX+YgjTdS5S&?4ePX4O58I^K#""ND$)Q$I^ac$Y9
%41A7oi!(t4[EuG%D1B'FN&R*j[2QHmR=#qO6-g$m::L$8n!PE9nZ)jnW7GqjgL'u+`R!?"]il3nY.#>*k!o<Vn^i9QF-Xa:OP-ef
%K+'ugd*kLQq+mljI56Mu5E>]aZuu-ui!80Ur7Cu_nEDp^!7]]#"Fd]e2X=G6O%/bhE"R37kPqQ#DW7"/IiFV6NE5_e5p`jandYSk
%^5[A%3r`Sp#SYRg"j_mRcSPL7Eo[<cWbCAK!oQBS'\X&o9/F(Uc#9RaJ\(KOqFji&(n:XNU'<f45L/<*EB.2Z2PD?>Q:(d<D+/_#
%_elO+Ig!/K'Dps)dgTWfk1BQ4Cf5brs1;)FM!LF03<;*iB>@CrUW'.p0(b))#s.NQNB([[RkRLc+'/SSA:`C.<*f<jo1Zk6e19p9
%:EA9MMF83W'WO8.?lOj=4f+=`T9gpb>.&br8YSc(SOR!U$uR"^>-r7ig_>,^fuV)76g'S/*J"an9I+,tWkftm7n^^PL'73SSSG\N
%*;jVsJlF:'n8#Gs=j(`T=3I"ZX4oha*&\_Ch`u*)`c-h"ba@7kUs;g.U+:t_*/f:P/L%5_',;TB%2VO(P*n?sX1heNY54-F)J5f'
%Ck[uec1qoeEiff^kYFVnXS$pc:RW3BO:l6r8?'EC)M@]dR5h5`$!hO=9Yo-6%Z^dQ%O7eAP,6Zs`)uj=Nm_>?,71Kq/oTc(V3klG
%.TPtP"rPOWAIe_5_/\54SrBmG374YSH3Iu&d&hHmG1-".3@nb7,q7KR=>A&O[Bj@tBL`LR6mE8`i*XP'kJbE&T!b`k_h5Gai.-"?
%Gg=e-HY*T`HFL6ZW_j)dHa-boUGRGckD2XORJD=bCNXm3#_["o:V*(sI"`qE0\:(8]k,@LeQSdae>\+`H+HlA6kAfhk9kRpn8Q*-
%hJV\-gnW*B"6cG-QE9VoYB=EA;aQ3K'b)QrpFj'.N%%X#adB<VD&e1gdZj$*I^$1hI5JC_8dZiKd("&Dk!gTc1Be7Q-Q@b*N#>.E
%TCJVJCMAki&#s:*SJ7HiJs22>hpk?^49[XKgllh)Shq0rN$^s+Hb!AKpcj?e)DPQC>k?_7[SB;eeI($d=rMQa"imK*ZC2VicACEg
%9!.#u2lN(lBZ-M5j$Kp*39X<jYr)m)2O22O`G,*$;0nakfW>1*K@/n&Xc[j^NW5JFlbc1Tg-l>Y8)Y1%nSm2XY^WP%#O06]F+gC0
%`Erk0DQ=bYF!;n>7]?q;+$Kc3(dk%F$sGiJ=Xd1(MN1hG$B<5@UJ3IK$?<VM;,F2HH2pa!_.dM,(>2E&A7s.2]3/Z'MsPm-SNe@)
%9;*VCOkmMl]+d9:=^X16J_b%`#>qG5C/irocu,#2hCQ%'Km'fLDQ6&cTk/0^9KK!D;q[+3fl?Q^T+nO'Cm20Segf]^0%F`X)h]iQ
%7&ZYFC86[AodG:d)WimQnZAI@f;FWUKO:]XEE?HRE^W@:B+HK.Bsg-,E@1VZB&Iljh)'j0<d&<)i<[[BT/+sg.md\:]Hta^0?d1B
%>:%gI<Q7$togV*(>a<Lgb:_Y,Rq@CaKuZ)7)1C2b1:i"n=pBGAiB)E>j/')WnYNF'9TCS^/j.n5=uFP-QMju)Y67UO;H.aS3Iqm=
%FV:4@Eqj4VEM;CDrq:i=5c5@(4+8\k_M1^D$`-mCfbeC2PJ16QS^UUYEsUgXX-]ebgB:"C:7C6AV&9-/dKT'<Z:j`Iisl!/[H>#L
%$UXlWg-AGA)O%Vod.uKpa\CkMf)9Ku?1mOZ_,sF?%_-\VCuSBC.2csM`Vq2?IUb[BXAXJYh*HAP?g=u^8RtSb(.aQ8\k"(@(Lr^,
%'M6W/6$O_qd)QuLVSL#AK7c2;o.Xit4b85C2'1hsgViFBhMJ_$I]M0_^C3/;4I2tSOXYCg+)<."E?X>1F*eoN*9Wj["Kf!1M)iir
%>TUk#%=,C:4Bk2Ph.t(\Nk!?bOHj<2>=5!a+j\`$B5>S!6#dXmd$@U6e#?J/``6M57>c5rDEM,^SuiqBdV,t0j4V$6"K[7#er@]m
%r3p(i3(4%P;E[21[Y$oA%b@DHL<$IH(n:Dg6GmqMV[sL_JErB<_atUc(LB=Y>-7>hB]NoQ%M]=%Q5d52WUnsR@ge4CC:pqFQ7+oT
%\o6"KOqd@hA<]u%1s;!*11V&`+\SZjDaBgcbgL#8S0h`qAGN;A"SH?1EksMe>kP2'r1huE"eFaU:g%\Cr;+4:]ik>NQ9Ul#cVg.n
%=oN5XS0^89C-YUJ^J\[i@V*SlBAF7]q>[R'G#MZe'UB_[R\j2`7)X8[qjX24j?P-?fToju<3j2d>I,g;V;1'pat61Ki(J:0gMPd!
%l%:^-"%XS6'(]la@]rfM?N?E6_6nc]&11Zj_5PL-nM3bMbRuS8`64d8G`c\U:;"Y!%-:i.M3hB)AX7S/-!k2?QTm\(1-YHrp?_C=
%Qitig%!\X1K65k.j^'Gb1%?-I>BaSrNMh`TWL9X\_MU1:$r$MO'ko:IR.Lb:d`fVq_MUq=Lc5'0n[@90IVWl&W)Yp+IW]&4I:aHH
%fW\&\ELbkI1c(/%$F;)95c3/F1YXnW3L\d`FLuF1]#MD.DK)'#i&!&ErPS%a'"5HiaQ@8tn?+!E_aDW,99AY',Ko"@]^n\8$^$rF
%rmrg+22m4tMu##M)f.P\-N/@sic`!G2AJ9ZpVEjh@sTfA\38NRfsMV@9[l%-c)JJO,)$f2Up3d^0cI#J32CO0.V&)dDTST*`p%2!
%kb'c>JkF16%9'%5(qJCr]QT(h1YHO/[+8niGfTX.8^/nq/8#gLB_ph*kNA"o:$(:19QqtEbDhGK;JrS.)ECEHca8L*#oRY2V<D!f
%ob8r)UuedO2l='%s4OOJ%bg)pV=AcgG3QG>^MdM'Vr,F`56(LBeM51F4b#Z-dVj_Smd*Q\he&'!bo56Dn?A.F_?`ii@AtuoTB2s*
%VhmDcFW7L<RJAqnl0mC?cet,G\!'.WVY[lpCYU<0-XO8<F,Hj4.@U'#^O762'BFe)m-FlN/;$/6-YSh4rme!9SKOP`6ZTLHjHFRS
%DK^VZEp_kg5:&6ENg"#oB.(bJ_`5q:OACUNS=LdpfuD.)UHd<f:1FM(f/Abg(W(/em.F,::YO%JN)H1;q7+gL9I33aXqu\f=kg!$
%06bS[s$s*dguF+/L"'P?FjdAqoe`kfR$q%;XHm<em_j#KV,m*!$co5+Y1HU$>e&<'#G#V-4D6/uESLiC*EHsTQn_Ha>f`JEHk;+f
%X%"s@-B7>N`%5_RS>KhmS5$F=f/&lnYMZf#14%6Ck%,@\;2c0,]%3QuHcRhIBiOYi4uAVc?CklZ&p0XVB,G*AXX7r[,p0V8OhLQ(
%ET<:WWP9ZfnMXX8Z'`B1TD2VGDD'*h(3Fa"8*==$.K*1mai(AVcP3IG>f6<+GR:s()shMm!BCXbS_L%NVL0%C2U)i0Blp8Va)r'!
%(#nGQ3))AL;De%Vokh!"aD:6>K3"u*\tNZ[1bK+SR1sEm*WMoN]M4lF9U$UMCssME=,O'.XdAd[;N54XN0]m:g%;N%qK0$25#Z(B
%`+AbLD@W?O#EK!0[etIK1sHsV-BRDoIGeMmZQ@`idjEr=]Tn<ak.:)/d^.Fn^Y,;4Dn0%g(?,0@^Ws8ihTQbY)]HQZj[mqsng*%R
%028b5]92U%8L`HhgOAs(q)?(GD78Et\'<,+AZ3Xj2D35ea_[a@T=3-k@Kl)+X8Q#gGhQn;VD7X@Cj_\j8\paQ1gJ]N*u:uO=nC,/
%@.l+9C8^nQNKck#a-Va`"K0drWbX/:!eK5XVHLHgQQ6lWBl$dsg/ROE#`[5QQRk?R/B&_n(#L!uC<A$dS?.%3Sjp*0jmH]hk,1ei
%,RTS?X]i+RpaN@B/c2sH:*WKo*\09(V#8s(rm)9p#9Ia&Dl*)S\`EOMqdj91`_OP)K+_l]6$4cej)Hkh&AMPb9I2&FQ\_('K3GbO
%K#UbroqWrJDK>D\H57B1WRK7b6:jTJ?au+\%OW#4o93l-r6f^\i%*PV/mt1H2Ko#'[,Vk`7W*PQqEHri2GSh8p/]D*bh]MIV8s;)
%G*tuhJsjj-A8\WqTdVo>bF5R'6CJIZlj^P!mgg&9'I7AfQ"i6Pra-B[QSX$D/si\>LZEWUgqhl^[$p0;>2q0Q]%KdKrH?FucSSu9
%'$N2i9_6Lchm@&\d!3Fc9iFelisF:mNcWEqQ[7Rla(b5[>sf']k<9;ARi@>VRdDP6gldg1M)8:tN:CKmh+E=<H'%HJ;.7;_7d'5T
%-.UbjA@X.3(1u/o9nV2^mKK01G2Qip:W_LK>Gop-0^4p!h3.Na7ea:I5$=N;9;[kjBjOF-1?`oEB=^$,F1H;\ghhINpFT5Kp_K7M
%l`=#=h<]:8;\F%75RdZ^e*+OqM"9FX`q=X=1aY@K+];a25!Lbs+(MKOS\;FW[OLe)):F@c$#\S4&i]+9N)LfmpOs6d(NRN7R(\UQ
%`ogbK?H@Cr?H.9FQITVdjSX(Yj"ptVf?*[Ac>/7`D+8,Uik3*)bk;.`Y)0a`Y,<5pcnp_O,K6q5fiF*;]:uX6)A?iBB3R6*>;^<:
%JY0Ullo'W32tJN2km7_ED.[Z>EA]nC15j[pZ.^JDC;9RFa"cuM&9H=8]-A%'PCE;FS/jd2Ls:#`5"T`lFdCDlH`T$HBM>3Pm,!>Q
%7N*7Y)3'K4H)FC!B,Q\37UskYAsUi3AMe!:NCh?-d'\RPhhKG6Kc+G^Cn#>_Eh)$8f@kKCB23rZj#1/KU"ukF7k/W[N(ca!5\K@g
%Mq.(#:2\Iq<%Y/qhMa=WDoV($HN-5=4g$XTYH[P:qTuSC.U;M+`d)5AS\CTg7*k5E$F=tq(@V3J]U-K,R)OE9J\itpRlkflN-I"p
%<o$ok2stoD`?`^F]u^ZVDY?N?Z[cs0nBD$K=hls(phk;k-hp#V%.`o:ZK1^jr;0OMStBbil%B:eMmm-pnh%I9?_9c4+YBuKN]Kke
%]68)8Y2u.%e'<4+3P%ZLG8_h*br7]=PUCe%2]p;ofXU`lVS'pR;>q=[Y;CNURI^43`&Y<c%*:*J=XPYmk38#s1#+^1;Z]/%Y?jdX
%%?iC].5hT.h-/`.)NSlAKO%72s3=XHs0S',M&!++0g&CKS=/AE:HRr*Z,Z\sX>EU.q<P;p_AbI+_,aKE3R]*,nLJ2J.@->.kC1)c
%e..(6:em?q\QWQLpuPC)"(!(aX&[/UD2QkeZf[U,bFm_FnXEHkEjUf%06?6UT(k?m:?cO4=&'L#BI,G(C->!(C228pV%:hIf_dHE
%*d*@.R21jpJ8_+:))aR?Xl%R>r,Wc0r(=q<'<f8N,c[_2Kr%)t[_FL=Ks[DZ)OG13m8:-.c"2d3lnm/CTuQkHBEdIeNlK#@<2uMS
%O#2#;.QT2`;CLijC9$l,KZ%R%P3'a(IY40Sp^1N"9*DfT\Bq05l=nnS>jbpAL[72q9Mhh[\Bq6Ul[b\f!ktsI/+5=Cgd`)03\I58
%'J+G@S>C6TA@Z]Rin+2'J#5I9*/9L29'KMua`4"rg'WH3VN@Y'C9<e>;g`H+ObI/G?D\A2-T<o7>AtbOiiT`8oG.QbjkI-U,n2WY
%P.m=CSLCJ7@F><H:Q[Q,\udCBgU.c-FpZi<0?SrYcI5>8[$[F6hi!Z7[@EDn.&iSKo(Sm6$@e^rS+`SP6"[PAA[WE:Ipm23j^&Z"
%&(lf'8r66S>+b1NR8f5n[MNLao\46=Mirt<-=2D^VS+BlOI6l`s.-2Ie$u;&eQcEJ]#Hase,A:-<'.a)1GO;:DG8AEgup0+3J(IX
%X!-<nB*uB.SaQ>qDX-=hdqI.Wj8c+>m[kGGRGq?<$!Ms]d?NPFHHg5<Ar?$6.Cp4s>/0H^/d2PnMJf<TAr7'4h-=hbf8eJJPu-EO
%9H`Qo<MR85X`U50`C1*Zj"BBePJ@+gW_(NAI^W>D_XCdA@2a8gV/[,YnuZg,4L=)"rA.9L]<)F!ER_l75:uZ<>4mgX5ScM!1hohF
%GIMtVkOI"kRB.A>+H[Yh%A5UeI#,V3&`PTO=Y[":Y%dN\ru&Jto)"42nZuK$F3s_c$ec^4>P6"nFnuJ7@Qmk3e2+OfRM4"TOMDi8
%0:T?l/>Hd"iE+TP1sONi2(36E[]SL)Tkh)S_AC[D%9"A^=^B[_D._Z#=AtQ%8FM#e?^pQP)o2FWbVM>KO.WgRjY(kgcUH_kT^t;g
%E'OVe9QL.V4!TMSj"`.faI>&/e*qHcc-"b3VL(4MEEilj](*&:UWI;>N[ZLtT'7,Qko_E<c*:QMZN4%u&>GYS+g?nO1s`l"Oh:Ig
%J`Cu\gU:>pM/6n/NoSYPU!k\Q7;2jcdd`7g59[RQUu2`n\r$ICoPi%%%,`%a_3=6l(Fc1@\uXecCRVCFpr*4NUG%r0@cK]9#)E6K
%PG:43*+<JD3OT6$/GoU!i4BF//.K<$pjl5]rqn9G`rU`^\q]@/86V==b[d3GXW\38VJ!.n+R^OC&&l?rQBul`],(,:@-gHrJsqZJ
%bgDl'c`[MC:;Fs<SKKhNjZ*NZ)TU;i_T't'#%'V</E+[T,'aWg.;B_o>mmUqkkqD.CC-Xbc.[Ym:=<2>lT]aXIT2s>jCkPQbbTkI
%X/j\KDDJ_E_r90`aWH?\jpTLC;W-_$r+nLu1FO@3jWfA4AA+RogTItH^VI<[kFNXh7DfM9'g4\SH$Ri:@8m1ZmW.tc#PB3:.lPOU
%gh0OW4$_T3j/367@YK:Y>^-7er;/[=#J8,T3-:Jd=3^Z??3WF?F2pYcP.BWK#PIf\&&6Y$*Z:J5@=0aaH43<m:B!9HUcPL'CL]i;
%X$^#4ks<ZfEt4R,'JKGr,*5NARMO&r)WclbA7C6^U5JqFVYKn=(`IVD*N,CmWdg1@.mFLgc0UI=nuo52Q@>W2$WqR-QlPWIGMA\.
%jTMNs)eIEn[ZBi)g/(U&krJEd+ZBY$O3IR+a)ej\\UF>K"Ru."B_$>K>/!.7I*m%11Fl/Dc90nnr7V_#8#C0<(dBB9D_DGncT7XR
%)R#8b2gH)NJsYe*,;Dgb*]4j(lqM6Ta%\LodE&/1Wu;EkHEZ$*TU'klD`!4-FjfK(O0K^qG'7*?'XsOX@'3P!(jCT(,VRQmb;:Ta
%T)^Z+&`^A03dq5PXktfLmp?Uf?:AI!;Xn"n1k@J0ZM@Z8<0.pR`YpeDn9JohbNsC6c#+o8n$bAEX862W-D&m$g5T8pgbB<2'o>OE
%62Q%/Q2-K59LIuSInN2u18XF`,9LU3+$^Q]j<k]Wo_iii"M"tIc\.-#nG'T>9W83t("@k:B!2rVK2*a/O6`s=M1-2KrVB[K5795n
%NFoZ!A?f2HRA%0+qNX[VmV"Nu0qpJJY>s>jYY2`Z+^pZV;RoY?`FjjSQ"Dlmc"h2APO!B1+e]WS_Q\t)1G@dt3[YBO<QUKqn3b4:
%S4'\(%Y70D(aX6#LTnJno7#8*KZK3jpT,*7OgqFqAH?!@;[dP<ca:Qr_T8H+KLQG,C=\1Ula6S9]BQfoXoZ>5>04,rJr]1^Nq`U3
%<e:5J:&mWj.,f9U[$PM':#OKDQ#7t-$!3ii@cQ%#+EJCte&e[kWZD,8>,uh2+/dlO+bkVL9O7/R5Q(4@N(F`@Y1FR>IVh;_G&-KD
%c_QTR8"V$/,a+3!)pS/qI`=FmpVN]'C]?41XU[g3\Mf7SHRnmE#?<-mcttZAgNM`C]F(Ihr=QE*Qq^U0\D].8Jl]K$Pjr(rFdTgO
%<,-4KFFl>\$+WH4.lQ!WJ"V79h=ZoURI/p&;!ToF/TVg[)iu)Qj"8aJZl0aS.A&QkXHnhf4hSjQPe+8k,0sI1)c.$9p>Mltm<='e
%#*HU>EB"5=0DuCQ"LnW;NFJ@upNJC0ZJ1AE?UL*H-ljs\M"?F.pLT=Hq)^a@'4PLm0_4P#C'Ft1a0_U>cGoATBMq%+eYl_md<]J)
%Y#Ur6R[>#h#K6QLBVO4&+u)hlBora.r':R-1E[2lh755HS#-h:L>pB)GQneF)m)_/kqb2bVlq#0jE"D5"PYVjSCB/1`I8R?1r.i%
%6"V&`+%cUf.]`r2gLOH(*OgQm3l5WJV0f6hHS[EbAZji,eOn6@oaS,Hf9c/"7/KZc:359*=$*+JoPl7W<4eL%NdKOb)X&jk+j$j"
%EKNt:aJP(4f41>.ATiD<,0iMSU4=duO=[t-O@=HCfY0RubKQ@raIHL]=)*JBK]^[.8"b_[7LCEt1R/j/EKW$.EBhTZ",@]Y=78S&
%2#[7q3I8EMrF$@'8lV'VH5ab::VSb^Z7"2JV2m)Lal/pm`61*c/haLXW#cnUVcaK9Q)cXDr2&;^BO<3lpDH`3q//7o_'3IGNf3[t
%CB$,sXXiH#f00m"2sN(e*O]j*(!s/R=mB$R.W-k"kio1?&Fpu8`_>`LJrOBQ0rdX<41k]b5<gSZ7fSWgknX/V:/RcHWoJ8p^b3GT
%m;2[TY6:u#fC8L"$9DkulHo4nJi+P`Ys41\:^X/UU#j@(L$HLB+'o^GUo@"]aD_?9JgXQ_lQM7YeiQ.SPI;CA3<6sa#<8ZM9!-c-
%D+$E9Kk.Z%WP*`tE3kmn#F(t-:7O[@WM9.f;RB^300:(i?e4N$(_ga+p\3Dj_BsZ8GgjEXn$^+XXi-S#?M+t=LqE0%'U\?61uF't
%m7o6;#u:G:X[<:=:k!QeG-SP.(K1i3au1b0)mt"g;)BdJ>NNiIW+98<Dmj2e@2of3AA>F7C[#!JkW;jB2N_53cRr%oH3m>LI-u\9
%Z3/j?kB'3N)6rJR(:eCS<JP)'jV([9*k2cLc:JokZ5mQ$L7h7,-IjnW5T(RCQH:nlTK9M*X9$P&@n7N-X5bb/,#pYZ,]U)D]XDo]
%VhoHm9FcA-,SVU].m/nBWBn\&$n6kS<J#DeX<,]-oHtZF*FYk`d5=\"[8[>.2Z%7,&?3(C0f;%k8/Q`EeGQUEi#,;IiiPh]dDBkD
%:O7eE)clAA"MK\W@R-\&n;M#mMOf?7Fl$g1G:5]&(sfLF#PJ'+!u@Ztpp.f*<OVU2Lk=W`b4X-<NpQ>W#X$l'B!(uPjLB`O28;/W
%[8+,qLh2=MG!;]Z17UWNF!\^5!#9%h5(]K-A/i"#Nc#Dq^JjNYDN6g[<@DX=JNa($'b%m(<*'#g0a.ZA_C3E:bZdFt=t7u(I9s%J
%2MTILd]\KFX2-r/G3Qq`[F7(h)*6>LV:G"%nq"bT]Ck_K:PoP%YdN:.-;p15Q'a%.rk')fi).Tck</Bq"uI5sL\#Gi#MI<uE0;Y,
%r!ikLTB6ZEG5"0`b5<pt3Gd>L>XS6A1f+H`Y:.6A^Fc16?`uCd'MGr,:-Ta+0iBd_[iFP`0rpO;,r;e?kLHBOOF5?PKL.nL8%,Eu
%;i;+PU"E6P4EBT9c\C`f/?.?^QQBZndF\(RUIqpIW_K^Lonstu'ZXrVF"I[%>4%tKa63<Db@]dF"&qN4R<Vc=@VAUoENf47:tl@]
%VnppZ4/i&$UN>A9"#)?aHsY.jS]21bI,#4WYg"\4WSVY,r14EO<,DA[-d7IlIV%^INCnp9aCR'SSV`Y%@d"j-5CsnplDq^<\K:I3
%Q['6s@jlG3*D;tfgae];&i?$tk0IQb'M+\Gj[\ioR,bc_/8_[pCd%#ann-GK7BPAH%dSinY@`'TIZ_Ia"?g310$EnJMOT(nlB4j0
%64ZhA)K!3g7[cCeCi$VU#c"NK+eLd\`U8A>$S+`n*\R?YSnsi+Fr0bNXnBm/V6g#hc-i.1o+)4/5MNnj^NmA%hcj94Zi5?mHEjjU
%l/Bp&X'9a>CW;ArVd%_89ktQ[(!iIbpK*]rA08"X4DD6*gKVZrk[ns_qbBeLg?dnH?G>9&?*T!66M9%'E\X&3G]opemE0e>cmb:C
%QCJKOS`7-)H0`B-PMB_Z]+'/83F@#Khs6Scf);BA\(\_Ekb`U)D4^B:mCqVO3cAATr008oAD[mb2-t1boBOIel1=1<4+"M7Hns;*
%c*(2DTc9_-l0IkW[s7cFaN<%7C[[QaoB2[]\ar*_:upqp@ThUf^:Nmpi=S!OK5ML>S:,+e[g1fK)jQCEq*k&4rS56K]fH\`SR:VJ
%2r;%>L%8DM]UgdH>K=o;\N08t6N5N!Y7%CbLMoe=T_nN[gWb*.bN6$ZJ`!I8CT#qMgpO:Jopo.Vrn""3Qd&.:2YZ4i@Vaq$2n+5)
%i&`.PBQ\Ulgk9S3jgUj`F7o+AbCsRjb>4\P:X?&$o<`p\k$$jUIGnX,&">*d2qr8%EmDS<3AS"b;RQ#DLIp'@T$8oP$1]rdmuh[8
%^HK&0fN>\.[._EOGRgdan^5)FgaP(o/?HLdHsAF%mX:sUT@`6+V<@R4HT3T!m3DLN*D,odJ+:TdPRRDsZE<A`n*Lg]qC<(KG8<BL
%YT"N'I%aT>#]ui4gtf3uO+lbn(&;_.BPi[N(S7^VjjoCb`WgDO4)NsPo<fr8n\s0;g!J-QQ0$/t='oW!_\#7_]6U*]JPu<gE!W)2
%+mAODp9@S)&PV!%(QXF.`M!1HZ9R"!b.5FL[tWi+e#i(S^Am\OhEH5Vg=r*DpEm@RaR9j>&$"Mg^OKQNK5U82qnlnjkQe`j@I70(
%Gal2!j`X;9Db%j%l8SV)o',8k=fHB:=9fa.s6;T@Pt'8sHgpuS/%<.hGcOek<7taG-sEq_+:E:[g"-TbhYQ+IV<>;QY:^o?mcG!<
%45HsYoaj&O#rNUh>'EqE#9Z=E"[%^Np7X6cApdm0;:J41<__S+Q*2^7,4N\6-O]a)pSE)JP/N>UY*oc2T,6\X0$t!1M3D[qHTcSc
%W>"0j/2W^.QKCuPZ8ld`n:U8prg+?@8Wk9@GM`d#o+.:N$Kq-^`S/1P[M86^aMI`X.@Yst$8Ulr8Cur*5jmL(_V+`ggK?/Dg!;Z#
%N2,6TfR$bJRqV`fqV'qm'<g<#GSe1s!P6AnmSjreff]"dq<dnmrPhK!A*);!4/X2`CPHH&><>p>VmBHNZr^Ha'u^DfiVE=O4KTBm
%#'cD/95?uTjR'qB\"nAVqTH?DW7U%XYKb,`Dk5$^^/fa<a;pke]+8ap/VFQif:Fg*)5RRrcH"`>l1m]FpA%#2?J%H.Wq0*Xo\iF^
%`nNIcQ+6P]h+OTlTnfbrLLt8nm+FJMpKrh+f(i22c!7fM/GC9rJ,$;2I]G''OEQQK!d54lBP_E6q2>&\[C!6Bcc9#`L],8BS1J&P
%@]EYa::b64cb:JiQD`mp1A#t73J.>:#?M8B?Pf"eg8CUYbP+D2n('\b%_cfrjAR`+F`leW+U^`Q^'/qhr?/:nkT8ms\qa>YPR=0\
%"3BS=X1\(TV^sI!D_IGAfCbTmD#*htPOk.<H?o&OKjL?t>gbOf5P*gZjsp<)qEQ]H*u<teqe+4Up'M/Qh'p]0k_:S+CM*#O<7/[-
%q"8ZgrhQIGk!c,FD*@I`j=gI9!Ie$hnEVV9^\h)KC]<.2q<+ON!Po<dDZ'LqC:kK(+HLp9[Hr%@SYH4c%_#N48O"S,S,`6bIT>t0
%BkMVnMS+38^HUeSD?qO8_;V*SL(MJ@7dM5"_7)LOpiU[,4/BaH%rYDL80o;e52[VAcIW:p1nr7KDObaI081SC5^:9E?S!Mc!QPM!
%co+*NI)XW2cIt_PQ+InpHl>D)?I3pYTBH<*ARE-2(J,`>h'DL%K%u,CgSuUk%FZ&I';5p-9&3b2^AHfT/\.@,$`P:0E^frYqhaSp
%Htia&="L;iM:H(FiaAInLnQ&0<-?l&eBLug^VZg8s&`2oVA"*i2/.NK@eBUf)+fpX,kC&g_FBM$-(.2V-q@qtB0XBhE_LH_NbUsM
%J0Kp]U)#KP8.o1D+#l%$%,<_+;uJL1rO=?<a&l\:Jd@.T(JtW1i>;ABqkOai_XgL_2#.!G$:N^g3!`(en]fkf@Y0>eQoq'=R%]^k
%*XP(="k:GZ0msUJ+^iY6Vd7]i$"Zm(_KKG=O!\1J!RrotOtQ%[gu7"i3cn;(I2EqjA9)G'/Xi$,K0;HR/q)Q$^Jqf93.%e3-VLU_
%8/CZHHW@^\4hCCMXAJk9CrBdHh1I\#.rRWT8+4i@EepA-p5'8<]*j7K^&\IAoFL0F?IZ:l`QcuoY<@FTU9oH")Fc4o\it]7nA@l8
%MpUmo^3qu5032iBT?4P8FQ4p%fIl:(lI.]2Qh0ls\ZPT2ou'f/PMLQ`&m8UbA^S%mgg%?:&eQT]_\c,ZEA[56B>rg!g3*PLrDMnT
%d@G?q!@"GZn%$,k8"U?^^>;?YKELq%kP(:'G\e5oM0=;3cS"U-4FH_KI`]^HQA6",r1]BNaN;duJ,-)-f@Q'+"PUL:Xm$D**n['X
%l&>q:F+,dpA9ZCL*!Z#\F,,MMW/">%:pT\hQ*jE@0GM_@%g=2p8>6P'"gKr*H1O&K.\=@l+$?[nI0;F<p:\7DS&X9F_kUE[9]*BP
%7^knF9Z\&gjt<J,RQ:qAF@(^O;AILn+2)&OH#8"KjL1**h$5Z<pjRp;?h-9<"g4_@SQ&48b2mtZr2V%KG)N2%0d%W0*ua3f?d8pS
%p#t(<,RV5Y9frQ9:$Hu<AtOL1U7*J`Z*\3rcHF!Jeh/r=NRL5%?+#TgM]_\P8,"oJ@ZdRof:;PSXl>Y]J6DDL)IJgQn)72^WH).j
%[*<`APE]11HsnsR&Nb)8Qabi/?#SR_^D!og&k4C`\V'Rt2rM&U/S"Iu*KLBcao/+ZT?VS>+TM$%_'qSSH/>Z7>;,Xso*+STLg+&"
%[EdZ3905WsW1dei`U[(=cO/C*=4iW1NpceTghnqJ12h=,Rf;AB3u$Pt=\th7^Z<&hXi9eG+_CtoB<+%\<]GIHBU^[D/d'A)$d0nj
%kK`P\)S51bqgbiG"S\dJN"6a!$Kn&L/3t\1I%7u&]9U.`=h%72@.2T;cGQ"HL%4M)oH:Mp7PVFEqGk6FjRkk4cGt^5?1Y7XgAUWu
%>5@1T".Bhj>K\O^^7;>h/EL2VJ?iO34Wd/AL7NZ6FnNAk4@T'AGP48_Y]2JA;dS"t3F.nK@[q+h`>B'#-qSlu(g=lj@dMW;NRN>c
%N4qQ<,f^,lP.Z5u(P!pH?GRncWNR,HC;!>NdN^A^:\3,Rq8WPm]=men$ut=p-M%o>5<kH>5Q?0=Wo36hlLu+V5Y^=WDU(CZSoKJd
%R,JTej6V3a1j__H8Y9k.g=jQeobGmVdUoU5D>GV_Q$7MM6!oBT0;!Zuibj\Eo$bM3@:Ao'R,+qsXtIE!W(&*bi]^*B5Bsa=0'@Vb
%HmG96f]hP2VmXQBCGLZ:BnbC>+m1c]qT0[i]Gu""A@['i'27Q?imq.?\a]89Dh3OLmhRk)$a0SSLb'ZS"?D,_KsUC!@d]mNJ(Hhc
%DLP\LH)dFOY7K0[=(f_,[?JK5himI;)46KQiIh"4V;ln5p.NGQ\IPLk:SP*EL6f_<S%F2bo^60Llm4L!-Ls%Wog6ma@H1n%bceGj
%]l*92j5Od%E@GSpoX^j1G@$OU^#/.+;l*RT^;0HZZ`R;o@cc$b&p4X#cHh.%G]3fF]OE0.4?S+>*dmd`)@0eJ@1LoXJ9Y,/XFAL]
%GXWGt-hH3Kigm1,4#`"jc^.CJ>?aIQCtRX;/fRlLe.1VSDD"1&pHEJD=t@@4+GsABG7M:!\Sn=pp?)'-.Op_.<F..Sn(tOM4>*bP
%+S*c)]aTLN/Z8iuSif/CI=(f;O#,UNH]GD>L%Wd;USg-Bo(,?!I?h/-<qH=EQ]gkcpNlXK0'41tM=aWB'fXloFc^Z+]0<_'kr;aO
%J)_pJBsKU.]PM0049(PGJLhU]Er1WmhrAUb*8"3ZCUYDKS57=^eYT&0<TqF_1<gqcQtorh)adkXc\k<eLKsf>j6rh0;Rmh.Qfl\2
%;mqU<Q0V"kIS-ieMiARO,oO\9G8J72S?:M)qsX*Zk8O&'rQ/L3@m)Uk4F2"P](3N0.ei)if#l^g6SYgd>@`:<ViTPF+*4,r6@uqa
%="<8pT>@_Mj&0l8a10hmqoNS_naIh1cgj)Qa$<m,F[kSLWuLS`4r-A6UENqE\Y#Ka;["(cl`b=\3dW?QHWc=eIe:hcK<a<?>Bju5
%U0#QaLL5taj8>7o\+_tTK\V%DH@),'50"4(Q#+a20C=SHm*/1D][Cg*SWD=\l%><[$joF=q2!UfQ@gi;kC*-F7Z4\U]'&U9;BbKl
%7L/>r3./9fRfE'@I!eQ0X52dg]he)?2OQ5%Q0h'l3UQY)-+Y'f^0M6*)!0c>cC9$N>@/uaCO]SbMU<'Xf>mdTGEq(!3e`^"GJNNl
%pU.O,bV[nbm%/SWSfZIh;5;L_b0/f7$OT/81b<Ld`B8r&Xt%Z!?>d5LDL/M)nKpq&I35!+[DSNpm@P\Ynf,21nElbDXsbKump5"u
%cJrAO^V3WO4#oHQG-r8;@a083?sC"iCZV<k[o_"bp6-#O)[H-"iOd0=`&70Wqeg-2!R='+\9[7:le@Eod,")',M'[%2qD/-]K"_"
%c#9_2;.q8\l'9sZ_Of]b8)W6Oe^hnBLS.Ilp;2M<D.TL(2d3t!]Q4[NIgho;Ha1)cJWA.,I'"6eI(>a$Hi;n<3(s(<\./(NQf'J9
%h3X7Y>[IAj4#grGQARO_Y8PZ<HorhT(f+4hB-6L'9=s1UW.3?X6fUtfEefEk8"k^Oc.8(#]_R;El/OC)o=>A^ZheONFPOEN)ECXA
%a<Q%!h#Op5q?kb[2M(&+kHB+QLBeV\.dK93ThcK$09'$MGc[Gek,pa&at']g2_4=sYDmlr*K>]<p\(5khum(%oIG]#5SZFMH.4RX
%:g]hF#2+Q5Hb2f14(RPQkb.\BqQWQeE,@2PZKiMFR@5rdCE'Hd\rt_@6+7_."J]g#QjQ]`<fIj)S9GqJ>'@$6s7U;J[CB(Zh'm6e
%c^1FCfN<QK\D`cp24p9!nQP+l`Z<V&Alj8Fh_&A@#4cBpQKeXaBHQKqf"K5kap[MAbft.<<%),=4V#tR[mN?_X;#8]Lj:J8o&8#t
%0.5T(f.Y,i\GIr'iG?`g0Yp03&s*rOg;QPj,N_:32t,FjXj49$E@q&E<h=TDfRE0<I9ANP5I$QsbXZdhe;35LXG7<*Spn'>2!;$j
%`LXXj@fOfYYH6@@5kp70V/K)u^>Z]LMo&+tW4P=>[C`IiYK\`93@f<k"`te!cGXc0m@$giWU2:VSrVB/_9-<21Y_o3HR1.S5QC_-
%ZWJjT(WFGFVrabG"nNspkCYJ"=,JKW;5Bcr3_aI8f_aSHI_F@M0Fe6NMtY^#Y-k<aDl[#"*eN`A=Ep-9X4UhKE_"))lgk:aEG%.p
%r8T!5%l%_'[V.a19!u]`3I#kYq-fK)S_0H^m[iIIPD:!\I0.%Qra,Suq!d%lL[rQBSgL_U#+NQdrgahl&j^>sm6Yp(F]`tfBRQ)W
%qVJ-ddY$Wuq+fcMq]I-0?`kIl5McarS4)L`@)AB@\c#\6:M2b-J8\C2Q0<@dkA-"PiVEfRn4df8Z2GE,>jM%hPLPY_'0/?qM<=,L
%jL!A5L;.34frI4=.=C_4R=2Idlmgi/,k$ZNl,+;J:fj6@osF\JHK"Nlnaj5+^8J3I]DaAu.[psfP5G.Zje;Q/DJu*/?g$k3H)k5[
%*TsY0l'',Ag"07GY*HVC_8jW@\klqB&SH[HTC.7Nc+Bq'G./M7iRX\PYgL?`:PW@Ga%N?+f#(`;G<-gY2q:`BpWM,kWH^`InLG%k
%Va27LX34_Z*FQ?(ms<f?kOr]\5Bf^1fB5aZfA58B250N#kLUq!_(k5=`WnZTOZ5:VhE_SAVC==WPlF,gARJQJoh&rCh1$=(B3(UG
%M^P@s_`RJ8;>'EA8H`.J`V8oMJKW/&i3IcqIA,iJ<e[dbh8fEJ)Q4-fi6#*W?7fgM\2o3.>^j55aZdVn;'E\Zo&j3EmY<lb[+"'S
%SYnQA^111ah;V/0D)L18$D/D)JJ#S%"RNmHJaLc!k&b$\KO<U+_V3:e#EF$-)i/.5]DDKFUUU9t4PDTYgmM9?X*PC?%stbfk32,;
%c*-k'dk$7A+<@lEOcHX)OZ'`b1Ha6#o>)S9gG:W)[9Ao?`]%'=5)s^u#NPYt]u3X2Hc=Dfh5QKsG.mY)\#[[FhS1e<>m&7k[es_n
%W!mUp_NO2'o!!!*C'<LL74BoPCfN-4n>,(51!jSE3e"d%\'g<\5O&Z#6si-HRVR&?%D',5G6T&&/:nOPMqIh\OZ^_/"g."X)4a[k
%jWD[-V5QD6GmJ0s#7@jFp^rL[=NYU;e@uYORq'Q-ebIt_b#lZ'13-c+`7Nu,2a-6dC[lB[9'IQ)+fMS7P'1sBgTk8ta[:CH@.a5c
%AE:!Y8OXOPMPOb%-H"7XERZFYTr9Ar@B%*uTsce#/mY"qeC:G%Dm^lQI*\&ibmq4LQs_eFlB!2i0k3=TaU&`&2L(CAp3eaKa8q%/
%',E^59T819KNu/<%?0d2jeSalP\k#q-R?TQ_b![''fMo-7KFenlG\:/M.[!+g'Ads:%?\5r6RO!EINek.8B@eY)c@PaJM^^l&3Yt
%376B5Ab=?43&E]^ALed#%,0fD[5mO?LkH]#:EBZ[W.jqtZa_J)<j^qs4%I-/gM65%l<tYB4U7g@meLM37W`H^R+>e2?QFH],]$MQ
%@>Y?l?A\o.0)//T)QObb^\L2R[F;'5b3,nHAPd4@?0BCrYM<:0pCu$JXqM^eL\S/<]Uu1[g#M[%BZKic[;'rbd/YU8N5Bnas*9D*
%>,%2u"#(dBpQ@_):']U=G0hZqlCE>ce<aX-E**]H\#T+0-fRU&Fk,qaL:G3V;'kWu)br3[JU3,1%%2Q\&jpBK4WE"c9QBi@L[\s6
%HQ,9fNXgE&@-lg5r7u$lUip9f"q/gA)tGVgi>"jiLc.pDU]>5\b95HaAO6`Yld>fSoLfmUPac(i&H.(LZ@TIpjA$UXdVtH!@C^EZ
%ET22NrLZC>O^"eE0fCmD<ZF<_UekB5^kD&>G"=DLKgraB#M1ma0M0gDC3\+oHIENdJ\qX=M=+BC)pQ8f/s[HU?i!RF%:=/j)YNS4
%6b`%>IVXfXW3+M'i]>TIo1^^uGoT<*gKHrl#s%kY4DDaTN&N+h;&@jEWE=g6S<`jEAGa[b\'PO[&MZHdL)2h(i6;i3YFu#-[9ej(
%b%?07Njo=e2pa_qP.([m2'o$>^pQuArD%<VhRu%NqpjC+DjE)'dgh0A%sopL)!q7-U`@CWK8iX'633CE6C;AqH6U#jiS7\?FqA&H
%.ouc42DVk_kK!*8H)D82/fXM228']NX]s,0[-$jX>^.OfYLr0RaI_loicOuk3W/8h);T6foZFM!5j7nJ^?CM4&qs3t3G7tSRI*%H
%]`=[RmmD?+;9US&Y#IN<MO^0bNhPU)n3Tbfr\;.(NF$Z"mdKXnJ[TM+HH2Oi\0eqCPMX"[OdkdkoG0aIEp2nL)SU4]\uuArnX:S+
%ZSIH9m^ZJ!':DLJ3hECmTEqi/bEX3f&IuX1X-j<l6QB?]g*U,hA8uH2.l8+92M2GLMD,mgCh?@>Mi-e&bP$%4R3qZ]DkaS/9Gsl5
%fJ77LehgfGYXsAo!*h/bg>=3DB6sc%Z_$>_3$q9SZBiGXo!4;Dg,LEPZa,VRd?lIDCRJ#HdVO<s*J&%ja#4PQ1CJc=bADu19k587
%1V(Ue'YXmRDV9spF=8-R#+1V)F@1Wg!H]c#ALB!ENH!KC+G8uH8L1F;7kg-7NZG1fd"$3=83.0&Z^M,ID_p$#**7_$#7-2@f<eLS
%gOZO6ZNZ^uL3]pjKVqik_::]96GZ)J3V*4Ql=,rB9:IAkjj;C!._/\ff54(je+"D)P66cA>7tc)-BZ5$4@M<8nIEBO4"Nk/'qIGj
%[<*UV"7mmq.C+1[FUs:?W5+Z5=A@t%%i?W%":JC`C;MYMgAo'3J=0Qb1'o9mmY#:/f,IjsdhUX&+<8Vu7[@BPb$\-QiY0Nm'eA#i
%#m`=d3Cbh-K/EgU*REZ<4S^*UnA?gb2h[SOFH0k:TVQ/'F?@PT1aISYThD';G]j9W[ZJAfi;7P;Jm"+eGcm8t!1K5>8Wi2]!N)>u
%YI<Xl.kmLB^])]ArNBjS9uPE(g8:d&KD17e$8R1fR`#I;XoU\!lnf)B%6;K4"GTC57h(h,OEA=W^Y8B>NFRLumKLi3eYORr1EF5Z
%<f=^>%cQ0m+2Pe(h[Gg:?Ma=e/SGU)1Gt:M8i4)c<+rYSM!rf.ka.TWjTKMOImEd*l00s(D]`m=K*UU0/hLe[PN41Whc5]!@-\6$
%g\0t7-!pkuCDZ(irB2CGpY>^QD-simD((-RU`dmi/d>98MVXtJ>uE'`\ul(Nlah^f/-P0n^Jgs<_ZL[[#LSQ)^J@!>7[chXp7uAJ
%MJgqEGg@hWMg5%kkEib6I]8Y,M^13`2<3gPp6*-r*%1\g@l#<)[R[.fr0Dic*q39kCs`6ZW`rO%T#5q><sJ\G^QH%W:AT15Od+hs
%^rW1Z]9H]64p6Kq1c-k<0[J*gW<'h-JR13"(#,E_e1E(MAn@t+\u@eE'20%U>a-qA5e0I>0aQP=_fJdof62#a\ReZ/d%V\S2&e,)
%p[*XV<9R/[bX;+uV<N-,+cN2\.BRBs$C8WB4@Bi-ARY(9B@BcPc!UM@1@pP^muGK!R$NH0-^P#<>T&SC>B'.TgQfZ1_(d)p@>!DN
%Y!o0Q1#_[-Jcu_*[#m%sDLh8bfW&1nH=g./;?-f$A$d]CaPt042eZ)[-6^T*B2XiUD8Va/PaP+R3Kp2")\'''i>A6@0I6^m!.8Mm
%j_FS1Fq&8?JR8i''_K@B?YoZ':tEFh5Z`:fJ8qltDQmgVD+?<&>6cu,159aRBaefSNJ:#"^Z.@)%WFOo;ZsPFIQ<>q_E\H$"<&)2
%6BD3`694S%WA.N$>/J9;_:"\TRk0Vp\piZjN%cR0USodoq?s8='*:e^odkq%L1HVX.YBu>lY-nn,$c?!o0RN`+O#Rb9j!RY!oq*P
%c\s7=.7CT[L5QlRl*d]&RHYUu1CRiPQ$"H&j`5;I%*F]?K>R6@"P=8NF5OEC8[E#=6sf$?#;YeE=C@=MS5_b/=b82tTt-RTLu4_N
%+7pSjDTabVid"g3\fms[B?u/)"5PO[0;J,<JW"#?[UO's+cn)6Eq%=;P,D/L$"8Q9@?tKj)6RhVEk2^OK_2)\do9Y?lX3QtGfB1-
%&16L*1F*X/o)[[33UnG<;h6M6Hjb\NGhpNRSti=/C`JI@0adP`EWub33?*n)Lg5Y2j_/Du$.O`*(9iGYlG)\DL&_1986P/&@H7oN
%eNn<Ye)3W&$;,h8;op'+j7F8nI6u:[@>HEbcLVq#L<%0.".s@\P>H[rT"/lk8q+PXeYd-4n;';Nk&a4N!=R/B\X>6tA'Q'/,fAXR
%SW`3&a3"n.Ck4:H&*>3KkpA#9E!d\W"j=8%#7ng>-,r(Z+dKo'$qI6I]&@*q9K>'^0CS0=jN9mt#7ZX4[1R5/lN[tBdfP&.EIo"H
%l"Dmre1RFQ7@VKN@@TY?,hR`G3eR3\>*n!UMYE+m#:osIaLD;#[Un_lBENW%dnkr>5ZkHE?s$-Y%4_Xn=9?;Ui!I[uKAEeL\[Kn`
%m?q,Q1GT*):2.7)L?j^oEPV[4hM+3M.PmhT\JYI!5sXL']kqPT;akONe4M@7Q`V.l>GM&U]E)\DBL@<9#MZ)CVXi%&)Ke].(uF8&
%$Y5%b-8*^b3Z8k/fYQ,E:\jOh`G<[Y/pr;,LneuAQ\'!0.jbBYI7?7P.0:b'-jX&:J1\!^LH+,M-kXh14kIh!BcYq;%B=t%9UNo_
%FH#Q,[a>9_O_R$$U2_H;i"UdMA[j5*0NZ=5cocsT*?a"?9K<EJ5S?DA(r#PD=D4M8DjQYB3[XB>_3JGn]Hdo,$)i+e_GTk,>!R*\
%Y+e)<)$8Of?qYDFf>+5D!5nON9n>$l-BQL:0E<!Ko8nl@WD*_Cee=Pd6*P"D>n4AZ:%")P/8Qhum<U#n"t'JNZLm0jLP2S:_*rR"
%RCr6GRjC1LAP2Bj_/VP3kf5]8pCa,@B,_m$dM"b5"I#<:HI9I3oRQWg"A)^o/r2tD#d@`6"p_u5bC6\t>Je<)/j]m=#ALV@0F)Z5
%%'srg'2f.P6EZ(%p*(=G(;N1b&OCCUP(usG0[F<Z#+,cB7XE6D.[hj9i-:dHZs4'L1FRBXlS(DdWtSf;k[8_\,Ria4Yi^go2$`_>
%1>*6ES%,MU>6Y!=&uL6&#FGPR/;>$=:.i3XGs"lR:!?'Nbd3*A)2:c$[5]%sWq1BY!D:qn.+b2%AdSF'm3L?(I$N@q9PGtbi(BH?
%@"r5)aPrGC!gU#G1rR#+U4NI5Mrc5=9>IKA)JB8nZmmiXp(afi>B@"ncd`j:+V;j!_*E[,KE:eD)O#,rV[s9r`!DbX-)D5.0WmlI
%h<&!688-k]L%F@,U[aQMX3!X.(rX:g3<;8a::&t9bV1GAiTcF::9!Z]U999@`EZZ[A<I#c5gUm)@Dku!W"9rShf]MI1RKjsj>0^o
%Nb!7Y.f]\6#;^*e;rD(nZ+pudRnBD;;qc8CZc8tB"FDP0(0VG9.CrTWS8C:)PV<deF@#/118G1VH^PQb@@#\I#VZIMEgrZ9D1ZTH
%&?PJ4[_P^*Vh,-Lo*b]^,R>_U:]Ui(LhI$j(A*GNa@!IN47!1Q@tGKSQ#@=0+R#DUTX^,$^$/p8mj;HY/u^Yq7UY`:5`,$&^)jN*
%>]/(+RXuEU%1jjF3/0-*'7/2Fa%dCmTXnndRnUVrpB"E_i,GdP4^bKdk`6!JJ:#=8MEs)e9S6IQ=,0q6G+&bYq1Jr'Xg-?*P@Un\
%6a5^XIt:uD\/T(rF6tK!grg2dVDBALT>;SB$f3<"iC.&b[M%s=N%cCq;Lf'Z@i1S%[F*KC"g\SeV%D'e;h<p\E&iZ.!AKUaLL=NR
%FU8-Z_/g!1<F\2o[42SC'gP$g?_!VkR[`5q#T!cirdbN=S:CVRaQ+qa2CL6'o=.B!r6hN0$&;_1GCUu6AC1Do0%bTm<Dj!D$oeeU
%Ot`/`Zp!7u.3M(`H_jt:;^s7"S"=`6Fl*%S0Z1=]l*,d1\H6h+gETpf@'Jk=,2627(8gX7#)^E`0[MHg_*"4\*/6/;&DA2hHHDnQ
%g-Q]n1'+0,$X@!)2FWDUjRiMC-X19,e6=QooL6(N\<=Z"E]oj?2cOpqhAB^)9%IuD$-eYAUl\N4dq<`[!1!F=@A7UD]qEKrD8dfu
%k$fuEkdmEQ0R3s=RG=$5%W\_k)m9iin<+(J\-?G/OD_WQN;<IQM"GN;jJW;_+6KrO7)=C*=sb#pI-B!R=UEkY!Zgc>2+b;[!s?>I
%'=Tr82Q2s,CDd>`%%%$!9=[b1@n.OuWR!>3Z]&&PN#?6;n6alT<RAa7p3TW"Jc]R2k<YK.F*+'dFj)/,-.:K0NPW]LZJsEXX:@P6
%$E;rs#=\cL_03+>RW.M,E'LF3d;-S>KZ@RM?p&NC<O^X]_6@!CZ$t[D[&07?=:\3Ti5Pt?kIk5-KRl*Y7E&qp4\R79R;nun!kOqQ
%g>GID=gjMg$in?%psZ@e/RNq:XtA&:S^j:aP5`[kgn67p?)oUbB,Y4pbnO5!DbSHe*c"CR[l1K/0JS"%qH`."[=ke"#b>k7mVsKd
%GL9u7gM@[+$NSa_%!c;F7Bih&*PMMp?)mm^"W/BkLk.S*k!BFsdnsMg7kp:kl?FN$,1Ib7Eg&2.>KP*n2XaU1l_Jk_E5_pV5`c*W
%cUKl<;;K')TM3FG:F[Uk0>biP&a;k(NSX$)Nk+L))E)97$)C&nZ86n_^H)0Tk^+.@$9[>2dV8tafCEJO%K^:fi"W$iD^W@4)gd;k
%'4F`_"2M02rcJ&;#=Ob:33Ltk@sg!A!+ZAarA+sljoO7B1hjP[RLZL=i=`pPVosdUeqJ:sF10lT6iobL?ZoD:_a2bie+Sf$E1Uid
%?6*F^KP;@@W4J'?hpQV%X&DNSZ4<I9B&_j-@'QD(FdK.=G#FCoKUMfBb]=)6(%[oS-uib0OHpFo664?HRKdFHOT9;I_72gj`7[mD
%1&r;0jA366[m$\%Q:91`$bT8.T37DH7@Aap1?MQrqQ;r@ScF\M@gQJ3"/B:?\dD@!g`@@CQOffFbf[kPDlt\Da(&N1QWuA%#)!-F
%GU,Au;$acpeB&"GnW9"dQeoOaiu[qf2Z+*sX)0qY7Vi$K^q9n_Ao6!/;/Nj7O%)T.E4E@W#U3]70L.a#Rp4CJ\mq/N_OJ4"!<XR&
%6f!\@Nu>dHN#]FX>9/ZnjZ#`Z'5"+OY])j/0ct%%C#Hk*/ZDD+_f-Y*4mT'F:D1=2"PX,5h_RblD=iV'ReY?kruVeKi^QR?S1+P4
%d($UR0Ji_bo7(f^V*R2VP_HO87[$L%ctLRh%Q>_c.`Pb\[UqTm(iE^PS>\?$KEe#(2I$R>FO4t5(t`2Z@'SuD\.uZg=SAOKM7SG`
%q_:gioTHH20"#qH#PWnjHGV8*0j$E0X/Ool6ts/Y\9O/0PX8450s*>*9+p1M,hTEM5Ek$(OTFBB,Cd:%\b-Qr[7gq2ibQI#S=,e0
%R7Wg*Lm!1$>H0LrG?\DIJ6gs0@]Dcr-=3@a!==K*GS5jON+%NSA>JOn8!W2ErYSa\[EV_`>#9tSkZj28a%aFRNc]:C9#+.l*,OJ4
%/e,I/C-6#h$A?$7!B&-PoEaRjC8PbnWhYR(4]#u8^Y'0cgUR5%LZ+(Cglo\,\Js=f/Q9sEP73?\+ZUMSJb0?]>jfXhf>S3T*;3i#
%3:7W:#30:k?p1YpP3#!>#.PZn+aOt5lC>EZnApeeWnUYcNuHTZ1k\5^FE\-$p_gmX-H;kqKt%&]ZFqjAIOk.q*o:O&'<C."166Xl
%j'dChLT]Tq56_X(a(k^WYV^6*mtG0X5HYcu6P:1&(8+5(#7+GYaSbBdK&;J1mU?Dg9)]Kq`5'(JLndTJ@]3el&krUX>WfX>m\p0s
%bedZaY)]Cg>R@au3=^g^OquJIF7<SL_#='I-V<fl"eIF`^rN<<k<3e=Of`]e6eHWYK"%DB)P2l-9bqtr'o=>X]nP\mghfd;e2#7`
%9bdhWU;198UuMr7g4S=/N2)-n3uT3kn>NYOH#ttZmk;U0Lb[We:d"]03tXcQ>T5?9-($ALK+BCSrWoiM9o$3*0\D\!'<fU4B!>$c
%^UUWupVc+>/NPmX@"EMfTRuZ0@7usm4A@N@(7APa4?c'*)tHTO6qZ&o?K9(Y6nU,9iUmqWc$f,m@-1T7)rAjmnB?I&HRnk6X-\K*
%90,ut"uQr!o[E&d*XO=!:a*S_@,W!OF%>a9nj#X^@dqpd>;'te*Z,DrWi_F,ma*F)(c*!Xe-^GL,n>"c1l0!50Fl\(-n8%Ceg0et
%.cl*f5"[&+;hT8*[#L%nb_`LGN#>rD8-Y8;9V'JE"'B[1JiV&poHS=B:$5XcB%*0'l/OJ/jNa#odDK0^YQ7tgoW.-%q=%'BCAhJ2
%6/WnB@If@eG"\tQ4*ZXO2cSaqCnP3Mg_`=-7eZ?2$(qN8Fq$XiAHK^<DQn]'b/C@Q4:*q8"?=7T:<1iFr"u_lEORLE0E[7j]hIX*
%*hVYL0`dQ,8bugK/?&LN?hHI8\5Cg#,%jA1.d5;(77GCa_qDHY^0s[t$h=mgY-'+<IPnc>LO%:bE(j*j)hcWa(bTl>`aY$=7OQ#Q
%o&,[*^q$^:[KQ]I>eGWWbd]^:S1l0p7H!pg;d_rHjnZk05E(;?`-HU7O%lK@-e4:m2P)&?jm5$K?_Bcag5'RT*RNoBi9_@6k@uQ!
%pHX=""%Ll:#$t98(1%F!YQ*K2<Oako)+#WQ0Tf./AV:;(D*!O_io:%=n>-NV^tLip$]($hOYL?W0`0ULE<RB__Hd5[6!\$Ml#9F-
%VrOa=giV`E]XhV4R5qff%jD!>2[5pFiAp+5=>!neBLisW,Eqg/HBI@k'-RnJ=eLT7<1/L+;tKbeWP"fge%miKaJN)Yqs=*T$f."d
%!8`k$>*<skOobZ!c]N)QkY$IW7r]BWNIiebkQ+nJ,E'^D7UM4bSnNAQ9u>8DiM1<,F:#C8h*O6_N!FhqA:16dh?QC9PDI%/de!5j
%66'ec(p@*CRC#+XbB*dspHRXp(kN1s*[.ue3,"fq4M:@)Pt1a/]ZsBFAU!Ym4;qQM:L$.^(QZt`@H\2O&LWa[^qfSM[IAi]e>,f6
%#*>Vk*tG^Aq"b<$928Y[VoV;jYHuWA$G8,+]]4.MS0d@L:<<\Y*K8!*-jkJdl]Vme&9Q:N^m/:3>BE^k150SL0]BW4nA7f@ZU6AT
%0=elgJ`7c(O5n\.9@1r&'A;q=-\a"ETDN$p]<r"@4+(TI.L+4![Mn.3=5H7D8q=Q"gb:"+?/T'+1`Rt`?t<3Q/F_7oXjDN2@Trpf
%:Ik;?MnUe_IfjV#nT]Da_ju;p=@-j-`Zkq?,6Y"S4KM1gAK<rHA.$i-(2_EAg"uglXufO^T[>JR:bcNOfXf0qi]TID]6pJtQ;$q+
%fU4G_VB+n@H=-hkoV!rmAAQdboJapCN[st';G*h?*e:GTd1&"TBS8+c_-k]QhAS"5UQQUids@7N8S>)e8lG,Q9m(Rq3N77_bZ+i6
%%T;CO8fpF<?IN<Tg(5-:->ea)OVUM;#S!uUP=e1gW]YR1T%#E26GN0C6R,Tslgj?Dn6E56E%VICZ5J$<gbtQn4^@B^C_[^gR\iin
%)70Fk7>7G9P@kAc/HLLG[QWc<(`44o(N5e:BO(DgR)m,e\W;:>hXIEjnY9`S^Ej3/0-qh-cs;1)be;qhIZEo:&Ig[$DDPCYkr'RV
%,DuhD$`.39NFEOm_h?I`\;ZXTKuuC[`?^5adBScp)"?6''H@fJ>op#`pK!st.W^i-Vk^&Hfm&98b+`ic5QrWi0/dg'UV_%j%*`a(
%Wm%)#N9&WeDBS/ippq%>3<q>qps($MW[1p"A&b7$`F\u+iJC(hJ:j`^9>1rG,,2,:/n!?IR'**u6]m,A*SbgW_)sd?69AE(__b'$
%HjW4U;oSYOWgFbU3AtNP^i/`3m8(U=YZ)/37!XK;9eQSk+MCF"h.,YSB4YK2>u!0C`2tnOY#:`A/S/DPmn!P7H,o4f;#W=t,nC?6
%i(L`1PD2nd(KW?*6$LYoPcGH=EQ#@L%V&XSBo>:Im7nM\dFCMc_5k0"?*Oeacl1cM;!);UiMZj^%Tt"nMe-T0As%piTJL:Xn9teY
%IYA3DLESSQ@!JN(N9nskHb<0li>i8Mh\CBA*oEH?(5_I\MSn'K1t_tiJPe;aI5^k`&sk3g"\$_4[cdll*0fY@&=8HiTX/=RZUq[7
%'2t;#N>'(#%:P!H(O=s'5U$(F$'WYmi2aS$7IeeO>;^,aGk"?I*UnF3O#QFk]rV)(++$6s>9eRib:aL(rF5=M-@C*2g)UHbb`Rf4
%FFPg;Y,SYC?CgR66k@,U2L]][)"0+t$l'>(\ZjU*7M5Jei&YhK)kg#?_.c8FXa_;)H'FuR4FRe\`m$-i%!g@UOe)em)opsg!@tff
%#mCP=>jL:emi>t]`s:H402IhcGk\>`#N/;sn&,r]"E[EXOUhtd)%p[&GSQR%mZXCWF7A",%--s@K'iu37iBZ0jFcYe%SLkCc6_8"
%O)/E^W>H(O:;C].i]@B[$>bDi#pt@%,e0?NZgg2*#%qe!&c8[BQs;U;4u9#/#jc1Ci<#UGYo,nrB/3C(ZmA\JSi+/S&Ri*ck".\U
%B%PYm.lAd7VTT*$3q`'"#@:f5:+P6ASoe%R(*[+L%-M>>Xrufb*!:GSWi1PRM]#GaOClX@3iJKa-9d:tG`Fod!Y[Pb`0LH9Ujsh@
%#kXbZWj@.Rq5qU(V\2@gQ?r$]\O/IkUT?@%0>-$2Or#oK^2+J7N@[p!4H3a&V.%;R*5"?O@CF11&I$0!^Bn>/8s!eJ\k`g>%UpAF
%feS3K"N!DkPOh>]SPW]/-fDB;HDkWhLKOW_N)E))8^g]Y=D/JfH4db$.54(]Ja@utC(^F6U+)N!_eTWC.0^>5\Om2kN\jIlE9YPK
%I'3_2&88)F,.OnOgM,>Weko`2lIRr[9ZthJ`c;Z<&d&f"@o(C8NhIH09M;=Y2J+HP.Mit+qI@=^L<aR,J=)8XRVFqhq8+fg"'u1K
%cdmg98tL6;R^\V72_G;eQFhWL2K6F'kD&m/>T)S?_0EY]i(]"E?V$PMP=Q!;[3HV]/[l&E[=$1#FJ5PK]+I.m;\p`pppSZTN%W%+
%e/$%89K.!'&hQE]@Tu=-F*Wj?mV`AdM6C48H/hGONe*1:R=:P'mcfWkEKA$)#iqQX$=L1op=EOiK2fWS#>L1b_#$N,c7hE*RXc*F
%/'%78QOc-G]\UinpX<Fm(fLZeZ^h0HjaHD,3KnAtekq21^7(!53ogT7YV,_-IM4":aF\W[=hLdI@6-#YdPZUB*7EY`(<[;AC%<+B
%j')TtVO=`69I\ZI,VfJZBFDu7dog6+fQ?p-1YPU`E`&B'2X6r4/URRI@DOB[*LA:mRW<Ou.h#cnB@qS^/AY#oU=u9:MBiJb>\-k/
%(C/D0a!U':";kDibG>t:jt++@(cO%oR*>'n=4\!MTqo#E68pXb4F0ZN``N1D9Fla`d2)YAR[U(R(Ft%!@qO^7f'*[u`*>QXjpG*M
%RPoPk1Z!c+dqbr712(plLH*-0Mf1J>0>=:JR'R+8![B(%/kuQmbehsY`;*6GYWDPtSn9@.>*LjD0:i^rO9K"/!re=nYh7G#i]hgQ
%ZRt&BN:2hCKlW`3,Y).*m@``7R*-G;M&_E<)#\5FG]BF2S:F(rI2sRg?.=feQd7AE<7%\jWOe()_7#jje'tWMRpT[AEt3b^Ob=%T
%%_KO,6SJYp%]'R>HWOP(h&hLd-=;q(!*ahZ+MeJ[=NMc\VY`:IU2!pU8*MF@F^[9;XQ/W^Bgtcj]h4.<_iBrD$-`fkiisbRpf8n$
%#,PIgDiK[-p`<KC.<AM^53Z00O>0u4CRE%1NmL`1FP15nFdM3WWj:rQVJsE\0Qk%q![_$IaHUV370/Q)(I=']iihD.iK6@ghGRDe
%_IhWcK\&HJ$_n,3W9PS<\6cLTTMG9ZG@UhDkN_#3kd7V5;Ur\^F$X]k<@4)AW`_0`-\?&[;l<AL@"l95T'Y:m7;%5B3\&sRO)Oak
%s2;UmNqH#.,k`^q(=5:eQt%RmgOs`r!9nCeU&b_l0:EF6*]tgR\uJu]/n%<mOth9mS"%0sM/WE([i8Qp8?PRY#7N?/CEDC*/>s;`
%+jtJA._W^aS[\@6D9LA6*-XqL"#JVC?u*ob_NEc<XT2G-ht/EB)6<]G#];^hcXG/)3P+*!]#]a=OLA["Rs[D+#ED%XFHcY,'5Q8j
%!2&2@ro-on:.1hY&e+ILT2EpL=:DeoFX$r/[L"FY^Z\'AbuM%CYmmMNLTRPSW]T-M,GAN;@Y)ST]i=./9]`8;Ei9Wa]@\+9IJ7$[
%cVR5/0`UdE3IeV.gqMMpoW@"g;S!%ndc\C,`<>E@\st(j#0`]\h174sBg)1&UAY:?N?5gmi@?K>&\!h>##bcZ1SK54([5sE]_AfS
%hQZ]an_SDmn&m:bePdq+Mc-S4IBDMk`^6CEG)<K2q4IaQjVJldM5uIKgVu$DT(Udu$TL2_e@Yo0`$K5(0%[/T59'W*D.mWHj$cH.
%<=V+XS*d'gkPt1hWdT-0kri!Q*X7Fc1Wo3n>L(E8M_=qXq@>9WgSHN>W%#3!c[UKDO[%a\jQCpB&^,1&6jK4f3]m,q"7ciKJ#nWB
%hV[@-^O!F>H/CN?#::U@I#b*H#6*H7m$h,0%Lf0EQ"uOk'F;WTo(.I*<Hd+MPWF2u?_E#PCF5s<D7-A,,%*E-fk,>7>9,#+"dls,
%=V2>@*<p.XV%)DLmhLQq/1k8U@df#[$@Lk-#bqS^;6tNK>.#**]R1"uZ!f:!U/k=[Nbjg%M^AHXQ0;cQLP'[MrS_p6Bed8HZ)n##
%nnYjNoL/5-)`_.q(IuBf$]UQ/CNjkjK"[M"?LW2/+)Lh2.\5$M\b@Q"kZe\1)/4=A%5>uZ%j+!>lS]XIB1]mi?+sulHsLXMiV;TR
%rV7WcB*'T;F'gID89Wb5LrmDe2l>)K:ipoK)Ip\N=3g@83AkoQ94S[K\'<jI0"82KgcZuBqsG+s`sHFIrRbZPYNLo>Jbp1oXC&P.
%IJr5UQK2*<e)ba0B'6<ML-L:GlLgJQFVi#EVq;D8U1LLTI.Q)cq@=0L]6gM(*AB.>!@q]#OLA9fKoRN_m!VeBKi;_#q%gNmMBUi)
%kIbbm&o<qT13A_.@APAf+N%BW8/K&M2c)X'(T`S#<66Z>hUAQT/9C2A;S4E6IX;p#0J<u5XOZ];)3*2`-AsLaOMlU3^7[oB?eF9j
%p.Qq5L/h+(Q#;1^ed`]+I?292:W"S`ncS%D^5iXL!kA4(3KT!hqKO]gg#IJ!`rIg<r:lMMW^cH\NZ&"9+=qt1f1rd7K=MD?C2onj
%4o7_B,$NUPLDdGdro;b!_EKr.5%#C$6bJ<B(iR3)Iuhh$20>A/0YYX%*KG8iH)3soZXS$#7*#3kdqQ4QQtHq1H?F:p;c5Zo<t:_3
%;O5D-ZoS,r(nF-Q6m(kD\Q/77gTO5%SZ<jTN&4o>Sq^-622]@hZ5Q=oW$8"H=jY,R"[PN1=5e:RLC'=VVZ1*?%CAh"4^er6-!)4K
%$0ZPj&$]$#TF4Fo3h<:S)CS,&I30o"ed#6X.MjX_=l3'_a=;t\>dmThJ?;-G#):cm^nfP=DKcK1cNi%Z>#Bo6_:`p7KdXoJi4P,B
%n?WBXBkb%QAK53$#<%>*\"f>F%Iid*a5H=cCN0],cGbZ`/&mN1Pdu_0mKHcJB^`*"ROX4Ea!D^gJbbuJ'$b)l/1Dr-nt60K"\#Z'
%?g(>qYe+p[6<2OMF?$-rk!Y"<(jD+%+aF#k*k%*NmG4,g\FQ&gM[)]J7H>5cqXO'kW\a1:j(Y<ocgMa?h"UeiE6%i:)[TN%8j=89
%H52pEfhjK*O0aW"7G'PGE[o)F0shFDh-R5U*l\H1[Y"08HlQQdHsnk9':]<k^+hE-:*L#<_>f7<Sd6jKqQX)adt9O4:\*"^i**:)
%Q>T*t3HT@$n&p^O4RYRZfn4`f=X$+rfiG>uQP)ie>Q'l#kTEU@c^A%1(<[?03X3K]==e_?D!J#?Mdo8/`d)%iZJ<0SMS!ZFl+``Y
%`<<*1.+e.ZW)ukEa]:-Ob6?M\n6];r3H#Tc4R^*)KMCdf5LpjtrS@afq@&ObA(X%+m6LH?8;00I@3XBG%D@2\N/9>).-/0u;NPQp
%!8H)=;X.One`D(gHX1N78a7`YK[4MUQYCVNc]G>6pFO31(KNEAGef^0c_-FK9j[mmj3#kqio8SDj;3ft!/IWans)AM/#52VmEjS+
%^1V[61Q8gR66BC@f$5ai]k^tW'e]h7::5SuD9[r]+oc(qgl:>f)gRBM,ckrn#kmHYE;E-r(9jpr(9uE[D];aS5%&*BgM<Vt#1d]Z
%i)'MqgZl%+FGS,%9\r9M[K:eNM14[(E>HoWb:3e"G5'_8Xe)7_7`+caX8$0llQC\SSD.)FC#iO=r[PWbTe_tAX0!1?R3<U\bR3ls
%#A_?8-ClUB^*2s%rTj"`FWg<.=OZ1uRHc6.gS]C8T4J('&n(%fR77$dJsG(lp)@_hG5JQPP#t^Md8E[$1'j@Zh'Zf5jH&1^]\<%4
%chi"(O"G_oH`8dU)(i*C_(M$qPsOs:-Fgq/9%VD(h1;dBFdJs]9DK@'ZJTMgbmcFWd0o3$YQ\!Pc(bfBG#pRmM%e?_-B=)iX,_j@
%!Hq7tRCRR54N<+Rn'-@T/u@fco!4@ur4[:fn!h;iG4WZ^;n.0_Xlmd,Qeo/"!/$J5VGLb'0#@OW'@,R/n+6&3donCI:KmNJD%7H'
%X$3.'I13]-)<Dsu]P!&@]tI-j%-J]]STQoAJ^\Z2mCgilHR:<GDZ0NF$-k1-a6Z7`f/M=a;1P@;H^0(G;=."^M?P.4ZN5Q,T5Rk4
%H,Jl*IR1jp.keB7\,/)$\]):ia/d2U"i]?9]KhB4)upMY<C)JO)@&4&P=Pe_PA0"a!5;DGJ:)o\)>dKHNs]0c+O4^,O$jcaCiU\p
%$Ttj<URY'q!60Y7cijE9g"l?<\cAt8nWY2=JHG\1q-Xh@!:X7LQW^!i#j-ni`+ots<.P#_;':EZ'@6u'bnHOr]LsCi^hEl@g/]fR
%BEIaII^d`.ZlQ$I"jRe.-M&(acieC4)GM@K6)"[]hK"p4G3\I\S$3%&s,5Wkc4Z5$;@&1*5mC:=LJp6p^#YD1+N*XD]!QEXF-](R
%K"\nH3(]cbTca+I#t^e?"F2kKBa[K4f\"r,g.i8/+H#RK?@!b$!:*n,-$!"]VW;]/Q?*0/DkgAn8"cL`T@Rp)8)V17,B1G/"3@ru
%@Fjm\E!-['3!+]"RG]%c@'l_^,656-0eF@GoZ&_EKl[CDFf)m83!)?jSJ^,mi3mHVb`3.Q,#CM5qLoBBRY1c>"9@+(0JN]\8cnj=
%$&/GaRq)LB#Sa6bBhNR["9A=PGCk>R?n:F("9DoDEooAJ!-"u$AdC[&R&Su*+98M0j\sq@!WojnX+:fb">ch"#m.m`,Fmg=,7"SA
%LE%NE#\KtC-O@@=-O=6B&HiTr#QjgkS0/qK(G:([#b^E8j[,+Q+<BVM,)\YGJWKpJJDFUj95hhkS0@s7'q.1YqpOFk2eNE;n;SiO
%0Ea)R+'\D4&HI3^9!>0ERN:2#c2GR.e?bFO43&cOJ@k2q:(`S5<gI5.T?D:/;$6kp)[fCQ&Bq4OV[2L.Sof>s76oenW%\>W$HKJ,
%";IVHdMW+tDNGJiACZX8`#/U]((>`r%Os_Mc[LM!+`P67f3.H$bD2g`E3RD!*lFKk+A9#N)k8&o.sG)g_@Q]JVB)JS&AWHs&J-;q
%!9tW'1P,V2CG#8a3C*Y7cEjmf5=Yt\7;Bk!F=mt&?qu;E$iq5AK5R;oS&:nIa2u)aC8][]$tp6t&+_`rg!3#Tp&3kA#o&]+e^Q#l
%e$f5^cG(N&aiWfE#%o/<rQ$Xr:k$I`HGAq4nIqP^nM5TVF(^eIDQs?-%p0XC!XCi4\,d7gc4;mA/P3FDcF*l=:WR+<1Q:[7*\c;I
%T7;UeeR-&]Cki?<PeB;A!?2`WFuUD`#!o/M%1Kg;fgqho[qX2Hb-(#tp-nhG't[(!RS@J#KF]WHaVdiqN<;)M"u+4.+C,*%1nu_O
%2$!)'Bc;N)J_0Y#Lsn53XZ;nMlZA-,Z=K):Ve_qo2!:0@%5aUHRhK!.YQsQcXmn50I.BHp`8&VnOY#N"?c4Me]X2sTH=La?$dluZ
%r`!NG<2_Vj;oI?-<P4C1XV,&X**BF&17Y(4#Ae2c?lld8[K[f@]E"*P!00*g)\oX_0K4fXXFUnN(IsgU2#uND\dr*K`Ft7^86$J7
%7YRH_S<q7H5[07lqbet]N=)kJ*OpL,J"%=4Xb#?@2ea/Tec=JYng/+>^mqqGb9m7814fMPEY:J'EnB$c:BIkC$TU<WG\m5-j8]CC
%`'TCW<cRW$@5_niZ7jpS900<(cLl-4Yb&^0MhBMr%Z=`<\2Cje8%Jlq89Y3UFbl[KF2>`d.0e*+F1Ohq'4'XK/^uG@Z[e#JTJ(VR
%YCEtS:iVqTI(RX,V]u2JeAod<OB,\`+H&7^]b0EY`33bEm5J;Qk[Rro8IPG'N/gn1k%<[oPYP5*]7(#]<D^,=f:@BYR:?dqHTr@O
%qlBZ1J^loD:BBV'o(:I_Y;'X,+Be^A,]*u>>Kl5Pf&VFOB?<5*Y\P>NRfa&47YVR`is!Uk'$T.]52ZRM'4i)OqPrp**Q]\^cJufJ
%5FlmDRhn?Y_,,^,+DK0fi+i=5Q=65Gg)FQdb4GkG2NKBRBDJhSI3EE+C^cNg$Fb@;S8=CH@$tc$rWX`WA;*KHA$knJS;`PJDt:2.
%6ooD(WMJ&H_0N;?5OPZZQ*__IZ'+;9[Rio:=Qd4)4$B8%TbFb,%P2F[$n'fjJB]tQk&G.F9n83l#D:bXJDFjNV?u,9WJ5;Z!*e9V
%9UI.Ab)=7ZE74q!Eo6NXM/?/0Mn.\<d]2#g#EuN\V*U>^E2;pC[Rh3FbJS*s.n%BpAer3BW@`p.aZ)R@TM>HI)CJAG#nF*V-Q,Rs
%8V49gP$p:EOR7/]9J"2?eB.#plNFEP*$2RaOG3)b2n)QI_'>k#o"_^FGIL=^Fe8hs'3HNVnW[_,$2ib949@B8C?.e$GlO9PaZ-74
%IQYl-^D1XE/ohmZ#j.cT)Yr!kEJ!FajqobR@!M,2-^!saYEke5hfb-T8)j_%Pa4L#irk@PGo_m.._8KQc%p@k0SeQR`^uGOnr$-j
%%=@iu3W\Bu*k+nkAJP8@`efZEqr!VE2Wh9B]J(6O$-pO^L>=fi<gi6L`eh>U?&``lUnL-8"Q+[Ufr2ms>Sr_t@5L``,^O.SN>(Q9
%G*#:,oM*arBq8WI<6"UL3fu9akDA;?'ZLGKh!Fu'/mRK*nCO91Fe4O&\TpA.B"<t(6r2'QIL7:_G:E!a7dkUPS2V#1^Y7;eORSA-
%:I^NM24#FI7s:Z.*hA\'0MXBnN0>'Z!sqbD6F77_@-rU0XKU@6;lHH.T@CqLdEsS=hVDT0Gld.MeQ@\HKXP+PYYK_2!LP41FN6Ci
%Kp>+O\PD`Lld7ZOU`i=;0bXc+N+K%ijQ#,8Y)%F"\jo/bTd"d+/5N>jV:t"d??AG\JJdSVAFZnO&c+^GaCs)'F#RLS:9V+D,e-))
%Zg:n#8KTu-lE`\_k%RDr-kP25:0+nqL+KnNfJ\BG)=_IZ4J1-SoVg8m%O5k0ZJQAN?R8eXbUFhSI+T:i:uO1`/G<N5!W8c'g/[&r
%G'n6G.\_d]G/o;Sj2ep>ZX;SZ&J?eHKU5"merhu],k.OC^UZ;YQYt*Y*R=A7>LrdiTiJbe_rmMnKFSD1P:7EB#<\6uoV4(ib4Ug7
%7u6IEDQ4U'Qm]KgY8UFY5'?\knM[D@TYWm]TJ[+#0c_(B4eQhX]lMej6'0&:1TX7];m)45=-5J!76q=jfXdGm<%mQ_:,l[S>YQhm
%o+*>tZk\-t>^45g/N719M'JkL+YCe2[MYdkf>jnNS@^bWqM!JD-OJ;EK0(?n(mDRhNd&nF@",?,?=^uS;F$P\9Zh"g-s>$f/o*09
%%JDQ]gO)P*1),rUG2:'@;*'KE1M[T=K7+-ko"@t2g43dF!`O@[;SRKNAf;d%+cqD$d/@5s.QC!`FtVZ+JGLbCZm:00jroC--G9>0
%(#H[::NOb/394Du(Xq0YXJkl<@p:7<1CCghU#,#9Sk<CR0='LpQKg?8JKr1D`m(YWGubrsX&Tmh%^Q]QSl^E^p](ho-#kC-\);)?
%D#p`'TQe`-_=,3a&(=rJ?0(<Y\5MHpkL'5'mc"n`FW-/ARbY]1f=mnX#KU&IfEh5j3C!C_J#BfV"P[J;hlZ5Y6\Jem2%R33kjM"\
%jS&B40CT/<-&K3@l#Y2$05s*_,E@5\G6@rNkH;Ts#8>]i6pFo8N7)6=52EI/YoeJMUX-(?=W&ZtOBi8$L;lj;=pl)9c0HV9iN^Fp
%a-7+\K;;uARHn0O4r,!onkVKhJCj)_q!Cp',qcl&Joc9eq4-qQHq94qVi(TkQsZ1r8^EWSR+0P0?R`t@1ApU<Nc<)G+ftVc,IcG>
%YsS.t`^#-X+[kmQs8@VSJXq5g>CI3@MQ!,.?coXgc;/EShj)Q3&*X;8_MHsIjX4Uj^$@WPhd<U9D17YWb-uQmli3k<I+UCjg&)?q
%j85JKp]'j"rql`oJ%_KP5GT2>S4q;KruY@'mm$B&ri.o/8W_KuDlCkR+)ML+a#+'EP%TpPD^rs9)I4B`04k&`R.#P#YQ)Z#s4b<g
%Ip&-,5OsKuT=O4_cSfb<:NV!_cT\H0B0P_^:V>Y9?\uKng^JV7:[*<?)c1g:JiY#UZ&J.%Y:Z?g+&ui*>Oj^p.I0tH<8h\Z6cQ<K
%r!&%qW($Ihl7_o'rLJFE$4raI`pm%0+0RM,M!9S$LA'Z>J=5jr0W<2d;Y)acPJcHgRd44DJ,i^#i<FE_J9<8[91lUlAHA:D'Vgbb
%hRiffS4t8Q>6@'&V#l9B1;ESSQ5eH#`-##%.WRXiHMb9q\%4CNjb,&8P0b.O"e+@5eX9G8W$IGT3$`[d\hr).ZH:)]!d*E5,>%ZV
%i$^SOGRD32j+0d:gE4+U06's`ID.;\ksVFj?L\u\l0!6BUf;eso8e8/QCk78OR>FpV%;0Gd%_g_+#BA+9NX(*gMfNX8lD@IRFF5A
%Vp'$g#3!qk/MI#:q/Z/W88ga(qS4`N>oRej[[_HL64CE_8.b$>]2'@a'YD6/0&#WYK'Uu\/Irb%)j7'NdebV+J'MYHptb)[:*3'_
%ZT?"sR'7HGlFOincJ&F;a+Qle$t\7bE77aF[5H7N5H=D(3BcE^kpbpGh#0?Z^.<k)M#-["Y6AYahkmLLpEhja*Jqr5r-51DkGNh*
%mJ#)A$iZ\m%lc/XaE)74r<&Kq$#3`>5G76WVFQPo6'#s\I,ig;D9/T`q>R5ok;V,F=1A>Q>09+^NE*?k=GDm;VgCLTKC]nPS=ISD
%:UiEkVDpC0%HjcV5Oq5m7-<L9eJBmXCe.J)Etj^I66_sm_SF7O)J^tCl8J0k#;0lYD^#/]XfGii'e.H"*:aWAW>G&bhG3jsCknW!
%HtfNcYW93^@FG:W?ud@,mcUc1\\3-)YU'BGeJr.ECfN2'Lm21eR+@;ETn[c^k3$(=3LB,:'+u2VParh@aF@o>RN@i.qFX()grS#Y
%XsP$_^2WEl:#B/jS6&bZKm:tm`9'_Ap>sQ"-#toqd$.ORb+kG?Fe[.'XQtD<`W,/HN`u2TS7qX2@RQ>p#fH\Vod;=E%NR0\Ck!V_
%EM+aW1^dFG7MnO[-4=<C%j,U#QM=,E+>*?t=GYjt^j8(Q3SlX^gE,IBG16pCR1*qH5-C$r@\A4pLs2R)5ilpnO)5#\s0`oh[L&"h
%h)Tjs!i9k,^TEU2Qk@C!_W#CioR"P%NdS4ih-+r'1_1klZe7Mu/@XOe*_mL;1-RX)AUFNED,Tpqg[Ng2GAfLN'NhWg2q"Yi`W@^e
%oRco(0e?0)QkB`\6mVWLZ/#k[mF'<cgD8>Ba57\6c!>_4Qt+;pI1KFLVETfj9q)?0>!MM\ILMDJC9tfAT'M=JEIl)kB8t%<))f?o
%^Em%&bdA"G)[2_,f<37"$.ZELmP9$id<%bb&*<<hen!F2V8BIOF;S3"j1)HF[m0iPmC_NOl$(unm6tsbPfMtBY#o^npuOM/WK!8f
%PM-X9!S@<aG+9pl4$)SGl%miM#:<aUa#>Q%D1MP3^c%K2SPR:n]=>QsU[rMKh)(5`8^"#t%J\*]0@.2FOCt"O\'*m/l#t+uRV*u4
%:L-/lC_GXNSP57GF%Q3@WJ5_OKt4M*"'pXi.o!<A7-ig\=M`m]L3KjLpdkeP^_F;=X0KEQ%C?e_4UDT_1/JW[i0&<6\@O_jn:]cj
%05m=_9nVt"prRL3eSU1mqd(V)lF60RXf9&3cbCp(s*%Q1JkOk/P5X(rm\VAQ"@LWN"dEC2$)_S<'9'l*Vqi&YLcDelL?4O^hr!L+
%7Y:_L@_<^=\#P/_+:r:@);I1oc@^^NVE`JIk,j5\[[^iWBrKtCC[UfBV;]h^-Psbdr98BOd=N-agCSXO'K4;DS((i<W[-rAb`^<f
%6HU'XQ1V1k8;[h^`e%'T*OGfD@5^_BMJaPlbAK4f(#Z]n@^1XR;"=X!i<_C2)ZT$GN`IiMRWhN"ZLl<:=I`\1ZAQAkl_#J8&:?<M
%N8*o,]7mnK)&WFr>@NQSShTLalUZqDo?mh'`8[0,\UjE^bge?CQ)W.8JI_.*+r_^SCO(O&4`.nfq=6ar4(2p%T+>$C'UVIrZ/$@i
%:e)>\V1u[upL_kcf?rjXVTrVgiIND;jV)\\TcWgd8?rj%3AlsGq&9*;!o(XJ%8I":g@2-><mc!O[p]c9[O_,5)Y4&Ug$G/rmt,IU
%^tE+D8.)6Mq5b:e9[=aQniepcVA,u]HM'0/e),%e-:k$q1D[Uf5C'H,9l's*#Eo"4CJED8kpH+uR!j'X/*hmHBW_4&gC6&M_p8SC
%I>m\fi&+XRq`@g-7i?\%Is\[I9k`BJZDcT!["m%<]KNpl5a0`a@gfUm7Ht9Ef=;07oGK&6G.72s2E`LWOG3a52WA?Gkb9Cm*`)8E
%?Mg8WL=s8,ab7[1Mt6_XkR<Q\f`]!=om?Nj@ju*^6J\Xn=Gh.33*(#n*L(C%c5#(?DpfK3hVO5709)iUJB-*c[!dYrIcVB*f!]E)
%GB=<on>&N'T<d,1U5$Si#ml69WKekV@u(p#U-_&,A(PP0h3?94<Q9u*:"b.9Ip-sS^nt,W5%#>^59I,pFlk&;DXMha<$r4>G^kMl
%%=9Q(cCs$`UIb[3IRi^4W`P+YHRfW7rJh@"/MQmqpDas5@D+\rTOeSLYooknMr2cf_j)cBf+dbZ@i3MDE:SfBWmEK+@o7Y+^0aQG
%&]-I^7Q/1?I&g*gCJI`8R"'XGp1^ah>[bJlVcn2r/c2^r@G%sAMq&W+b'Pbj/iD%g5HNS8F'XfK=a<8hW[B.&2\O^5V)Nm$7,%i"
%d<i]u8igN#%[:Qtlcj]Lh$Ba"V/>K"1>UR3f/+LBa6\`Lc1T+0/OBp<l$dE]'fK])mbFF9.jkGm9+S`F=<S?LVP`u?,^f@30JM3?
%;k"l]*J7@K)JBC(Tjk+@T-jIL;rd2`UcpI]pH#s4$!1+5r:tl$-lNJoL&1j2?QL7M<?'I>YtjQ:DDY$p:3ME``4E=M9_WNMV;^fR
%(HTHI'0Tk?5;6Di=GBf?br-gqFGoaE=*c?eN%?]XdNR]&]O89u197XK9+@9-i8d$[C7R2V7GI1>9k72dVoo=-(17.nY86P7rfcUi
%P%M>=&dPAog]:sd!AbOB1jXeuAP:%P<*S:m4$d%d%_I)XaoOH^JMe1DqI=`=niNY!>-es?a&;aAgpKWJ)b*,*RHcr=]FCAVm:0>=
%ZT!o6jVu<@TfD<52%M4FM1(qgGL+<`l"C=^<VkO22>hZFds2F4=')YcKK=N['-3bK!t4m-hK0(lUK_6((B"s`,P2G?5krp5nm"<1
%[&/"1c[8Y#*W#p+[n,E),#"RP'$JG\$C&jCB5c[o(;2jpd,:N4>b_SW#n+^NYsNN/?M\d[]$b"l@LDrtb0's]Ik5SD<*k=)i7f+#
%+rnL\/CSO'i@8,Ng8Z>n,=esp$m[o[qA@pCq8u#-,8ijW&aKI>0Q"CZn7ILhfONTMg'JN0$VNF&68FFP'O4D.(c,XlltmJ<3\q-)
%Hd&d[Gt+iZoVlE7fUl/hf.Tgn+T?cWqJX4>-FuB_[a7]>E4/9FQYQC$/NPG9We6sOU%'9qZq.h(C><_Y-dXuUr(Y#sos0D2p\WCp
%)Ad9^<6DMJ[9`ILZZJi16Z/>F]Tem)J+>=JqXs[VM?E9105XUOO<5"M6O-P^O-+N1\\7sBd7=k-'5O`3lGsHd3HSa0iX&;eLqM)^
%gEHl-<#=j6ma-8[f19"=;HX=4Hk1-XEW=_D)nB='6.Sd_%Wf2nMBQtPkV$fK'mlWT'#R@I4@p<NBZH@9S2<"6XlH"LhHsPg\AcIa
%q6B4`*uK?q?u@8i^Zth)kJfSkCHUfVe5t\dR[<nh]UPX)d<[aJ:SRMKJbWomj>UQ>?-cL=BCd-bNieYpCrh(NnWtEr_!En9O8jXF
%puS2QT[10<WntM+rZaYbJ(lAIq*/T\a`(EpnFMqHo,F2]p[blOh]04S?kk:/F$AOS(t@@?ZLh]F>JqYsGBc-K;"niW<n!3PGPH0@
%d5stqRsA_)?!'KkRpaK=*kEdYg?j;p>UP:BC7=+)<GNVBBk`Au>b?JSX$:]aWW7Cs%N`U#'lU\KmE:/6>&ntLA[9t24"?N"1".8^
%+]o,-a>K\cPZr$ELqn'6bYhEE@eDqAQlL>Mf^00H)A+?ug@Xq]CQ]/tF]YZUs8AruNt81#nDX0(=*d1Y*#c;NLr$RJa!n]>%D(du
%;=Y+K38D;nWS3cH0^++NA2ejYI[>-!e8BKZE_7B;TR,(^dG=L_I4hQRJQX,7kQV0Gf,70uObTDo.2]?;L)?7`<)Jd5@suP,5Y^o9
%YIUp+^@Q3u*>D%TY"q)eO:u7PiRo*#&QiYki2)dG#]DD8kj:roqQfB,kQLBPUi@m?e-c[1_+`!WFS6J_<9XhW8.qD"^7c%-E7,2\
%f/7cU"87rP0P;`:jU]dK[",64-Vb:T93o-`WhdJ#-UflqRu@C,T`2fG,WbkngS[-/AZ#BQ^hOh3HPYM:<[in@O2_pZr:Q3&BY6lZ
%RC%D$hL/HED'Kq7eX%]&U:I,RV,nXI@BF%+4P*XPfC,De*:d.?m$^7)H?h>q!>d94"6Vhe^:Ea/`)/OL^G3?G-K2%>cN/:1EGZ'D
%>&BYQh<39tN,pQ_@7`^R4dV9V5rt7MRrj9hf<FoWN:u"eVBYU!7!I*6_>kOlH#CtF@2io$WmI*POMB$`30;P/GuUWp4&aB$oK>NZ
%/KN;;[:t\I>WBT+A?7=6cbq2hhR)'$=:SLS#>;*Z\PeG9&mKd]KN7T!%p8-1^G%7(G[f._jT/S>0q!!t@>9EZkLK3.<@66CZBuD7
%Pd[sH/kLKX#rdH()+@ccaFZ/LV&2'fpb(Id`q%,cGurJA/2._jPDrI"fa1#6ak)p_2@=SJY(Kn+91Q%`[YZlWLV'2V[ZW<]lFul;
%&F!0(5&?O6S?DM4_<O*kT+(*mY:/#!fPC/O9ZBV;7;ks3@'R6FlO<L0bBZmP<iW65>.6e(^fT$[^*CI3Y$?BXVu*9s#a2mM<PpDm
%f<?H1r="RW7H+`uo09*K*?UWrl7%hfdn4La#S*KP4f?9e<`D@U\gU`Rgi4_6m"((cl#=%fbkOU;keSBFML!c(S;^\b>54Pd`SP/[
%FLTnWY,%VRRrQ66(FRf$Iab/ERWV-*_H9Wt*LCrT=)</d3N\U:<B0?)N%1g]Ag.j.YLdl%+IAd;&Pl@0p&==i=mUSrQbI?7_LW7q
%R"bLePQTs_MHL3l]A/Ep@WUMaHDM?:O=46P$8jm5AKCK6".j*#Zai5(X&q[(_LlSlArEj5D7aq&R62^XDJU!_gop^'jXRD%85GM-
%q-2fqaqYBgF88\<.'93kkofIkhQ49P.b!#O`%-g`)>DZ`)4)/ji&pe0XcqO$EO8n#p%TJB:&G<5\SbgCr.g'R'2iM#8RVc!JfPna
%9AGIsAsrNM&qINiE\\Uk]r:]"V'`Q#&&Oc"'DVb-r4P3#M/`=<l/]tDcue!4#Hd&;N-4a[T&4&u=#j3(!ETIodL^YaQIg@Jbuf0q
%VA"?3o=L?=7G-`AR_4E^ZD].aLX9%EQ\g(N-L*ju_ki/1R>lefEG5r]ZhjkIbdC`^qf##Mb.(CX$-r,i6]:hd3oiisH0("0^qGMb
%.kZ2V]n^[?-C9&ik@@:tH4Nfqh`HC7*6_sNI7'4qlTj"t25AG']jEQ@Qa6@$L1h76?ZTa2UO'Zrb\PO8n(.[!iU^+=(])"p?LIbY
%[tPclmOuBB9_BD5`&!8H%U[kKHhW:;$0@L`anlG.`]IRD4X^d,=6h`Di>o&P.+8j3f-kb^XbRSqqGX0^.P%PilUcA^=6nrc(QB5E
%rm8t/r_Dr4iR^]"Uif2/b;ZABZYYp%%M615nu%K1Za*^KokJL+ed@BQ,PoaSB/NO,8LNAJ8nsP2%MN%5U]JPIWl<cML,nk.C4,4u
%]6hqZ]CjT6HbcG]UL<_bj%*c(P<rL",#\'F)`p^W;<qiQ)VE'YC=o96H8tAH*3nE(jB<r4Bj`_K]=me"$p!3;rBdF<M6KhdF333R
%fV=mLD.2(,(L>R4Cm;mF(R3E$*O0Kb?Ncf8`p5XaBWfj'E#s].VgjChUs3:SI@Y)W9!lgLC@,BJD%<,2hQ&<TaUa*2^?%C`WT&6q
%&A+hKlh#'+,]Df#*#KcG]\g5t'U.+0je4p[,^?.f2!IY9`H0)KV&2DqK4FhK:<.Tu26%II9T2<cY6*iQT+]o7j,L0QSX\!/FU!=Z
%i-jKD[!@HK9)CW7#kR'NGR`8[H?&G6H^kl&QQH"c`EADD$o6!G2-^B9;(:Hp#kd41f<"MGLa18&MOFbs$^@i:("W0!&Wr\R110P,
%/;KM]Mpf57Hq\;EK&dXg6P_C3<,[riP]49u_o@PTX%.sqEL6d=VqL=[^jPTi>4dZ6BV+2$1d>EFR`e>MLIBN+obtY0;9^38X'q-*
%NYZai5$+`IO1\"X(/9f>@16/iHP5RMMfi'HU7+<N-(Du&b&MWVh&'ZWT`Lc&WTG'n<:^d32Ec;Lf(LWL,e9CFm/63IP:J_@ISiu/
%(aLo-Tc?jiHffRYEVDIXNcd%:IqP4R&aX(MqQ7m9U*Q4<5-6eFR?pP21gb^.E\u0nZZ&;_dLm(nnQoB1:,g2u<%]ap2[;63$R4CH
%0^i&Nq2u2@3>]Oj#8S"$d`kjLZ''"=>achgjp+;[GsW1rr'6N^StG"AoDCq3CS'G>\E<#`SSFbN,#QU+Z^EHq\#rZSF$CqMH1!BL
%Rcf]Rc?:61M/8bRMporBTQ5Nb)L]`6[]iu+KGu@'Sg`f;:Q9imN.Pke'J?#ROXo6-/'Ug4p1r<,hKUr#](m7)^orbD@%L_9FE=P]
%M^o8$k("=D;7=%%&LI9dC0OrZQlt-'7C%RGVegE^^0NeSI'Lgm-CYB8doOTQJh`0LalXs?Z?_0<g&-NRad\p`AFoFgM//^?hRVeE
%/"LII)^KFJF5&_,4>jBBc#[M#eNESp;pBCP)V$s2K1%TC6\`cd)Ht-<:Lc(Uc1>UkWd,Z9^8Sa^hld70B%<[CKLp,@YrD5cYE+p_
%"<SuakAS,C0PVH)ah2rX*]-YML/?9rXOCk:fNRa),edPd`$[/h3MjlI&sJTsCt_r0Vdc4uFJ%;]H]J&Dh`95K>N``6ZjShGI0WWn
%2rf=u5f0dE"-+e*DXj3A[UBN5(sT)i-hHVVe\&al26NZg?>Uk^Iq8,D76I]hbptX7agaOG,FMWF"q-!K,!2HgR=#NG`qmd;gP@cl
%_bnXYh-:"0bc;DPH'R?!?Ce=.BhKDX218t;Una8[=Rb\(#J8Qfj'1S@j<;sM-Qf+_76#jnmW3\blfoJhDI2]KMib%DQoc,K%q8g]
%WH%c0jho$3gKmr-5Wd_$]B4(;gK$Cn[*uGb(1CFTX`fp=cF+HuDOc=<`YC1gQFUu=N9sBp$><%-'&..kr=9fJ-V!DO_o]PP@C<<0
%PMElEn!)%sr:X`/jc=N\.^qpRYB&*[I?e$hmAo"YahCAqk2o\/=Z94K&4kAP)D#c2jWW_4;]^>.]%SGC[s=rL\bI;PY',XQnRPrl
%2i,1#[B9McrQITmeXRs"XfF$jE$k/WUE(]$eJ;Nj7kPm,K5dB^FX9+;9!j7o[0t0IAEsTl7IHRI=1b\319E'7Ml/h/<rt2%YND*X
%jM\*EF^d2217ZRh'3=]S5KV0Nr)1YNb4"fm<W5b&YB#gPq^T(HgK1qNh8%/R&dDD%34H)3s-eA$7maMbnt=r6(1YP3X#pZOI?hjR
%gK/Z*a/\u>I_Qb&)fag,Oij$L'[PLN2,esX;_$Z,NtI-Z8`e]Z,oN,n\+(4-7k3Dfe>-_,hk$p$_#-<ooQ=Vd44B2<V)c*O2TU`7
%.?uR(.?tFiMNF9OX.`HMR#\6CH$IRJ(\(HgHtX)'mF%-fRPg?`2ePbEbA]4H^\$GgbH+)u911M-O5_qY%Z:>4UhL4>QO;Q]WEpbL
%F%$L>'m2-pgifie@*Y)GY*\@[GiDtI]`_Y#ab0qMb:Cud-bgt-;OnKTWF#-]Klf<5H3)ckYE)hZ>!d$ZRi!>=PWZ*liH*pcMO,f3
%\M-sZH9k\lfq_+1!lbolUO'U-Vg?$a/MI.@Ur_g/1THd(I8ff).UM-m;t@<]-.+jl>d':tAd6j[HGU\E`q>LW0IRtbEIX,GW=1pM
%fh7)*F#(^\#Nf#(SEtB+62#W@6M=;/U(V@/V8G/74i[/X!OF6A+_35D)Mql4,@@grK(eWq!S%96_ahN+^+lp[FN3HHk[Z?^Xb8\W
%+'GrI7TN7"r6ucm0Bl)4APVn2ZuF\1WgC@rUNn+a0Br.FKKnebd&&"FEP4bQC\5MVP)41D_b"G,\]8r#HCVp,lQm`Zbcc/hQ`)TT
%-@H0M99kn^8`'>u3707OeRbUS:5;>.iH`NNXu(-6=q4#@]&[D!iujLY&Qb+`98?F*H-,FIo3Uq!UtlCb>f-)qrpaKcn[rCW3%q9X
%l)YeS'I.o)o<M[loTE)4]c0?m))XPiU\Cm7qgmUK?33QWb'@<DBAHg7[pCMlMjmOC723F_CEe)<?m0j\ZUp/nU6g7%#S8uC9A1dB
%7mcj2-GIbZjgWM"YLdsK=M$13oOKpmmQegnc!S;O[I`d0FX''K'1UCNLG^>AmR-U_3;2TT^]!$'f+Buk%VGS0R;(=U")B,VjNl4J
%YiPb_<^93_]]*#].O&o^AOC$97Dr01_RRJT?"<$P6j_)[f8NPhp]\r;P()IRgoQHn_6+4:$[hlnqU[3=l[4EX$dM+^iYu\Qo-ZYn
%K-lsa>"riDfWHZteSIg1ph#mBZ7_i3DjhSP,`71f8cdW4p:L4@53A\JQW<2,V*E(p,7YDfbNb\g5iSst^89W/+hK6M<6,?P&b\4%
%?dfZtjf9Hu2Ld74.]k=olVP$2K5mnj[]#qXiI!,PU*tWnO`$3_F]#5EM+9AU)gfj@]KO)oKdBjlg;C([a&l=d3IR>W/)W_B8SSSI
%WKT2fOaX<i.2Wp:SQ1=(PH*Ll-8[oW50IipN0FA'F]Zs1.oGq[1UJU7;g%(k6@QZ8(9HuWR9&!i]2o?'"C)ej-s5euF7%X!TC.<&
%i+![I[fa5[%k*_)=Ua\Cq7FeG@s#KA?G8m4?rcIe5C.[.He4EB03ElJ"D^]$Q]W`fdD7W*PW=)i=aApV3gcT<d_gBn&Q1n&Wu85j
%nOg3/.=OIFj-kp]KN1aFqI;lQi7_J7nIA:&8q#h</3sT](^K/A*)n,D!`XYsg^!(9Ai<*rI7?..hdkr\d_\`HY7;6:Clo=.[04K`
%$/^N(%P;*Grk2X)[d^i_-GCr%ctHcm0OX!c'SY;^_&/P@?\P1TmVu]T"6p1IUIM3]q1-FU.G3;.iM;<6=MhMIg5k)!m;iY)RC<I/
%8`^4"UQtJm$Y$=qn0U.KU,=.tYOh;/M?joq&]sFN'HPHZ2PrA$]j)m3]%g3PE.h"e-^@:7EA[(V*b8@_?dIYFAS>_E?&c$qp68Cs
%V6@d\e\SFO-E1k?mj[)BDs#=+H*iAlfUBZ+h;I8*m7BuoOAY]625R-uV7,!c)DR?3jGU)n+DgF+f\2=t881obJC8g2PA4IQDV+:E
%/k9$Uq`03>?;R95)X3C<%[+&><_Ba/p/QL/;/N6V465:Z<>Y:%qaC_g\nAk%@RNgWe^7T#PLhK;'Rs%4=\eV&FMHSR"Ci7r(5=3)
%DH0^2Q0joU<?]BY!jS_f2QOM<kmq(k9a'd?C,/?1p"T;u2WBfFb&I!\XP"45,Tjc_?n'/Fms1&$,"nPU@qAJ+3mns"KLVf&MY':g
%&Yuj\nX`'S4J<s<gdsAtOe:TC8)>K]U4.ZGnIM!\!+YpoQJM2TaeY71!\YE%q,.q(0(Z_tAU;);pjqr\)iT9GWCEF,]5gF:a+(@!
%W4i#sn-:"P(Sj\G]/0B#fY>QPG2eI1^pUC8i7A1_675ARs"DT&4G.@]Q8^#<qC<PuobT0lFhnu;kCg;SX9X1!H0`m.iF`bZ3j=E+
%#t5l]I5>NOC$THqA>ibEXR8%j)f8l,0(sDMXUDdoKe9U]K$hjUf)H]DEV"s/Z&&.Xq2]K0]bAuJ".%"qdX'8mY1H20U!>npg:K8a
%P>72t+3G@Pp1?/=bcrj;5/__6pdgnCR!-l)$-o1>3R_>*maAbndW("-?-dLG2h51Eap@aOPU&HOg33P!HBBafV<`hL`tn'S!t4M.
%!tO_1(Td<9YfX>,KTA6C;sV]9n)Qp*d36q^J7o1TQj,a:>bVeE"'g364Gd\l75tP:r+\!]0cSfLZn<H1V#2FOe;ZO'^B6;:ZcU2T
%!3`YQ]U+&@FB#=7G8Kd2?oJm$f=h>Zkrd8L*XN1NI0Y]lg*(nmE+JR`!!5XK8JAiPCf"9d`U<p>hf#p7a2KPtr9h?er(c\:INEQm
%46`O9QG1OU.,SUcK^So+b.*03heE*GS_o.iA.m+B8rCSbC.PR2n3j-Mm0S)_H<f+rMCj0gTDQ`]_KS7X"G`dB$:[<o5X^:o%P3;%
%?Ebs8jjs>=FkOBcRd-H&KZQcLW8>YSWf5E;l5a2=VZ\.W4jYCMYP$stl,i+>URtiameF:'6p'<<]mIT(s0e$>1=82".V1GAoM4<W
%3sAM5"hT(?n;#<E3Q]MdMk(\6q_CujMGH]g+F85?JIoMY(0_1rMmA+G_8)58-5fcaM)00$IX>m/,'jLXT&Hr=kXOum'F;N'5D>bA
%12IS_7Is::c(L!B2=G(5[JSUOEc7E-h$LXOh3W$Z,'\n>\;Wd#:N6[b[_)(PbcX*O'Gm&D3ul4Njr[SnEC'"bBPiR#=>6>jkpXhr
%nuS,h$dLDE19:#-I##$upj(oq4*^\=@QNdu1qsrYi%(2M_\lG:0TaX3;<KX5PaA2In&t#!mr7BGG?F]!Z3nP3Mn8*MF9DQ>mnO?b
%]!U'$>!eSTABOkHGPHjU*A/jU/FFOu$aalMkcjn'J1pA1fg4PH/&(9tl[ej3*-Scm<6s+g#V5(<63\J[,aUi&VI5,S/t958Q?$dE
%Zb#[T.]r8qd8a/+WZ6$"8?`[/!MfR=AH.-Fbr5Jb,mbS'ZO?7/LbIB'.WrnC=05a=oPunLe#fHM"*gCsqTmm[h9LMqSuBtaZp/E_
%g9OJ+mR\-t1f)J%E2^3=&arA6>60YID_PE0V:H2D0V'k)X)^a(?D-([]m,bm2K7m\)aS%*JghhRgq]Pe!,&F%pY)*B8p/1J<C6qb
%eSsEg&JaqIbk7BW9<PA.dr!Oi88U8)15sPM3a>Ds[]MY=3L.G@'eD]<_Ig)4l?<BROkhM>NYoM>iS82#f.:Z6POfd6DqEUu4(QeP
%qj"=C<&Dp$P[=)X]\B/:W1J(-U?OY;LWM2npK/J].3)E_OUA6+YgKTu1haA%,d4Q84crN+NsB.)c`gFdP@DCWOh4,Z<8JOP!*6aA
%MpXY<4j-9MkZXDN3jM+W@f\IO.3U_QndD\@9l+Oo?_FA^_Zndk0P;3<"khWLCJ_81A%)[o0"ITUKDZ'8PJK6:k8e*tHn\TQEQ1Oe
%rPTPPE$]Cj3l2_ZYSuR821KAeWB<#%0M2sR<\K/''G$ZEcNSE$:p/RA/lBMV$Io-g4-ReS;;3%R\D&+=SM9[IPqIL#R.OcIi(5j@
%@X>ZY=)2Argmi_11.51$-!i9n%%219mI=eS4^\mPo]o+;/8Qm20H1T(?^sV8UbA!gV0dgfDo4XCj:"aV[bF_T+7[Lq5R9Lj3R8'K
%.d,iPVpEJ,-$AJTgN;3$ETtrEi?'QK2^e,imbXcj8/doc,e*<``jXOY$&^=pk;>PSKuLe*KI-(QB.-Pm8oC^#GnKBsf08+(653%#
%*GP7m%Ks8D,9r?][M?$bOqXa!Tt^kVESGmOMmeMRHNo]Phb/;[1!8:;2PG\u@2a6-O)/_S%Xd2&G12u8nYK/LP'd)\%!\1VW4]Is
%R?e![\1\a#P-P4l(0[1#JF03'ncK4KQe\LM40ZWHPb3Vsq,,9C0_NVJoMSMXCsr,44>:/7*T?.jStYm;HrS=/!"[t-B!Bl2_+*@+
%(,HW*6jBc2bQm9E:^7tS:bPofJ+?L&&Srakig](#5r33fSrn]u,n1d:B\e;>GNA.;LK)#qMK2LX0b2<W!`hd$\/Qe9E5-Y?;m%.`
%M0WQqAO4!`c[n49aF\`Sg8&s+'7R=M!O[u/Aq8W"bF&Z[Z/`4KnO_[Nk7BrDZ9]tINi$%]Mkf]]H=VfU3W(H:$Kuo<b0&MM+s@S5
%:r!nW@iCTU]\j<+2Tb/SOut/Wd)N(RX7=cRoT.`jTX,u5j?X*\,&Q6.TSh7]@bSQW5m\;GVW:#L`r4$NTEOXp8Me?2P%HAko:QRQ
%nt9<n<Y!AMZ95)`:6>d(]Y3Gn*?T!@:e,k#*n8SZ`am=GCjAiI?UPsbd:nmPQ2B.<M2jk5M,;6;YtV*+=OHV1"#/JC.tl>ql&%f!
%1m-Be.)Ia5MH!3Di?tJ6camZ\mOQMYaFl$U_(k&V8msB!c),@`al;qd.+o1:5=dQ'FI,OL1-,/%Q0NQ?Pe\*g_W%<pG42c;R:(rE
%37!7UR&"97KG)LWLt0g/#NhFN#99..03APCq+6kYFhC[a665N5R8CqJ=shbH,`rCU[%:hq*Na.G:e-9p'.S4]n.Xn\4`+>KE$Q]Q
%<us2'b[PC&-IaaU,89>ZYEfK;N9aSK?VBmtpj]p9d$!Dg),<B4<['C!$S:Psc/CNH[3"1bK">8@-c[7:k3KN;UTR^KDpHGSi+pF[
%BItVVO:ShfU4HasWao##8?eKGmD<IV@a!F,),?2G'K%B_fgl?!_YRWd+mB%VJMt'CW-+$e:UMU@r$doY.)'\R\d*&Y;],pEWoW+_
%;Ln57X_=&Q#"M^E/537m'*@9f=.eV.r>[Jo-o.e)Gm6S*Yb<7:0Q>S5Pql2N=-1'FPh7F4//,4_!#qJ;P';Up3fA#6RWeod6>4TT
%C.K:Qq'Y<12<Y7NJ<]2%[3Rj#M-$Ve'P7O_YOG!AU<+8Z`JK1n+L;W]OeUiY3(@nn;:b'M7-E%+.o`#g@Gc=d<J*D1.$7*X<El0C
%lZlPZ`k8>cf"A%"-@&ZGbk%t;(CKeLi`1m>6-m/09t&EYBASo\V8mR=mAe:_*>7*^&0a$6BicmETJ5\(`WiE>H<<E9VO9PB3:(9/
%AR1k2AmO@]=2\g+lAHII>e)sZHdoRSX=K6f=\j5bL-\Af`Y(4OO[rg$o<2e4[2&OE.I68M;`^,>>r?FC%-VK\<C:IpQ8E1,'uj*=
%jI(3<_i#+#c+B.*U8!WndEq-;l/(hr_`/.J8p-k:\ApU$XY-S3(/=-">"^'^]Q@]5<7A!HaX`XTo"6I]YM^X=hA*V8*,5:'Lm_<^
%p=(Vji^I-s9tb9db-@blX(LN#)i/e[`*ctRX/92p%5ZF6R!L&)#MWHl>FOD;;EXVEHL<g>[Uic?B8n\<$6s2L6XguOFV6:tW[4fR
%b.NnRFSeX9/QN:W8PE'd*fSd^.J4&;,ahV0Y9#)I&iB2P+PKo@]K0KG]Y^u[G6cC*_UjJ*_osVf7jp?4jqYmJ@mnB2T[3#jjU$6F
%gcar]/&I#fQ-W2G6!uXHQqE9O44oCc7C=.Qkd78m@3-n6-nQoYM&)B87#O*7V+'?7=%qaL+2iik7#PfLMA]0I6CFkCROBcQ_,rZC
%d@sJ!.cnap^=f\<_WRth1hK:FqEihsoCt'KL%l?rlgR=#/aiU(Mo(pm.9rXT.""FabY!f18jVk[Bi/!GhTS)BN:@U)q_)Pu*iDF5
%(Q/3>V*t^@+[RG@M\>'-5r$f^`7\K.=qmXH/!Um8YsaK_fTTZ5JEdqD;1(kI/LmGhMZOT-8P4o(rf(^pVa^8/$e-[Y$>G0)*``hu
%]i2JgXe=J6E?So`N#!^:Y=O"I]Q]-(95%1Q-5g,^Moo.r7@c+=:oQ=%6V32.W7.J_G<'A76K;L/)/2t-BV:8VBMmc**3]%rF6UeQ
%[\KHdMom-.BMfXB[&=X=>*NDWm40aqQl!M/Zm[Y!aD=aX'X/,c<*BuJm\Ve]BMn`R"Yl5W"Y?%i8rLhZ+OQn`LXSh/;)3[]-n=(X
%/0@`jO0g;QIRK+-H+itq[6AUQ,XVa1][cUG3,V(t>!dJ$2kd09>*M]8nuJ#kQ$Unn;$TKme7Z7?UIAT5YPZu=A9>1($>uW?7K$^D
%3_5D@@i?UR^h?M$,_YB3QO#O(&fn2G:%#A63l$mh_)EZ$?j@Y0SAmQ0&CYjEF-$AUUN4Lu^dsLN?HR<hk!EC2kTEMIP<P5p!3A4<
%g']%J+eabSE1fO<O=*uo9\o?hEDuu^a[*RLN$0^nU"<O7;FqA/`=g9Yg6Z$EOrTR^fV1^4\>54Me:Lic,R50LSK]j^EfeM<F(a&Y
%e35uNfK[pn".Rnb.*;NolR]:h[uWLV36M=Lccm@r8om7YH7Djf3FKP&E>XiuY]p.WMMi!H*-e_LR*uVEqUh7%jWOA,[!e2#+M18*
%P>AqT8Ur856,mTJ9SMSI@UqKh0^0"V6%4O0ElbJk*;Z?]Wop_DqWWNbNXF?rSBnFo71tD.AiL!j`)9t9:gJn.Na:AEGcQoG,j1I-
%'9X=\m?Xn),ro@)fbE+;P/E-=jH/=gElbJK*99\e:FXBd0/]//7?RaZJ!6h-,R9_GVgsdT0u%OlSkgGW@HdC;:]sLDV%^pjO?(5?
%:g":D6As/ZG>A9e,WQ-mJD:V\3<3igVCWd>T'CPHOopH_c1@3`*.V&/)3s8*Z)m>nZ'-0W=<sGD=-,6mS`Fa!,WVAKfaN.Tr!JYK
%E5EOEPR0t-WOe7C"](7+#N7BkJ>t.*1f3NZ8okP.@(>m#jrjDO:k?t5qGGj9Bb'u1*tP/-TIhZeI]=X&-XN/2*-ACDk3P28#og2&
%PS+u^[).1ngY4rpJG8SWX)H[?am%9&`So'uY5Jo?;#W:bRf-/u",+tp<TR!Y]=HB@Ip+PGE6+ZsE$?@`$0tN',Jtr]OalFRS>jpZ
%N6Y4mN<C=fnsl#dVpInfo*_E;q#sMel4[2Non2XIZL*<<%4huO$na^3^^9=3C?]9K/X.C6&Rh4n@s0q4[aM"--JtXaaV]'X;P,YR
%eG+a`V6oc#M7%1fluP"t`[g>=:3(2cf1K2oQXTc!cRJ@V,+"EA`6]TYlD#N>YPsmoitgeVR#E>@9SS`qk(M8,K-qCo"S'NkQgC(7
%@ih"70mC\Ie>F0JlI6t%j\T+5Sdq0.7tQjbA5HV,3rLcX#u;lU&%,rc`o<gGBAj>gOYVu]6O'r_l-3(T$q`-B6rEn;&&u+QEla2-
%+*NF`K-_]<gOHMQ]"7-f).64'a/TUe?o&e:ifG$,I4I<g!#KC$<kFhX6$LC\/3.5@]B!/d]qFfarL(EdiT-3EYWHEH`M#hn1?4Is
%VGfsAiJ+;.3+^J0mI86=4R1Vso'Z:_O?kbqae5q^,c/%I7`o2(?7%iR.A0Da7=?p/90SaWVY;AqkcZ\R1)Y8E%/Trum&-h2T4HdB
%QB>q@EP-uOO&(0QF+%8EZ<QJXD#.`6#:@2ZL6H!,K[h^XbU7u=AYbFb$Fcb_B;>ATq"!^9!S!KUVJ[8ZOm6Xu),0=<H=^WYZR2Yt
%Ab$s7?5]_g:*5@>AOZuc9_Z\g&p3!kQ,*HJ]4FgX]'r:;kfA16c6ji:+QB5Q7%YG[#'0S923%@]Lr68l-MO?`APS2%R4mCqbqF]A
%Wo5S(]nMonTs:>]iTN9@8*qnXTFDD?m4FQCNF,\49?Ok%:9=/T@%kR(p/Zp3JV'?1WER>$3#OsV8%umoYX7/O@h8S@+$VNp$;tCo
%^L6o#?f5I5SZpgP,FRA*DkS<Epb91saH[(]glaj]4>X79UiPuf9JF(AVlBKgj(3)d6OOQcBl0CpXfX<%?,iuu4J+6N)df4)nSN*E
%+P0#,=hlRSD(r1E3)*[CA-P[]b0'i-WV2\HV_]g4>C"m<k2g.b30+4gbMAec1;Qgop'"*7=^Wg1+t`bn*bjZ!R!R\1;,#rs2%mlB
%GpJU=A\bh<7RaY8Wj@WUF1ZNao[rHPQAGU3^S4_p9jmh?#Gc8#05tCj`(taaUTuH-MPZ'/Z>>Xa])ADuhZMstPia"Z(),.J_th7Z
%V!U@+>o=-sD88H='Zo_tP7jidD?C8T0N[$69(b8Eg]j(Fc&)Z_+o6@kEdJ17@_.fGn0Y[t=H?Xp-FnQ?+h92>g1gN/M@V6Eii9@&
%??Dh!g@e5m#V<VFWKN)$p<fHT\p_A>KR@t%Mu5Haf3%iO`E%sHWKeFEf]#2c#@!'Z\="$e>m>9q&r"LOSeu#M:KVc&VNc4^^`_F*
%Gg(pKi_53e/qQ&]<C%Ee`2d8+41PWkHk>tO<!3eeK>#H5";-W5nN)OMc5EY+/qSmg_P,>W,)?cl3J'g)&Y7kq,$Y4iK)79-(K!%$
%+7-6agb>Q/i_2I5f0Gkq/Teb`hL10"<mj5q@;6pVY\G9^Mj-3O5^]dKfq$VXI,O0M'?6P!kX#F5coVAr[-4K?pqU.GGj,Xq)NP/7
%/865u0JsCr7S"Jm"QG!4!hqqjit(J$X*9W4;?:d_&.Wje`$m<-/or4f3+nV78HM`n8Z,'P1_;A]hL&K`e(>aa%((%Q^X>c!GgBXt
%E?Yc9ME\WVijpo@?<<a(j3c",&2P(?L`&o*LaT81$G`/rB,ZSV>Qm/7[c?bm3f+S''hM1FL_u44Mg;9-,2/i6.p$X!7UG3J.=sP2
%;4O:]lR*k:kl^[P_Y^k)Ar]&T&CG-71'R&6eePg+/naKW.2-<u@iJ"G.Y<JEk)(H;Js^1b&ja`\&jZZe$,nNKR-1i7+Nflr"&9HH
%4JuHfE@,BR(I>u0L5$m@&EVZW+K>bmHJmdc>?)6>b^"oZUk4D'%XstK+C^W.+rmb;#je8m3E6V<9OYLaDHgV]m^``L(*8?p]*KTG
%08SU;Lfhe]l*[OC3)`\8Uk4D.F\O>,C(nMEVMA&L&7tTq(lYL<@Z:Xo[&P5MEuW\1&:sZ!+fQRc/o2'dTT_!,<C&_iMBEt=C*:f$
%aj`0Zn_lF%GgnuH]1%1KC*95m+s=a*nX`!qI6!Fn&h@0A=r)eg:1dmr6HG'S$g]0IBkD_*F23aI=M8c`A@H?jo)jl-k6DtQcO\ZC
%SdSSeF!EQg"WL/)ns\_C0<3*1^Qa9tX*H>MNc;9>4U50NYUr;ijl;Q:7\ZHPADS_;i'ktgm5e&:)QuO@l(A<>UCGk9ioj_@]L[VF
%?kWlW!YrIgH5q%!6>tFN=l4p0H&YI:\6E?(G<R$9c[gfMaD.:o0ND4+X&2XU(H?=jl%aaU^#6H6f]HSm^]copV_^:0$suJAhEY,`
%W[;'B*5A($KB2Z]1?KD5\Phr[^KVC759%]/SKBM$"jc:a6_7-g;"-s+3!*O>3A4M\l0^h>%_:pe+Xsn^(!gI(`"5m,(CH9Xdf326
%r.M0.Gm:&!q2%_V>p$p+\fB1Z"X9t;bF?i!Z:;6Cq7tfn:&`g-?WX-HXMRs3+i1_/"6u-iGOlV1(Ou5NgNoMSrf^+C),A4mr-YD/
%b#^Q`q9RrI*@"WX<8Ul&o^<Td+1%!U2rA"fOpBs6Qpqg;ce@0F\W#nDb6T#o]WWSLlS_[i?Z9;+\;ZF=SJ7-&q&r!s3:`0fK0=Q@
%"(9HboXe6G)IpuD,lt14M$-qD)j^U2G5JjaQ)c)]YXXICRBD-%/$istV;KSo,Nge4Ju1?.(q_Qm]DSqGK=Z,VoC_\UG<$,TK1NMC
%$Yc0I3c3C41!]PhKatuZQh&c9`J\F^E^sZ?g@6)@kLjrJ/$nt_0mi9L<El9,AGTBBRmPEGHUJ+N(BF/[Ia1rg)S65felEM:Rfmc!
%><DY/c/=+?fS<:W%+n-o't\SL$G.cj][iRDo]J(fCjQ&-T63AD2gHtN3Y28Qh[3;+RnMM][=XYaKTB?"_!cmo'.U@ip-b8gD:90Y
%##Rq81:QA,8n\MqJEa>PDXIJBCQ^e#_4oM!o@,G/Og2+#gR,M`1qCP=!\>cUbfKm)8(e;6UBnjbI`1eQL^%0PD4:C8;2q-g9<nWO
%.[[[8eVpd+2V8is=N*^"Pj?E-\%QosFm@V5OYIjBB>&CUYp)U-&;rah<Z0<R;.\LUXgcO-iHD__P*X,3H['tn%W`fWZlLJQmsCuE
%H2Ri62o@;`Cn'BdI%$O5L=<kh8sQ+&obC5kiKrGND2,[cO?ARO]*0A8QN0uS?IXRhKN_>:NlNoK(6slSTS+T?9$(>805*[(Yc%WG
%KNaU?N^@#FW!0iRR8CM":7bH,b&75gN1T:@p`B9*1nXL;np@U0KTHem)"d5UB`Z0qlV[9fd&oL0BfbY$OXlqISkco6`8_3#B<$rM
%<%9tD3phbYSb@^oSb@b/3pd=HFBUeTZ]p$<e)Efki0i`Vm[gI(0V;C7P"C:t:lC@$FGVCR;CZt\1SGRAY:K9aR8GJe_fpFKVqk@^
%8%/f?/'V2=V`eJ5Vqm34meO6%"YVY%Bk=f9c(kZR(`@6XT;O\a$IH;.[ej_-Q9?Gfa:i=9),V'4$+6_fb%(t+VqiS4`HaZ7::]^?
%T,(_sV+"<HXc+q(%lBnZhMH,dj_LXCBsj)+NA!m-+GI#4]4Pao-6rgiN,'IS$+la2bIk4DA7!NYh(=eg;a)df<tn0SHs0K`B-U!X
%lTgh3RnunX"Z/OL;NbbaLe:Q<:!:AaRK'D2Zn`2q1RT"#=SS(RVT&K-g(Pp'(@>EFrm51ZoT,>3nmkp_%sf=c9T*)]NR_2hR<FXa
%Yuib57Zhn48uCFo$h.,!PQbq]+>f?!fOc!7VUFlEC8."d$YXRqeQc:oB[JT%p4P;i(([Fe7Ou&>;7\pPd\;GI4f5csB],BRX)1(n
%44Phe]\usW=djgjS.p)4a&X0]4=b+fY&@num?P(/1b3:D>jp7Fo*)E#POUacBgYlPaDmB.KM'=*hA960WZY(U1/(?p.CSJT8NXoT
%4=pkAUP:DMP4mj(e[-T02]]u7]b)S<AN46JSZnn:!HMY>V^CflED<E(qksk#Nj_)lLeUg3EjMUl,W'OSS4HSB*fN]1Ssm#0jP(RI
%GONWUPAfW`8NYJpi2WA81jK2U_7<:,cCgS?C=:ttArkH;H6JpqXoo_CJYbD9@RL8j<F\-K#r!Y@/N'M"/SM$ILkes6=MR'Y#r"0j
%/.sC6Yj<VoWTGtcbY8_WEi5#S,f(B*K4&8\OCoo2W+R4nc1*=NM+IqgM+PLc'n](:]%$G!VqX61c$$Z=.`gDZcI3/F]#9?dV+W\E
%XIY8%/#/u9+I8E@UQGjnR[Jh?Ab%W71[2iFR?ZZpR?V.+9YuuC98dOs&mhT%J]>nZ]`&>j^7=Cu/r\7+7Y;Zef@HHDr"sSt.r]`F
%&fNaHV9DWMP_g,^1R$0MK<\>!9L;f-Kc3`]!kbZA5!E&h816S?#Z"_[hes\r8`3=s(W)"a[XuFJR7W#+B$SUG5q1A4Y(pLp>%5nf
%o>IF@lkr?>HMiMD>1/7"<g$5&:^_q>0%eDcQtI`0HmbgrZB>?KX[BCWF:!e=+dSB=E$U_WKg8\8..Sun8[<m&U%;r#8Uu(WZ)f3b
%OqBl0M%B(9J4Ng712Pr(.p5HL,4Eu\ou.>!%>B]1e8@ms0gES?5[U@`Z9!biJ^]JTgMcD?qtNr,oFEoVo_<\IeGKK1'E,Dtrcrp5
%NVX:`km>XrBd)O,$QN>dp$0[YYtYY(&$XH+#a2m,?6`h?gFD,>8pOddl;]1N#)rQB&7_c>D0uL_"Kk&,<YRQJ(u#F>0t%20/NWI6
%pD'PBgC"`N2IIj)<ZCF^;Fcj+US%Y%Jl[p"7J!d;K"9'T1&WdgCOi2,40Q;%8D'`j?@D!7C^6KFo5hFS#Lne)2H]iLdfG0LL3^iL
%#"Fa9X_AQd4GsGggt!)gKZ[+,@cHfg:\2Z_7R22*<o(Uj9_ZqZ3tmX_\jh4T<n<$'UPo>%&[jH6C`r8+Q5Z+*8BSeu5KXoY-a;Eu
%i3L9h6Ko(D)[RTRh^@42F4THV?=q\Bd\Zb9Eg0R/>0*I$;u%Mbo_-3@^0BE6Bo=_dimO0JF6:]nAX3e7\>RVPj\fjk%HYsOYVDC)
%nq*oJ=Zs[(WtQ$]X!`#NqqA[23G[]BUQq;1g)O3pCXjJt?r<BE(V30@KN3JKUSXo6_oJkDA(f&;YR1ZAH?[XHlS7Bg@?0%_=1'ZT
%O&d#7*U\Uh.L7GPl"hf&b\B.Z!c-(&j`1W,>lH!McMNJgp.HKDVD',:ER.eM)<Le917&iDJF?;N&ml*P_VFtqc@8*LCdA.+g^ADK
%&kW6a(5WS)_RdN`%pc%/dLe"k]%J:%/bPlX\X>X&9dS'+eNK'aDL:#V+r)jBE?pXOi`nFcY'eh:8f&3I@JR!o`9t'Bc/@mqK;3ij
%Dl45jQ>.W&mO/<kE@&s;akKIVZLVfrc;c/A$<B\mjKfLX>)h8WDIE1mCHBGLBtR(7\3qadNk@+ea9!#.OGoXt%*?Us#+0`]%C>Rb
%&rXr9m#bR<bL"Y]9(\YWID@jr<V4FSZPK<T7tECAZYQ/L+2+0AbHADpK&-'JM568-/K`a`0<gkd@tG:E"EX++Y1tX4PW$F,=5@+]
%(oSLU#d<P16[EtF\tDOTUh%_i+(LhF?MYW_(G.Z4Kg"6sG^$t%?FlNmRl.E<4S[Q1LSg)8__Ip'BS)9:ct;3^lo!'WAWZJ=iK7o"
%_ds.5q4'h*TYO/j*3;eIS20"h,^K2b]4U+I+Zhq:&/.X3mZan)&S7-2<P[`c_2ROW>>>TI!-*@;#HUYq8Je_j)S_OTjRQ%bATbMU
%5":1B6?`OO$(*94\+,Zl;=a1ST-_,9htlYD>mpqg]eCM=(r)(XFFs0`iip*9b6$Wr^NBur[_Pe%_[A!hbr(UP7(r,.M[$9n+\j+r
%!%upCVai"=U.%Sq9U)d2$-nc4j<>"m8^;[Y/IYqPY=,4pUYa11g"du-0j$,`]5N;uZQ5IE\@n$l4I`]%QTA/pM=;]o99\dSo!Ejf
%d?i_fbDp\bW[T+tAcqMEJlVrrXBI.UIV\+P;'i6c&\p>JGEI'ufcJ_m*cg#V9G5GFQ;W-OqqY6OD9rqGE[d3:S'itnF2g3aX.>HH
%Kd3'.h509B_];1IfK4?l7?3;p520VZ7^FbGU4:_Sr"hh$0#JJ&f2!c,')$i4H^#0XbVuSl>;@kV>)S_LG?[Z%LA=Rn[TKP]I-D8h
%LZ4dCfOV`'VI1qQNr=]p\./k'@"lVE:tNq6[@68Nqb<n"goe*AKOu/K&S*$]`a?,(I)BnHeuGDYh1?RDW&g(P/6gIMcMJ#`h(Vqr
%a2d\9iVnO"ED)iXFjs+TG[XM*;VGh1&;WhR``DX70\oHcZ$<>@q*m(sgSg4hLdN#`@2U$*QUK'V^p$TkO\IgnTu<:i(Yj.+'[0/o
%%uAt^rDemnNM_@PH`::m'Kr[2]]&8H92/]f0dEstQKhOtkSYe-WX9_r]=#[ED:E4C!ObZ]@*&-_h\gR%*W&La\=:ql?g=%&^nBZe
%Cn'sOa&jdU>Dg)XfYU9)UDoTh:(N(H%A7Hb?@7eK2n3Wo)*b@TC]W*KmiMId/s_'SX/l$_StS6WVL/E6QK`pSa'hn#S*$L3N3_4:
%S1T$R6SES3-W6hH42%k!Q(KD-`A`OBJ:Fpjl<=2n>A;2<]X6f(0\9r(Ao?#1Ih%^\#-QPqOf;_9dBPRo$d<C%8m:SQg@sGPL;!IJ
%?0ZSDIW>n:]O]39:GctHVW<Ds!Xh?7KBWh/mk.;)(Y3I5jr?)!Lg_luRe7KLC2SL;)^R^Z=BNF"?5MC')/6PUO%lXT$rpe(@c^_:
%^/b[OXtLm_:pSJT*A4%K^L*UGnBV>eRE!AM,HnH>UiGNTeeOG)'$Nc5A13e3L1^?LH=:re85:nX9R%=jS]+VM*J+N$(StG0ZhYnW
%<[YNm;D@:Rm,pWIgi?rL=<[rWf^aVsF;NE9g">kD'ptP-AJj9Q2Zt4Re9u=.K]S@Y_(hD\7`^H;)qfc4BV.OZ9TlUD]Xq=X!`fjH
%00/mX&scjP/9Pe/I.-nb@N'H]9Ya$l3nC:F:Di(531%ca=Oa5J"nj&6q>T.3/)2P3A^3M2)1bidpBrU@"o=Skp+Z,WYl2YhpYRka
%DYd0.k'TO[bSC-R4b#un(Ou8BpD6o^"3#XVbl;U8SZq8G/[\%tTCEoI"nU/S6R%Iu)ZfY>Q.6LoE[tJ\"ni'9!=E+M:Is:'O5<U@
%BsPF"bY@F!GF/h[r5L\&B__Kq^X`d&r!'(V^tq6R$&hqIIc)`8`6u=_i2m`b">_,"=q*K)^g+rZeneo1!VR'EFsEMLV0>"F.*9a>
%2W?(fZeN/?6b[Z3jsDdMhY>NW)k:GtrilY](k\T-s!0h[!lYY)a'0k9(g3J`n?:FtPs^s]o"<L4qcf\]IU>FJ5B_0nFM[bXaOPte
%TlEXkG']kFV'2#:o^6J$M['GB7j.ECc:d7>?C8qgCBu<=*&B<WfmIH*2t^+bDm3C/06e\DHg>IW&L&;OoOGRFM!0P+AOXD[k!a&/
%'Hh7#Ie*llo[\222tilM4&@_@ZfV+lJV!t>kAYL8_:6&D</K0/YhQOB@:(R4\]+1IN9ViF\#9OlecDcAQAQ8dh_#YHqP2C1A7!Zh
%Bf5tU=hoT"bLc,8)7LUf:fJU(0o<17V0@8AUJ.ZM(kGJ,:E9m1k]^7EctkM8JeIlWO&Osai=H(!:"+A)B3oJjSMVL5lsnl,,$dCb
%+E5iDY\D6mD]"DV)hXXBNLBL*^nr[`)tMEYVmZHhUr]_@joiLTFbR'VE7OtsN,\4pF6^OF!&m>9K:V]ZB[gSB"=7X_ZVH72BlT$!
%'9!YT.cQP7=\e0@#$0T.dAVVO<$#O%,I+,sf%8S3j_2D=cudu5OpEYWrAm`,Ql"nYaTk?"aK#t.Y.V[3`6pZQHV3H5c]5[:V?ZAu
%=_>A#8Q7C_\rHh>*5N9*:@$_L78n/C]59EgTiJa^i4[_YnmB>)$'eshPF;GH7^/^*j+TbKQ'#rN2Dd#5(?SH<7]=P'h2b4*;T[/m
%+%$bfB_/N4f(+9/4tGJ]c7<a%$UJN=O#JE?V0?FbccW%ZEhXD*d'`KnI/udCV=hXWc5;()n)hI=+rS1$<<p7!b78MTk^5AW@Q"$[
%fS'pWe=_S=S%4O!e;QO.*TjdNON-38p[X_^C*JlN):QC:UdW6o\Bh@AmGDgDZ8]1H2,\0&@&fThKGlF#16urTmIiuUQ<WfaPurfn
%\RNfbC_+E)n5_lj5.pd?'A7R"0fMgo3I%kHK+XA!*H+^#p"eePRsLJ;aJCTB;qf8[[;iY8QYJ@k]?T7h1e2e6SAFI"\XKSZ9PCnh
%qiEe_16rnm),?3u%(kO.:TDA]XZFbchM`*l*G5YERK>2aB5hfn<^.U;4To#ris__nShYB2"Bj/0-t6%heG;=o^Sk:s0-->b7),,s
%Hh^OpD5Qkq^>>gC9S0C5J#0["5g2/?D0DD"o3c-@kVdKKVlaA+Mt@o6[i'djPm`/Sbp9IGh:J<;1C9#kn26Tf%'V/]dqo<5r9\Tq
%SJ^0pEr4jRiVkQO2dcRj-b!65h/*A?SHe47'4*\Y%<J!2:f=(;9E^L4b5dEW+bp)_3^-h19F$PP1Pr"GTB"^K&U#m_#<L*`)GGg@
%:9tV/dk&DY4-giY(H=G":0='!(]`u5Ff1WuKQ/S_T,GYJO\b3t_oK33XtCg>:j/:uh+aeMrk.;K4(11p1@.al_(IYke7g7e3SR%T
%SS"$*ZeafA:,@`ad?1;$1LS0TUX'>^gQKG<1R#pU=2+OTni00(1XQEl4u_#)Q3s51B84&AF'<+HRED87*@"<8$+#o76'aUkYZGSJ
%K'^oXSgD'^Qp2lJ'DIs;9WPm0W7NSEW-ce7:8ZY09Ab6jRY_+FEUo8)K'`,Y$oG2Bj'7H5&g7MT.+hKb1`?GOkYiCJ`1jqE-L\_m
%NAYPl9CU<`oq)cI%Q2.V<5XB]W>B(iZh]2,,1lt+Vd8TXZ!il!eJmTO^Y9TSHQ%X%1o5jfL/=Jh;m\upC'40gq_FXN;ATt8%ciXD
%eBiuEA/$GGJk(W4C!N!^g3Yf>Y-(Q@G&?T)TkJXdU<#G>#iD+>eSdVjl\r&"h'?[F\k6ld3;H,hmI/fFG<!2gdZ=;-A*GMX%cQg+
%b@4Xk)2q*HG'o8(A*K2I0-?W:Y5_PPaf,cniu3-,9*Y+[@Q3Mpn$ZoP7s_p'SDs%PiBd-#4HAu)NTW%4XEQgG+tfFAEudRJVAS8&
%+0G=oT&(u`SEt?]3[2Ji6OsSSa54K9Sm(pIk67WjH-mA"q*MeP[54ouBW'&OM=U?s]^'J37D%Cu/cY+2Dt.P#`r-LA``T\E]e<5,
%mU#j/FGYUZqk@_f9@Toa-Kc"q63[<mTb<S*W._&@ks0B:)O6S)\39pt$nZII_@,0^KNGpQhC`0-L+%;[QRAH,`fV(\'>E6=EEo)3
%3FVK%/l*me@!jU[:JfBP\Y8<Z1dVL-02MATnPWYan2kb6p:OSVm;RF)mB53g"U[WmVNn:lPSb.j-FlBQ33>S(aDGU>L\"-&IcM;)
%02V4_oM!F(KTE@7nb)-fgue9D*6'NG.-]9*^cJZ+/(FB,>bTG$iX1rWfG>t6]<I!3eWD*$\Ir$MeR2AGdYiZ??(YXsdL+t8KgFbZ
%cke*<QI*k[.V!1Db&COW1@,C54NZ/_?_Gh&O]NrVrTVLWY#+o;EkRq@Z^8BY;9@q,;6-C+B*O8m@Mn[!RrZk\[t8c;"%>u^k$^gt
%3e'8@Dc&[5+"_\4l6Hf)a`%lQ&:&pn"Kj1fdiR\R[Ys&21e0R(i.)=cOW23rotp&2a,rMSc;]8%COhGAH+SZ2c4.GQ&dQP2<5#=s
%G.YY\bP1TpOc9@%rXbc'*kgYl.\e8`g*WFC%<?OW&kA1Xf'\a;P<.`+Uc-otETq'NQRl$:ZdDd:-A$2fEBBm\iCf9W!?mdr/j_pV
%OTX&cs._Ld[:]8\_;:o2cK:Nn>CM<9<U(esJZJtTHP;cFE4jfm6(7t5!sIZ1SOskp41G\=F.Y8K=9VW=gG.S4Nba=;oT+iM777`e
%L[pbF17:YJ3ih)lh'EIW;fQbAO%XtbLVBl@Nnp8M#bfKL(=V>2K`I)t/T:Z+WmoH:2^>[sa,,_Ob+u1dZSO8nGaKI^ShfH""Edug
%,'*A`&^/QK%7-sPTi6[_Qm^^=bTG23+ldg4Y$QC'(Op3gs/*L&bsPIdj_P*V\XD&'2jesCF2Kno!p)UZ>&DH0d(?>mAErC/VN-gL
%!'JnN8*<!8RTb-[R.A^N*e*A34sD4"?V8ojc)F,pUX;U_='sYAMh9*PhBc@op@=+[Wq):)\%<!/#>[018Qq.=H5%n]1l:GLm>Upd
%V:F;HM,$AC$^aH1\gj!Bm?ZRaDHGk1`GX?dR6`PL1_L>+]9@@fOVu-L5=i^3%SXq/+2?Q,)qmM0GZhg457"0Cqg>6:ZCLndrpkjq
%9`6)_jH@[!7rp4UU[[F8Q<ROYltG@[l?,U08C@laB>7k,RFZ<5^K\%VNhMPj)0sa,6C%i-<[.;n%X2_MH,sl'h*6WP=4Y\dpm[C%
%4.R5Q*&\b"bhYs\_E'p-n$D.A2'X0@[h2IVNHdRQ-]'Y=Og,VjaDd#]ACr+JGZ%rM:*UgdL5.ZU4D(lD4lV$=)i`o?NHjAC9e8Ft
%4<E-*@l!+">EE(FHpE&TcC-;DM<Nq:#m'1&EX[6;:;NSCo9eG\dOV.KO,69mH,Mi-T\OOIGt]V1daP!H%q'*3o3^j:b\>'Z-8`&(
%VD+Z3a.%fG-A2aZmgFk4!*=&?)Y*mZl,D/6a,)P3!SGLg.CLs8[O/c+.HHV"%s^h\;`d;ed`7kI%!l;:KR7'Y*pEHL*rukB8u0lk
%k`NJ@?0\9/)>';edL&"u0g!kG)"bU_\;DqT)Y?!D#!F`3U)UXGIt:PFj+K;RJK[in*%%PsQ^:t";%JW8+L5_2@n%`&/'Q%3P`<hl
%`u4Qkhj:&Y-d8MZL-=gQ#2Wc;8^q6B@NsJ=*q]ML=i$&CbT<96O*UdVbr8=N4_CV_(W.:LiPui0a<Mj^4TLsj'#Pb-8A4fJf!*1_
%N[]r#O*Y1Np?RN\bg,Q>>"#>'ZLKbUSG.:X*a!-R24m50r.oZloA$V;;30M+*q_KSR8K"uIK(na+f,e7F!=gI_hj[@,A[3933dV@
%r3ikQdsj,W2r>1Z:ateJ,NBRs40$$mnr'W^/d=DU5rEc]IUH=?'+E*5GPEoOF/"W:Ueb<MeYT`uG`fFT^O_N1ZU*Y4Tk>,*RUp`Z
%nVJbaZ@5*!$M&q\Q4OZ[S2O:75X)s=,g%!GFX:A=etag(Y)c(3&8EN80X/b1"P="okt4`lQfhba>(r]3_F6#ehI\`qB8L_kYA!@t
%oFo!TG_oE/^6st85*RorW]TR.rdPHD(\qV_mSYtI=(afI?`4dN)EbAWM/u,)a:T]CeQd9G3/;Q<VN.LPPJaqG/<#G'\_u^\1(QC8
%J<ME2,Yl"8<FctBi`nbk8K:KQ&%bmlS4hH#1[PF,nR4Q_--:jBNo6ZlKCcpl6GQ,#:<;PS.2<.1,@H@S+V`38,DG^m$\e2+$&.u)
%3JDONh:X3HGYb6D3/)Er'!a<I;d+6g^'6$VdMYaJ;@9>Oa!cu$FD:c45SY0,1-U*S<);D/)L,e3SeroH)0QMQC=KO-cJa/TB%;#n
%ic*&-+lbgJS/<:.AZ%2OR'2S;^Ql,$Gj/%"^AaoLC=e7I)d/[=`\Ii&6K25p#S9Jb"D#IW15U&]C.DeIVi38)"-gc](\/u,o/JI4
%aeU2AF!WofBq-^$OF5YMCRFu\)[Isj8>]%`3)9g>F1&62&rgtKbi-B,Bq2u+Gc8?R"!WTn5aB4nW70$j%d0"9-23;_6">=3kA\Qd
%LcdKL!d_?X&r.-;fcuX,3Ljc+O-Mb]F,f+F3/8/WU\OJ^1!RCL+t9$4AT9bb'4[u(-qY,MN$GXB`6kprb=du8\HW5o15Bp:\Y$#r
%-#j"P/Y"CPq?s_o)F+pJL7Q73:ChLJ,Yi_^,Ep;BS5R7X4Nkp&ONT4pp\EI=hYS-jZ?]PNJ"L]:K4421#l,JUM'[^sE;cme-nnPT
%X3(M!;A#YqN8aY1H,AeJku,tC`$,-"6Ejn!0J@@=[LIuF^2mbU?$^i@n+a^3G(+m`$%Hp*FN7?McLeg9o3(UFBlTGuC?fUGohTEM
%l%HAC8#ZW6%D2SdRgmX)N4dO6aGWWo(W-0)iJ.Kq.LC,f)YulT/hTH(`K,52#$II8rngUIKn3lVMJNPPh(<,dC!1k>&\t_F_`t%1
%d`n(#P+lN+La.rQg==:3P57t320uB4Q+aD8]7>rC\sUhC$[aef!Gg_$#Icr;%oKLU[_iuVoqUnNSYDWK[o-TW2;Qt;&EHP5V'3q:
%P8uF'[a]C*54%4Rl2<XXm?,^E%,?a6Hgm:GcjCY0bP(]'"Y/nlj4+7@W'G=k;BXS0Y(ZSXc=4"<CqDd0O>)=lV=R)bQV\V8dBCV%
%nu1>=G)?Oo6q*`q/;`s!C+VH"r8qT!-tA%JR.m^+`WW-*D*fIXRm<%e8lZ5@/#XJtdrq3)[V1S\.+!c%<5iK`-AWt5H6F55>6OE?
%i9lUtWf5Ro=S;%"'X?JU2iT3o2Z#Yt0]Nc"N((ZCUFBZA@5]J?mHf80]',R>n,A`V65;Y/`8n&<7BO7NN/bl@\9[MI@5KF^(;oN\
%8n@*gDXA.CKe.VU]B$?*P8],[Cn[:>M%:$I6>JbuGnT;%.2WI&$/"[A7$.PZ&CZ[RQj.C$a:grD[X7'D'*`7R)lph#[X]R6=<k8+
%KndP,-sI`^pP:C8p>+NuQu0i@e2G2V\':jADY&KCEgpDb7;h_OHfR)7Uk`i/H_f#*DE9_SEt`oa2YTZJh<'ahcu&2XO+-5bO@$GR
%cnNkoD&QZ.@*$5>SLma=QajE/0Gl%Dqf%WPEf4BFO`ddg>HH\D2eMN-Uk(4?.l@i^IT(lF+!M(2\HURK%V=]:E1G'-Ek>7fMFVQ8
%RHeOIg]DYCPXfVBe_oL]jEC9Fcsu8TE$8"a6aqZpMli]-N()qgUFC;S@1V2V#C5Mk^Jg$Gk1B@[D>m4eh<"o5Z.n&W*kT[6m'5=#
%*@Z0$Hd6-1\VE=kRg2<<h<&_;CK_W_*kTZA0u\&%T_6rS*o(IlI4rWJ@^cLjlE+UKS1NB`@c4UnFsQN;LDDZ:M7W!m=t%g+oS"`L
%(4u8P[jd(j6&@sud);V@:j%(M%fbP"V]8mfm11WokKo*,Ie1B^H0HXd76.`%H/6K&34,V=;FlC>%ddRRC_BB2<(7g`6]6]2Bj)p?
%G41rdWuP;6nH\NG**UbMB.-50[%a4B*Q`6JOY7lW^U/Jpp+W0eb]RK`N,WIRFb]rlE+fbAaKg>1R!jaR=e1''(O-(<<o/k<74A@p
%D^Zb8K]6C3_`!o,q!W95HrF_?GLelaH!4#dKgPZ_0rNC4R`Hqbl$\OW/'f+*'acNn?>6hMZek@!L(4<Da!cR@k$pO-)71592q-3?
%5mu6@:1'5@BJYqkZl)UIg'g&q<h=E*%,/'ZN5VC.lSku,b+P$"&7j(kjklX$Fb(H762SD:@PWK&MfC>"b8![FMobr<P6i0\-3MnM
%FdSO)0^9.8RZ(]l$WiNPi"0<GcsXUU9'JERrh7q^Hp^7Z7R#EQ+hthW2l'":r'rSMmeDXBE9PC`Yj'70UY_O*aU%#Xm'63aXs(k0
%H8=3j6$\"4'%i/8F?LMWN$.^iUmggk.;t8#p#SBuA25-F1AK*78`(qfJqr4qq:),23==*K=s0_Z6(uq%M[2gb5@Y9WpeunN=JWPg
%"U\pjR4t<'#uV\e9H5M.Pd+U]*H3^*%bMUpj[tbV@mJ/R4XLgNW$9s]@<)$G^F8njKE3B+\TgYg"r-"YmR&P1Lbra/NoSi\j)[$2
%Y(<.IU^Pl^:^&&`.4`[L:dt"YR@ku3-t"W)';Y=4KNC*,I4%8pOj3"e#i?==VA^<O8[(cIVt6M\PN?Dm:r/[EC':Ju`4lrd8mjD5
%L&WDp'!d/]ie9Dm8ag!"r&`:4S\^$V(HD1c#Aj=9,-&E5(#ZB[*faJ3k<I'N#gFFL5=rmc#ZrY-EZJt4[p!jnV^qLt+RG7L6!<(8
%(.n_"j;3OL,_P(DLJZt<F8F>d#LDXJeR.7-5J:Hu5KNn]%7fPW&`$cjoWTZ%`bD@%UX5W`>s3s#^8sVU<HRlBZ_*9($Y%<fG4sAc
%)uE438D4+A8[.\!3;Z:Y@ahY+lmKV=,V"EE,Zlc"SGa^Pd'pEkidKp%Xg"FXJIq/qBsC,/VUk4!EC<K\%)Bs7#l9aD_GOh5e&?+0
%YhppF0rJ>K*XEYO.K)Xf?*"D%oI$%mQ#RG75F&%Km1/QZ8%W\g7kZt&l!*>#Tg'9VB3>*<$N,=haeH:<kg]NbHJGRV25EDfmKLfb
%gj)0Lfi]Q904I_-R5rD_HOclD1^ht''V>YY!DZN4G3Of7N^&@;l2#f(3-'N@d`7l^P1:?D!gIs,*r,m8S.Horg+FD*H/gfD&f1#,
%%-QZ7][NA/PL(#W3Dlm15bqkgc]FhB5D-E2d2Qe`)93U_Dh'-R-JK"BS;tq&n-thXOq&DEOks3qM8p7)giQD=pdS\1&.*^j<1%DE
%JZfk*%2\N]7#f`AIY!QW4()neHlXTE[9[:=RA9/@@F.Y-g[5W>[^N5?O6,2@osoiD7r:=:13g03aZ@SlFo`\Wq)Q@=L#?ZaGX8]b
%:toQ!>lt/RZTY/"rJ%%[N1l1%NZ7nh;Q^RlE0K_+W/-^t^BZ+%MjN9O)2+p2!a+m7,.T?W**M^r?FcaX!\@HVC:G#n.ANNFF`lUD
%VQ;Xu"M6L),tqFnJh7TO2sO`&m?F(,[ep,`r;=V7ep#G&ii9Us5qd=%JuFSRORkOV!KN&*-W[hp#!63l!1S<&3T1EO;'4j/e>N?5
%N>DJr;Q/>7W&%(`nl#3O^t`/F*g'/]9!i3oJ5dt1?>e>]'OP=umYPJhZ+W/8YO7Ft'X[Q7;:8uZV>>5]]G.ZO=WeP:k*1RZK]+(A
%l_:haQr4IU#FI3AA@Pst@<9P`VH[#DL,AbO>lA_=$D1Bahl#4)ZJ*Gi5"'F&@?+TT4!5#u&grpGomBCnT^4M&0,.mYq=qfU'%iqf
%\JC^ZcrBBZqpC4#!cQ)AT<YJMq2X'S$pX+nQU`&o0Wb-<$o]fHE!<:pUMS]69+k#es7ku?TYY9>8-GN.h/CN.b6Mi^jQ?\jZO>kP
%8cO)HW:iYG5i-Qu[V*`S":JHq@tl8fY[L!G5(%m2mk=q;;N.WuV+KGSa0=hiTO5UZh/KgTc:B8q2k3"pI_"E$a4E7'>`j?\50Aio
%!V?jnCsWui`LM)TVc&?6kGctdkE2pZY2H;Cc_8]VJ$U9uP:U,#Bjb8c`l$HEC9Y]/i!koG%#^)I]/C[]&jmJ:1$R8MZDFeN[)_83
%S'3l\pc_']L<(dr&/d;_KKM<n-c1V"O"'J@L6/j"0VfKOI^&/RdCh<c0Z`!`O&J"kKmgrcLp/%QXZM?+(60kU"AqG;&:g-IAo*8*
%,9,W-K+2h9CsEWmB5D^kkOn,4O]O.#adtr!XiEM](`n=)e,'s!.'d8@g--iO5&08h%P@nBn3sAs"7r@C%#rc]/M5*G";_-#I*BUS
%L!U/$s)e!Q4e!_;S_q*\I>@PdJ-7F6Gs9k^;L8j(d(h9b?<DCZ@[<)Z9N)=V[%VF,r'a"cA_'dCjp^/0]X'EPTGd]-<?<>/j7nZc
%Xf"/7.)01Zf'DR>oj3bc#arUl*g-jRV!0/:;B^]u/pD83-AcR_!D+bod&sHi98-4-MX--m"PTk'ZrDj6G,7MFjHU'l:b<FAplM==
%*(.;8+carS.`=&598,@Vj%>$X=3`QENWljbLgr*@9Sd35//.$qh))=SN=i<eLkB=k'4PUVl!2l/E:ZGMFMVU.5M`BM;V-u5aSV5/
%!SOC4`fNk"OkaMn6.X[iRG=&6+d+9+b<Rg+TX?9d:bj2IQC#+LR1M^Y.uRai+nUfIZ;mo2#$]9=\/%87O\a/R&DG@;[nI($`DsN/
%1Ei!qhC=p)646GGQ^cs,X\=P'H=]D_ABTWc5%L&ma-a#'Lh$4G$#rX;1Ehb^\M>=g[BiP_@uW&Rin08A'B7Y)bChiufJ4T[B%Xsd
%45W_g[]u0166)NJ\#X.O>0DRYR!TLOG@CEJima5DZFdh/nn-g7[[2t9;oehW-@*M1)C>negQ$TC//LE&oZO!TD%48/a/,?"I>\7:
%iG,bL@1SJCkjg)q*q(&hhu$os\qW`X6(uOCj/?el8KV:"UiG;<p<IoZQfI:](9_Dmcp!U&o*UL*F2KcZ$Ph->fiCmo3UcOY[[6>+
%;GKEHX1UMP*qo'bfSE`=pJosnOKTkR&B@Sjk^KC8-(IbLeo1#,ZZB,/ZH4KoaNIXo`WL@Un&(X`o0l:\p#XpEH2gKCD9fmg/S;:\
%K<jSE&!HQ-Xdmf?0aV^qDGrQ**G02-k>1DD5F5'Ja1>b*8Zt^4HoA,B9lpdNg/^`!,/0nE-L#!^4ra<":3%Rd;HGJ#*(]u&(Fggh
%6FhK9NP\;UICdY>S8@t3a6XfB7[0NO=P.?hd^!`55+]c'goANK:\,W\OK8*-3!(MU-@_/=BteW1NL,g_R;dni@pd;pdu''3c!(#q
%W7nLla'sD/mktum$5QlQ`-@)C,:b9M]fUkTU(:ONCuk-[lOC(oU,<?W].-@8_oW_L?>hhCbX/IHJ\q%/>gtBF9si\(UkM^o[(E_/
%]l5nYEGAX+RTI))ZtVa<eg16Y4[-u`6o5@Um::OFg[J9EC,WtbEF'LLef.hlV(PkX-c`5m(_cB]VUW%l8UISnB"/5SM!Gi)mR`\u
%4d*6nTg)`/&*2iY:#\PThM=+?/R1,\3h&B*)`ZOEe()7X/gP,4kP[$!Vu9VHT$6+co`&74'^6&Y`ar(=$RmF;B,`5r):3E8OR5IW
%VBqI2%fS2i0HVs7i[pjRBQZ`q>h0]dHu9NbFcF&"bm!J$iToD;C92>1OY39mnO^`2[\TRE4ha7kQb8Jkl+0d<?^sODbAHWZaert(
%(,H;'[k;$u,ALYCr&B;#`]!c^ma>IZ9%+BB<)e_TWE3qLDi<osDCDII6"Nc2m8E+A-7rCE8Q`ZW4'=g^oal"?:4.r=orGg<l75qf
%MmPm4F%!(@&0=pJ:(G-tkp";*6ciQ(!sdfUbc[S@;U.Iod9XG)Lc0Il2IlP!V!5:KY!agNDl;^%8s9BBH[5]9G)]f8m:s3ZGs"F*
%J>V+DSA6u/?#;B]1@lhg4'l>d;s-[+q0F(@\5qE\_W"8E#!(OST#S73DG4k,:nMY2j=B;g!OGk53f2pNXorbo:"R:q*7NFVSdTh$
%SAqRsd(&"]4H80Nk#Wb7=>9ID"r?-f*rE)"?-/qA&Be;.X'MRC].:ihoa_i"EbVgh]#FZs)-siK-Ef6`ZDrWGgsP<G5mR2QVBgiF
%3c.s&GOhV'e$X&DK7&BcWRqaM2ALT9RpF:p+1N"gH2EcV&(Fl:H?f$e/Lih+b#F;_T6:C0Fm\aRHtqp;d/4%S2:L^jD;F!iZ'=m+
%BQAKZ%tj5q7b_Al48I$l^QBgr*a2d.'?Qm`dS+i!1?aF>!=Qj=e#Vb>1?`<9=$k)(TkC6,^D0>6Qe>_SE0G&B](8UhQc8R^Otk(#
%?kGs;4ga3MhTefgQgM:tDcJMaq#YV?.L.:o3)#_.FH9Khn4]Mt[$Arr;s709Y.0`_^JVI6q:)Pdp6g<tiHiO#F\eWBA='?$o1K=*
%Y00M3Iq@EkJ"=^_N]s4uWU/V<j%"L#/t+-6+!Y"co>g^/o_EpJ1P).djL)R6j=mBM\L=@=PdZ=Zl_jO[n$*:IiIM@pX%_mi@#(#l
%VCCCZ3_V&p6Lp<Mg6FpQOKSf`K5:kdqP=?3.?9Wu9Pb%-3rB_[d)]MHH4b'GJ)@%L^K0W$GP5;jDraXh8h7;i#J)t;]23s)pCtd%
%h]+t.Hf,OOnof6OZ#/!Cm9eau'?]sO3b+(TP^;X&&a2M=>:E:?/5=Bl>gk-dl'0c&W0.GJHj$rZ..=N;..?4k.%b#bb0^"HA/8%c
%fDS;A?;_[3Ku=q^:YUIL;5m5V\)k_=6<Umm/IAFD=ZQY^1D%?Z>RAeN.'n/9"Xd7t9E2E]##V'VepW9qGG36(C_icOj["eNSTRX`
%.@YMF-Br5/ei&U1KX*GC\WFHm-qdd8$Tqfhjdj'+?eY?MO4,n1kJZa6?QnliRF.S]hB6YIDir5H]Xu?u3jI5AK'A3-g=:mcVUC%A
%Pm.2jEqp^.'$TMW/]kX7GRET>]phVukmho0@,%=gQPm8])OBffEZ$cSf=.Ycc6P`Qb?th&fdg?S$Kdnf$0Iek$0Id@"g`SjL%A:u
%Dk^\WbVK)r\tO_DBhf*0[IgZ7oH]fF=eM?*n/c+iV0`P0jLinC-h(H(rbfpZ21bKEYL@7%HU@<3%3=B?K6.._*TTp-QQ>>NM0]3k
%*Fo9/K=6JK"F*_>ImNoJn/g)lOuNSg%oTs\H#/<rTW;jb"7;?L(&lUQedKsDJG5_=ONIa>GEB:Z8s[o]AD!j$iP/^h'lpj8pE3hb
%2hJXXUj5qQD>u,agak,4.tr.op<-%aL0hr<X7n<c8Y*$`iqM$(lKU%'n)kD5-!\4=K_-D-E42<h[Pb`55Q;jC*G(P/^P&@TReZ[`
%XeuPO9`4fMD=d@;jF&B[H0^C_7,C**-Ws^QOLEAM0t!GLQ)uo,rIlN=$eelKrI`ZR;b"_M=,h]0D$qi6Prl'3Fh?J'Y5Wk02HToJ
%4ui(t;f:laj?m/m[:[CSj;)*ZP>W1:(q(DoWOOMD^u_""QZDt@I2h^Z5eG`IX-=E(?;2k\`T9kOaqX+,e<W;o(%UARiuLqFXgCuj
%Vp/rG5i1?pG0m."l8?*3'p%FXic6EmMG)UWXYNMN\<IW3Q0YtIm#oM?5ulqEQi4V7l#N2Rj`%nQ'jO@fcgi-[T<<&qZf7.9?58F"
%ic68^'phk"rRFngaaLn>2Ci^ZZJd8)HqXo[[fpVIs$b&Wo!0V\RXml8?iW>EY"kVkM]*9[+NB\9gdoJ.?@Fp99q$2<^<m!6h*:/a
%P70SMm'@DT_LMIj)'mmKE'PdRlM.#HIiMr0KHb*lR/k*Hr1d1]CGc@-$i"(&X/ZG/Q"f>ke4lAoSem(:r_rD>bD-)sNT?Z)8W+:J
%aoYi/A#<g'It!*q`_bajq0^<9aN2c%"mZg$>WWgODDL-Qm(5'iSR:e)"U7>b59MfV7B$q\J!)t22Y3Op_?_JmCoaW@Nq.o`(#+$`
%\gH(f&acpMNKY80V9N!V;u2\ACt,_+P,]Z]Xr"1m=39&<n*bLq-B0g0f"')K\Z_.)G9jXq_7raZL3L;kM9I+kmYS$D2:)aZV+KT>
%BbMjmE/Y7u#-p8fi"\RJ]"N+SO2<7VDRs.'1jaW8nG?!/hAS3OnRnkfMu_*A:@:jeR`8lZC)2DSP6=1.!LSt]\EehZDiC.EOGITW
%1_.TnP>#>@elA:MEjIq5?Qnm9m,?cmDdUOQBkr*=R$mO<]Md$&)-UA0QoRGMqF<<plB%+1r'qMX%*QZN9fB\OmD_o6d6]8Tpd'(3
%rmYE-i-@tR"))<7JHjt*lAL9uQ,NsE-MU?_m*9RbL..cZQIJ0nB+=^ZN2e3M25eQ9d%]'A",/@hb\=]:\sD=0j3qJ<?)>%^V1mbV
%Tlgp(E*6g0!kSX`^U)1h<3Q_aJE/!$;DnG(Bj&5oi5V?:/7!%Qm."9Mr4;Vf;l.&lH$/+<Vn/o+/'6@6`ViA'nGhYj\c01*A8cG\
%V.q,Cpk5c$I*cC=^XL59kc06Y-_(>5RJH<k+%t.0Xr]AgZT1$=M8+L3&0T4N7G%F--<],rN/o@>](^S1*f4HkI4P8I/;Hl4FjYeX
%l-)eUL>U$82C/O-P)OZu2'gY3@5<mD&!cI`(ImpnZ,e*R:=!0j\nM_`Q^,^/V1`Fgm9=Di:Fg>/8Q1;A6*'-JXFP7,g+Mn&""'tZ
%km`NZk[prsKHIQ*<i4![M``kqcS&gcE!e2Bb?Qe@KJZ[AP>]D]Za]'?e*?5J,2,t0P8l+i7PlF<lW=eCVW)(e@\'[u?Si/n=m"pM
%Y[<&GLgp`i]e@'/Epd4<DGE>TXM%k?a;Fjl,u:d"amqm<\E6[fM09&!=>*(ngt?tTGf'Yo\l2!ho)*r3f`SFG&]aG/MLdK`d2]7<
%ClICR;p,u?I:rKeVYYBre//KXQ`JHYBKr=]DOlJj])[<+V='[4`,d@Yh:C%Q*3V]3/6]H)%^ITnb/9Ne;^QZ@!nnN/U(]f850p,S
%/fj$0og;[CdK(TYe'gSE)@.cD@:WB'OLlP&g!!GKP,'jC2G)uDn^b.*BTSq26IthK/?AB-$<I_^!#N/]-<qP]_4i6;m2B0.laR"3
%1[/S@RaU7?XbSJJHX3:i\c$5uO]">VIV"2faAJ&eA3@OW[WL>;mNuGd7a?]D"DhLiPAH!*]Ut&XnTjW4qWuh)Yj3j.@cJ)F1:5^r
%OOHrC[nhF'Lgq2u5q5!FO=tV&=2t)<aG1g[^#WtiU=G[(Fi8?CLhFPXB,5o$%P#JT,K6sP^=-Y\&-_qaF'eQkgcu!d_DL7m1jjei
%4)KGC"DLOOQ>IlfT!3+NI@f&%dI[k,4l7nM=m</@(qKXB*>(T1BdqJHge]D=[(GX58_Cu@HoJfR<@>6%/16Bl[ab!CAG*([l%74e
%Xo!As$,4lJ<cMZ"ZH%sKEDOjUe0!a"C(<)$lfNGgC4if;6Oj`7-K^u&P6$uqr+WNed2X'H8>3T[d.Fi6A@@K\J,k8GdSI4$>FR1P
%aFZ<jU"St!@*#pEaSCqrFjguN<\&f58u"@@2"_XLC_tBr&I!m(A%g]G%u5&;q6IV;0]m*EU2QZLVoo+'=4&s*"lVc"el'LiQ.]Q'
%&R.q/$j<+h[C/"b2ehf+d_teQUeaeWh#G\RAB?[`5:!7(m)PK$?<>apZ-f<n70JKAE[bm8%*Nr65>9dT-DPr_pR_pQA:@dWKQhuE
%FgLKkb(D((V]6#0,aR.@BXu+29D#G[O7G038mOC[D<ZtAB;Mb5]E&eoWtj7*.<u*o2bk7']X!'kT*d2<4C=LWq7up>4mq=Xd)JSD
%A%XGD+DCG0lHX@GF:]6olR)B:OCi54CPa$]2RAa>S:NGfSrl;k7;or2rWbr;gifS%#fS0<g;qgm,X:2-e@OCjg_?G:6lfj@AXQ/9
%nr[Hp:V/k(`ECE(]/Zsq3,XbhF.rQ>XG-oL7R4,5s&g7$+&CJ<K>??^\d)?.Ft,oR/F^Jl)GL3TRSE^D5!I)0R6JBID+1uMe$8<`
%*l[WS6Y561?^jWZbI),ol"/[K#CD[=!43TBXFU;hDm'E+OF[YsMdg,XAp/ZmA2uSd)(S]91NjqQNrbU1j`I3\R,$m"(m^5A6l+J%
%]P1Y/c"HA(:+IeYo6rm/oMWl!OY"Z2@ZhVci^Ui!,.+kO(*kW.V5_sfB3lFRQ6[n_W2MV"<?@mM<a4"3(:1J+F-3:<hE3S!3@^A$
%?U>cP54;uJEL:.RgZ\/>$u>ZUTB2`FM4+r^6CHZ/[\Z><(Yd!@`#OI67-h9#BL5j3T\I1(jTT+@D(ZO\96MpQZV&iU`\):I30ge5
%X2H_*_YptPc%O%emC[n:<e`Ff%Ka#*Y0Y.:S58;hf8-Fj4Fo/hOX&$#U5f1)YoPF&<#.jr9s>JtR`/e_[qU_;NI444#'hb7YkoSK
%]0fAf/:`fQn[b#K/W;\%Yt;trZ"h7M,74Q%Ao4i=jEB;<bG3JomTF4,hh@7F#R;D-@Fe6GEAn=]@I;AojG\"ks&(ZOIifA^VGGg:
%qGMJ^#A0SU`tCgd?P3L<1HTP[4ZVh2a$3WCDaH)@fFSXn@51,S3b\oF[]V9[6C\fQ1[L/"NGgFh[b+6k?ASn/MK?M8V^KZF66,[_
%akF@C]o1i>/S?b0#`$V$b=URN+M$l']14VXiS<J%qN>f2*-V.Nc0fG9=/_lX".6Zo4N3aFAFL\,d5C>LrFPM-l2adi"KdrQArk:3
%?MdOCYSL+ndUeUL-\&G"0?mG,WdRogCJ1P8TL5.bMWQX(OPu@BD%=Ua,m!(><4>T4Qb6Qra#Z,YkWYQ\],TW<>B^Hj&EhC8:c@!3
%dPKTgm"c-DDFRbP5m=eG<Q6da@A.5+YdhjY,8aM[e1I^.">^asNF\DiTCh+,ZYu9XoD)-]%je$#RE#AA?eg6L&_563$'@Rfo9/I)
%=u1?jrT";Cj,9P/"0e1LIoP)PSA>6S4boi!)=3`j+cH0UI3A@KdQlCp-iQE^<d'R*H`!NV;"?H939r8smmtlee,5;,Ma<iG,K3Z#
%>os:(b[A'rdaG#2<D(JtRr=OOOiFfJ*,1%1h7>n*I>!oQmTmpH&Xik5d2*44$hDZ)Vmm7N>=,[eGk""+D4NKiS:%W_I@/m61jdHO
%76US\R7kJ$&$M0J!#3f.jZSVA2mI2h-*V"a(=%IsdisUe'3Y5J&tParNff5]mC)cd:TIj&Wp$Y5>$h3@R]jd/AS$^`.L]`k>U>![
%b"9K`BoSHSE[&0kq-;OTP=6(sPJ':N$G2\k:#"ms`[8mW_D3eN6K(qR%+fL=P0VY/RrEY<6bC=ADn8soIQ8cheB]et1je#MA9'r"
%Pbq:)?=_FR$BIpE&(Iscg*Z&"ct3<(24q2@R%GQO06nC8<a;2t.A9lb-tf\mM/@V?/Qd1R/=9WKn<=`33>TR>*L+gS'H;2bi+8BM
%#a-IPl^Ca@GM@[S-\gAc3d'HA(V%55.\ki1ZY,%eVl[p;?J\Fsd3"i\/Z7O^i*7g^o"+;ArUjMp:rX7>k2bELr&=HODu]Uis8&qA
%gY`"dgHY[EVSTdOs"s_-YE?s@MXea,"FWs!KZ4Tl2UJMR^]!22Gf"B;`TJXY0T8_*5gqA*2*,"77!-K%$>CWG&)cqMVQgG-DQY<3
%K:ZdTE@B/mP/8rhC]bY)#K'!3CHkaGC6^Yq!D#P6N2#_X%>G<1qJTYm\FTo=s2fL]ct14g&/!-+*euA'E0.&KPP^_p7GbiRNUJg&
%e_B.L4YDS/9Y$HX&iZT&k%,IFb#L,"2^YM:107$q(96F\\$sR%.B/c`;]RWRBpP-EAD]fVIaaDO\=J2`B+<iYL2?ot+g5nMM!9t,
%8^V`i)NZVLN.IoHQP0"9i=6U89T3O"KX@hJ`"<WN5W.VjLR5&XIqTfuUeD=F#l,o.-@QO;*1n:1:l?5i@nJRdee"XQ&Q00#`[KuX
%kUr%-R>4766*BkR]*KVeZt%^K:k2fgYt^lK!+7H'i9(haS5*jI%s#P?/Wmh>+KJ[-8Reej,[HZ*AdNQ:FVYBh'_A;,BN]$MIoff&
%F8,@VmD/)H=sJjcUcs*D"o801Pt)=3D_?'jBmc)sQuNoc`n?`4gY!?oDC\-Ba2SPD7BnAR?OEaBiU)!5p!T>+RQeD2&RTioNI)/;
%Pc(jAM]0PaWj*q.%B\K1j0GWSdOa=BZU@RX;%j6?(SH4Efh;PGr76L*DuBgiX*)<"*tp>MhWd\3YmV=LXC3t5^b'3W6oomYYmMbY
%\YCSNQWkSpE+=&_2m\:+'$1Vm@^'%,FR=bM>iR9]rWc!>VcD:5q/?8e^]42gs5AJ)kO8E>ci<RJhu*K2hYn=)IiIY>30^5RHi*R;
%`ufd1cbK@T\%hlsJ,&p0^AHrWs7.gmp^P":]=3:10E5,QA%OquPP/[[35Th)^,Q,6ZM(4o(^U6_L"^!c./[S%mnn]6Js@WCn`?2:
%q':#SOn&uB<q=A],Zd^f?iab6lR^LM>(q$\A00"qb#5(U@KGki(U85+`jR70S>onV)=NZumo#iD7p[8f.[:Wu@+GGg<_'Z`.hP-+
%kCbtb9?`*07AhJOB[LK.dm(ZCBr/a&3#RA(;lZR7Z/Oc?&h9#>dG&mc;W6562%*Sk+:!.YCj=M#C%i"n/alY0H>fE*5m7clhX&jZ
%5E67>)fO%\WK-n'g9FF<b\lH1bWYs)lo$+9-`Ga:3\jmQfZCN$EY_3j-ENigqIscO_nW_;"=lc,%DA?I&&Vq#LUsFND"+h^1lfSr
%qrrC25/68ur1k8kiIRJHF]d0:RIG^Z`SSU2\NZOdp;>86Fhs5o@H6/(+ZAXs?`06j*7,mb[aOSjd7C`BP-eC>2[%?e:FbAhQ)rId
%BY&][/*&^FGNOc)Ts4!%:Cm_u/)5+2)[7bq#2eaTf4\_b7/b$5p)4sDXU*VeNbaf&QCa44qIo;Cm9cbU@Hn?_bHCdmp-G1a>hlLf
%!(R7j^=c4)*s+['X/dE>.oSY?]X867Q3LAm"TE]@DijgL/Wt*!mfF;D9UXN3-(aW81qWE66&r'B>1Ftgac+$2HWnmB^%?g.\X1b2
%3,R_?Zn>AJct%aQhrCRFrN=O1fN'J`m0os4!/S3#'<\U?\SeKrdps&fn+8^&VN1VC],^0p8/?GXQW$pLFJ?P]eP(#91ds;oJ[&;<
%%^sq5MPlgi[d5b-YEdA[W=hWp5k=5M;IYGET)7f))7:f_Dl";Km9S1?m6Y+sW0OT_MYuT*5i[,ncM,rWI`t@n!+:MK):h?^q/R]Q
%,rDYg:"]$)Q72#OPuc(@ks@8(\e%B&IY`[7-3`s<_K=@R,4u0M1d\=[3ln[O)Re&`8qA6O5;"mQ*pnBG*6uQZNbLQ5UPGiKi*P@2
%WC,bEanLOs))2pb?8aCM50/u8%ja>007Z*A@Nsot@Tkb_G_)HZmd[QL<*degnRNjk%,>t'[*/(OR^;Dd#<D?P<bHcUpnc./Fb4)J
%:NL4Z<0XQ^G"bHDC@U\*mdIctdPGQfFC<:jos'Xu:`^#/EUHu-%EaL5OSTA!O><L`<?`9kbq>sT&PLJTYZC6ij$AiE;O.5#'dFT!
%\%PR`G6EDC>2VWP7Vj.lL]GEcSSKuYoSA+s0^j3kf`1g+f,M(\s89q!iHn?&P-feA-07q`RfSp*C(5Ca&LpBA2uA_p.+co'IM@H.
%Hj,u`+]t$t,s-2Y0iIr*io"="\8L#<&t%,a6\P@D:>/DK-GKfXoj%k.GG(a!#L5:A'mF-=''/\?GdAJB&6#<H?>;t^g7r[i:_7nI
%nW%g9-DS@kf8/73bYmMb&,Qt)6nHlD%Jsc2,F+F&=5E45b4[eLS,"IgMW7tA!]T^++1Zc5Y]lLr'hsIqF'FlD;":0LfBQk6O0YeM
%DEWI?[GFB7.Cmk,_Sa1'RI++QTgulPNZ?@*_I5N,WT_EYm9$=g/H'HJ8gIW!NV8E]KfmEF0l0@a3*o<L.VtjDs-r8/g.d*12]WR2
%WA,I&@j9r?e%GCL:IbiQS2]2b?39m<p8^J?)>(ggU`i4T6I=P1`*8:4mPGs#H6btiRuZJ?7ZZA9/VQ^q(u7kUl2MU[h0'K'L6d&<
%;4n_'IsY;HO(CA8\2*LNS*<Jo'59A&l,]mR0PiNc;q*S4h0'c2?a:R@QgG("^CU!T3sp$.@6%e+,[A<XjTt4&SefO]3@7)552Rq^
%C7E=Ig+>g>e;O$J=cQI9'lC=^RuWXm@pXr8GU1Z?+h&DO7Jceu\#0u>0\0a"fLrh\O!I^7Sb93.ZTtUI_gp3,DRiu4pkF)U%)kOI
%#!&p8Z614=]CD7c^Vrm[hM?asc((=H+1)SX^KZb%+SYK^D435Lf878C(B2cXgh(Y"Gbi?k_+F2Xn,U'@a"7U$b&6c]$(^q)_)W:\
%_q)F7R7W@L;d@i[]n7k-mccDaV,5&<i:ZI?;KfX@Rq-'LE`eX'=`SDO-N;8k9`_ASm;?d(!)(OX2rmO*e>UQ%o:aQR?gd&'$/[;o
%AOM]8:#p4?V3Pi);^5jUrNJ22d0%,[pbK*Ro)e92'PNq_=I(s\<VFnSs!P$/LRf65KrQ692et2l1#e,%#s$e#bn0N!\f$u'8g;tt
%Cr5^!Jj,D5q?AFba)7O=.>sO1]()H9D/^^%#1HbiX3@6%J?H8[b^pe+j.S72&?k=`]2lba+1fV>f$"3TSe#%h]\7Ub.Rc\2IQ'-(
%d9H)-h:)S[KLQuoW@:@i0"a@7ei,BB"-nnLhbD?<O<UU)M*r<*oe18;02n((RbYa&eBIR;`QHn%P1D,Je+6ak/5oJJe\"M(ai3+r
%8cd*eG?]-Km$el^Uo8X0qIXPUBs![3@l$bj`d/Jk)<ds[n&D54R_K])cdXt,O'ucqlAamGCmu4:3/qN'Cpmpu=ZWt.edOu_Y'+$5
%-B5R4]<1<9kudn%CV$7e\,4E(BT3/Uh:QhV$>JI:ClXPk]Qg?Z3JLNi.d:P]"t=?SLTq_IT[6=*>rDeQ5t0t]fLutposu*3M>]!a
%m:fSXf@mTB:bVk6h7_(.@Wq!*auj8Y:qA`:^.e\dLVmX,b9:m+p/qrG<(tJf2^F#V:MqFPIssW/-jJCe5B@>r-j_(AXChq-d\=j9
%_*r@sSWt`\OY@!5':P3t^+s<2bO2q!k<6Jdk%P(07?Y@0pNp"&@p['p.U2-D.+TsVX]ioaJeSoD0Ar1<R]0B#gZ]$Got.:r'a55C
%_)?5GE@>^0BtO2DQhVYPZMelJF_"X0i:#fE&l?AmR'R)Qk*-C7&qi(,S?a*+poB:*a"ATZciQ5(#7Vr3QWRo6+MVl_Z]aKZp@\9l
%<:5OR3@j$.XrYM4%9HZ&Vl@G;62RGT$C<nGS;(@D2a]Jq;ke@NZJ<7G+1<Go+f2!H*QtQYs/=a9V/oB%nP8[YdHGe[[$;;_q0F>p
%LV96cO+:;+\&:/L-n=-m,`VG3-"#bBlJKgMNJ/n:hb@67,m(T`>DZi@?3<HZ5m\GUF_<X3QL8[%>Akj'CmpU'PK:q\S$M['bU"7+
%/<HCX%.!TJ$lXB#S$Lt0;FPb&L6g'J%&V<qIreQ^11,No!u7lQbn3I=<7iWc[b%q'A!tht8h2Z\o>kY$=\1Xc\#$co^Jg<Lh7U0!
%Q/k%*<jr!.SsM@cM37ifbMIIm0%[a)BDR[mOqiU9j.ebC#s>/X&Wr#UT+`J$WQIjZOh3:6"e[u,l3n_9FCR)0@KcKSgI)2TmlS5?
%>@5Q/'^CrgI8QC>K25(0[>G$d#5EU@hq;$/A)nUYr6leuN`fV<c#.2-FS8EE[D:mn-e/;B/2T_n([j4fDOu$"?E_%WrN1Ij^rukR
%ZC-p5<i^-s6ZNSJa#1%0im^6:I]8hH]?iG\CJ)3dXKRktj>86V@0'4W1r",?%r/R9D(rn%[,a-#R]75t+MPfYLFTtiPamOcbO>r_
%,Zq7aVcA0.4oVdY;6OVWSnr2P+Nmg9(^7ghY>oV1O?s=,XA-]ffT.rBM'\VY7iN29=>%O8[(A454cVF;*7F4jpXNZ9"5EaZQCK7.
%8+;;#'M>+%5g)etQBh_NP2VUriO^**X;h0`EUJEMch:Y!IF@5h9>&S#0WjBp,o`IekfZ`7X00#q42:LP5I3mn-nn$GOC2%DZuo?o
%B9)boZm]VCNN$YH.S%<cksFOKTbKgd>,`OTFP,hr)%/m6)M9E*>H;kO,:c/4=M(qmP`$g!1hNDIHuI`uB:&\+*:-.QW3Mb:Q`P#R
%l%3GG3g'`A<AM&aK2q/tp8>EWN6B\r,tZ+dDuo"&?loq=FFrMl9WMIt6Z+@Z^91+F;&@$1f-]5E:lS$hLi3^ZFX\_j-<X_PbPD7?
%F:&!o?>GQ&%SN'D0@\;QQ1C*0btm!r/Zh]e1pP!m(+UT+.uMpAY^A/C3YH"H?'h`?\#Q5`CbSKQ)L-,i>qmNZ#,<>7nZea=-0+C;
%.PMul/Mu,$bbI0M1k6RR>t/e/#RlI1;4pt^Vo6X]O626gVL,)gWeCWc/Z;hpd."0KSQR3ccE0?CjL@%7XHr!88\e`1No=5p4ZnD*
%f'(IM6/-_qh3o6kP<o^phd@[bUAU$g85WEGd16Di^--;b]8E<+lIA!Ip*=&E`K"e1P<;=]Pj]'>>'f7_?fYO*,0&J_c4Rd!Z9GJJ
%$n/aB\d0m$Oj;ErrVWhe*!mMJ9d^=LKdqT*otJEW<']_p57Hpb(Q8f?$Im<af4]5<:Ram"3MAabCt"u!O<U,.ZE,Qm5#7MSWmaH2
%6dU!.`nA-"(%N?]cfb5_);bNeSXVCPg,;P4HZ4/o!s>?M9a]B`DOK$if:PsZ4kPn;;m@qs*J\j2\,I'AUjEn0db3`2*S1A.Fo2,6
%BuY['[Tt2JJ?Fn5l?%sCDc2X3kq](d0URkpKWSAA6A1V5/6kQ/a;p]Mh:aaO^'SI+(`W(t2bEF/lDif[QhTKXO6,bC<Ib!I.l^<:
%F+S2]I--?%Eh\-N<Ym\04O>t&XALL$=>S[D+`=N[guUX^[-hhdmueIOYQDOBl67p'IVj5O/%)m[I']\q!ah&&1#@G4kBrh7X2>!<
%?*'bB.T^`IQWC(aJT"DLY7#Y9arIC?D6^)sV6<@j/0@f-\Ln=E<rr5.@?u3U<M:Lu6^C`9r$peK-s-*/@7bt*<%FptOpEmb2+Gc?
%hT:KN5%Mb9W8;WN+JQ2U+OEUT*EDll`<a#SMZn-:;LJk%AZSAE7B/1')BJoPce6Fk[-;gH``i&uf*Q+Z4l?-%3M9nMlk>P8rq?%B
%pCE@&,oQ?[fgY/,]Aeh*BHMj%&rjRiMo4&1[,9MQ:;/0u)J$acJip-^W"98PrA8%fP)Ue3(4CM(%ZU[ni-;#I+dMZZ'$Uj6b*p3^
%Ffi=tZN1K'i5NUPJ&YSV'bnLkW_fH*!psO&S&o0u%OsWqA<La2IJ)*q71!^0#_^u9lPO<qSZ%k>l^-$2iC<FX.Y2au#hr8NGeMLU
%0'CQ!1KCIY\jhM_/FAb3fa+7(Pfc3ar0NkA[2GQ13in++Q+G$q1UR:a)"(ES<+hI]]4sXI<%ENC/VJ/F-N8fo>G8m(5E418oO><L
%2HAK0[(B`K\V1iHVibh$_bJOuL+$S,D2L6+<!94Jf@V!-'5aPVCEarO[!6+_>/i3&hUP?0ERqs;=+ZM_`@?EsQ)QW'1&bd]15#eq
%n7JMS#t,r`_g["i.oj3bQFiD3*GM;+X]-e=K'_qZD_j$s'u(Y)\\"-lLgXV_D,r,C1qc]2bOr-A<*@jq2c@EhEc4<Y!fE927]MI7
%S(Xb<dA=I3b40Rs@],4N`8\ppN@N)MeH0#e<*q(%5)msnOQR0=KSbS;<dhYcVueKOV&-at$G7(tKm!i(C7Jcr/6)&mUo(qVpdl&f
%]&,&<&;0L^lurOK`3^oJY7]#^mro/I$8Pl#>H#'1'?*5+KrQG+jfhPr`in2L<7W@@/I&f)\F65F[Ci!-cijC?@9#OTKo-n;K@U+k
%(2B-(I(EO\R$\l8h*RB9rtZ+QFf`=Ol8I9H<0CF#W-8VLOEqH7Pd1iJDX#>.V0p2]ms"YnUA\j"5b!0O^EDC@fr%`L.15f\T>K'C
%1Ul&8@bt--D^HqL/hO"\$PcR6ji#'*IM<G1WLCJ""79V[Bp,T?=alb8?K-X)OU*OOWs60%8b#,=lJ43W+dFHUJJYEhojMPn-eW(;
%L$'Bo5c!&VgW(84YuV=@NO*Ui-_s>KIN%(7-N:_>4.!p_0bl5*3QY"DO-U5&(S5.d?.L(7'A1^]e<EUfh>j#G#qa/\6;5n7DK[dS
%c=YM-(P9S+qYBM5Z>P\TD3Uu(jmAGYpe+t31n42/Ykp(XXF[ou-+uC.J3C1/c'3!o)NnEV=aeYCp@YdPR;.sK[`aUD'ZD1fZI&eu
%[,!9.5+YZ$gKtcu)GTCm$/)c!]a<J'-\pcQUSDH#C#8k'fULn*+*KubgRFCSZSs]2,0%72$+\m:9a[blecHjA"V,G-%Wdj->HOHI
%1jT6MNUuNa8s[C,IohXR"4)9<"-f3W^?a!1mjM`(m5jjkhC*C2?2l+2i,56EZq+@cZ7@%b^/e.42a+"b?P3'b9qr<2@b!`Ur^/%b
%Ws7;%bt@gp%^4.4/7#T:T(_K>fpef3H`[M+m7kZ07;_a1(0'Sq9AIa&DR+>T`7`DjKJrNb^E(]tlcAndH*oi%\LHjE#\JS6jkfAs
%5;#S<$pK[;>M5K^F0"S,gC-h;T[h>h)4X$OU$W&^4RT9lBHpS/-b^Ig?Qm`MHjkoHm'^M?%bnEhLgJ;7fM#'*hLGde9hq[/:?=/i
%V/]F,GE\4iDPn48]A/J>@kR.&3?nu;:eA-s7$Gg3h;e\C-!3U_Ao^ep::HkOjOD&MI[HX),o/!;g'"dU1i#\0-Ha_U`u#;MZWcgb
%Ve,hX,sg9J^iMfVq/Vr0qIXO7rfu`;Tp\^*)9'#\(#>EEjQa*#BP.jUrMtb^H40?O.T!,5KNA&QW_]u@cB?kqIO73j4t1CZEAd,W
%%j\UiT,&dU-GP%W@a.PtQ[QhkfC?7/gY??RleC`KkPK\/bVAd_i`:1T('#W3k2;fkNYX/,;82DJmLj^9^.fP.dJ!cIEIFMc[!qT-
%gs;$Y'XSa%+Pnt+$JNT'aP%0*[S#/=Hl/.aJ9*4Jg2'SJ=$_^803]1L6C6CtP84pXX1$Gqe]d4L7e/#_ZhKMZD/D^-q`*j8m#Do5
%[*g8coK)Y`B%IZLWE/2'Ou8ZfZ5C,S`?)Q`92(^\ANlRu>,B:/&M99)3.DjT9\<R;cUJu5DVbfcq8u%+?9>ncBW7B6i>Q;?h<kQ8
%6AqtS\#5(4L_-SQCW&hsFtt)1-jeUd78C*UJi9rU9Z@5d$+^OA^^GQPihc4h?JA%=bGoc=(+imn)n-V!qFR%Fe']m4geHLS"#1kU
%;L[o"UlE#^r+"=]M1Dd<:0<TA;.)Lt&@6C=>P8frqUTX=$eXebUb\Xo!+FuDO]nenE]a/5)-sb4q^a&<Y*fq<_;o5hBb-LSktV+J
%pma24-WgPmGWHV`nnEg-^Bs45MA69Qh2(ZKQ+BOX55Ab8A]Z-qm-qZ18h)_sg*VK`M'Ws2k^k\IjIdX+8!-,qA>BJpo[AEkHj)fp
%cqTSnO?W<HpnCBfCM=\;eX:GID.f9dTbA1r6[e^XpRUQn-VmsY/;j"n('O.Z^K*L$Ns_2TpOrbgP'AITesP&HG<?RT"j"#&R_juL
%V61>?HfJMqPUA<n0fL)L:K^niPVu[&8VV$b"[P3gfTO2*k;[63#,/%Cl_oQ$5$(Mu>sGIT#:g")3P9e^l.T?FbGJG:6B5iHUeD,!
%.=KT7!o$L.Q]<E"m\cLG\6:F&@QW*\D6f\0)F9P3@nlWASFu:5Hco0Y@.pp)rUb"O.RZiWZXK%;F]e0*."'HQI2='!Fl-PZc'(hI
%'jmSTokq)'ZO4iR.^h8LSnmsB4C@gH02`-Fj2e^EruXI/P]Tf\(i?J1>kQ:23k1Dqa6d]RT/b\R&mDcqXe!bFFr!5i%[B#eWn`8.
%X_D.?J.RQYdXkPJr.>DOfAQ)WQ([<JI"!(l/6E1%)^sBo,4D]1'ZJsSR.q15pg=!P979obZUL5c@eI6K`%bj"r!hlu<1T/Ikf&`j
%DL#JT.8=c-)H<gFMa7Itk;X8I0RXI8dO(.NpdTFKn_2k;JXQ/na+:p$4SsPkAj,!_kW3GL0=-,j<F+?K2I"1Yrc1n"[=Nbh=37V?
%8a=;MdRB#DGUL8sdO#]@(DBD^-%BF`:2s!X@9;5KW!b]!!c;':afZXY-GQdc=S$Io*1[b*qD.I4?.Y^GB'u-?Fi3HtaT]:=+&'u1
%J^8RR1iO@"Hf8u`Hr(]hZS&^lY:$I#">RZ13E;aI>P;-m3p(g=*WK=;G;cX.S8k$0!b^\1k3oo*5?-`Y@fF]Po`SJTH#7<:6*OP=
%7`7W7N517+<XM*Z<gO0!A#5m\Re<R(?pd84#VJg_`*Fnd"GtU!%NS?ERL!%7OD>^B4t'=tkfdU$oKlKq/X'D6/Y.1"6qt@kY#IXr
%ojcFrMmin)F`*s('Ym",C(E#p@G-^J85ZGI=p9e?c(Z..o'</KK=dSRdZ['A-UA[eX+@OnkX1T/<+qHWqm<:DYL7J?f&KBQp4FX;
%=E`@Jp%(`a1lBgUcO:(Z[q[jjQC?)joLdl\#%'fj-s;uYcEc/__9MOND.P;q[UNXm!R_l<;Uo'S3Y;=BYNo]CWWU@fl%5NOA9)-s
%j;=_eXAMnG3]dti:e59<'s1LQ/WaGLcK4$WG7lgc@Q!(T/N99"STWn&&ijZhggF#OWlcUD9;YSeDc?!P5W0AGLo1W?R!C-'Ar>6Y
%[rTnN=JcqbIQ`G9BIV7cjJo6qiR"i#%ib5V0hnAX?I+4i<$^Q=XFsmq)0?kn*j2l0MiL]]?f#DChFSBTZQqjo4lfnXLaKA@[Va1h
%]/M84Hs!K]&CVoSm_W.-X*+>50(q.(n9KmkH+o=)I05p?oiVMZ2T^0434p21&0^8,T%C,9iBkBn`.d5dT:FgK+(H[NVNnR.q>RM"
%OQR1(`d$Xco?nW'MEJ@B$Yc,#/+W&&nu1hH0lokBU%MgDhRJ-D6d>a)FY;nH*,r'/hY6X*j&HEJB&#fRd(K[rL:@+r!9F5lX8Ng]
%66nEQ!pPlIg;d*s*6985S_;"?DS%$c0dr3@(%\.&>gaArZ_g0_]5.\Xc"Vs=?&Y\[NI,k`%r<3+TMOnM!Kq,Ya&S$U!86pDk=Me0
%967RJREAg3XDHHJqh2*/UaLGVX%Jp.O8EC_n.*3&R_'U=8kYN=_c+1RHNIP!8S"ROR==?jk<h63%m.7'Zo0)$6t\;lK0ViIfkpnE
%WFc_9+57EAor0<@WprgDCPp=:>Pl!r]BW+,i<bu8S[I<(G!oIjWNWTib0BYR[%]d#%P;D?ec6b2>J!nFm,Xm9CpKk#:9a^9/>PC=
%[]bV=PLatFDPebE8!'Nk+'4C!PQ7kNHZ(ar]Oo1Oj>,#YX)H$/1JUJjIN<X?3a0!iE]PL^qj=)k%XON9c_'G.]ChE%h42@U?Z'D;
%^5J`EAEVsb-HR2>>GTs@E-H$5,ii"hbo+.UZ)=7V$d@JNMJTYQih=[><9Y^>]e:ibf^[oDBq(E4*b,m)Xh>`r$0^^Fm:k9=?Z7c]
%PMXj.#C=F7Xm`ob48Aq<N&0o3O[iePh[h?QkG_1r1l]^GX_0>.-&i[kPN)FQP)-tM,7^CNSd1\%.B\X.Q0\bml2Gh@.>qJWgGg5#
%8UP6AO!@'KhO^VD$dH3;XdYqR]4tJn&*04*3\CrIX)HRg'4f"([n[5QR>S_X+At[%^!3FSLpO+Q`i0(RXXJ.pBD>N9U;0KiL7H,=
%RH(9g1BVpOZ$d@"cCn`p&pK./D<dQ;"E%4SRh?p>,,Dhn8iqViZtIj',[i+0_`UAf">00!'dhp0?HZu*o@/tf;tFFh@f-MsfB\0>
%/+Z^iS`^0dRAWfC>5Vg#3q0b#2#RKbo<M0&g8WBMm8LeO43#rcM*`^nj8#oc+3Hj6F\R)Wo\6SC2$2]IUK)QQN9ctdVdke/8@k4e
%*6r!uG1rk@,UgAEU'b_jn+LH,5`'YC7))'s+aa^i<;NduIlC/oUe0^\GtJf-rHrh\<,aJ"ju;lGF9Ygabrh83RI9Cc4Jal()QN7M
%6Nc3XrUm`k[!LuU3[K-kCOtYdSW_9VQYs9-[>q^;eu9mSC+1[&BVr+@[0"ZKMPE1n<k1m#+T'jLSsK%Z=f5Y8e*5e&SN=YD^KIJq
%ZBF1O>GhN96[X-b:>#V_J$`@V;H+K#]ih7b?Z=Yp;X@J(87/eS1r69.fqon$7-tc"gSSKr&3SU);^oTHXd=%mkW>b(d(=9i(SL!P
%brc.ZN/;H'.:%UQMf2BaqVLB!DL-R7fCZ\o8U?%XCmHXX83-Jc]@"Z]0XUE,4q'82O]),#No[*D9(k1^W)',D:!W9GW_`=IP/EF$
%!5:Yb!NWH/m2@9P6oK.fD2PJVJ#CDqhc7/BXXK$de9!VjnYp0$^,Elf/'O2h^Y*S%r-4-504U&Ic(ia*-D@4D3IfIJ?Kput4o227
%,e"QkbZXf<jUCJ<]CkAbTu\Y7-Ss$c<D?9\rYX4]+1?LC@a0O!FrZY>bpl)geH!j*^k%X6ID),2K04g[5>4Lpg12cn)NaWX7^J9l
%\H@W[8/mO6k3Ve]_QN9D4A,788CTho_>OFcnhBZB^@<VE^r_2^&*22a7(VQ_jdM\3.-,KV*N<bTh9%U!r;]p,Dhm^.I9M`Y]?2j]
%&Lc;0[3;.L<oJ6O\jH,\DM/:)Z>99=s,s9HMi_6E-(b??\jMkeCeCb8Fr^T\iN0t9=!n9=qg96AKBCYb\MP!p7-o-X&\idQl#&UE
%Q37HDAisP-JMHl*A)GLVUi(HaAs`/rH0eJbX[ah%QBL$1i-o"`,M+dKrbak/>,,3dLguT:)tMg2SEoj1X@HPto+h3mQ[:M&_mh.t
%@e4_MhopNPP<[dF2Zo3F)XYmH!tnR_*5oIc..I0eg^Qee0G-6:nLNZ\L6#b/8lml#fXuB%YX/>[5:oDT<X-?hZQL!uJqD7jJeU?<
%g="f/Uai:\])c'7G#dEQLdA'VF`b5gZq;b%/4b?=DHa6S=ce4Z!_gpP6!@]7h^qB2g-YCT$^,[Q.@.RLl,F-XDheK&\1)!=:WrTo
%$T@a91bpGR3CgN7TP_,$Dr<JbWFA$R6,RLiP'nAS.ANbcDsRKIbEN]/4P_!.W)h96AV@Omf[qAplErLp.Q1_2lP:ltX*Z%E[,;Gp
%ML=O1H5GMNj=f@ph4<#aX1MKkSi6MZO;E82%TKRB*,%<7Je9+V[#+/tXY-=?Z7sajeZ/ot.f'4/l!j1Cfk7dU@Ii1%L;&/Vk"gr,
%JmXtR;Y)"=/9fu&=^Y,R:p_+(1j`oLh^r"/:G&2i;G-1H3WlAlI&M-GA3oU$n[)gQ2*q`;mGmP2$)])mD&(kE-RBiqqfo$\[(hkP
%/!6(Kb2&3adT!P-/gF4YXScL%Ori%D3Xo4!3bTS?>Gn,+'Hcd#3L)NjG'mKi*3L)mZ?87C/?-:u]F3=.2<D=h+\ue"K^id1+!DuE
%bW<jtNeZf&PD<rfUMq*.P*SkNph!E]Z=H/!bP6bE`#X!RW1*!WgIWWJfCCS<1?J%<33QDXA#=R$*7.1H9'kTV',^W$0qEoH9Q*]_
%s5:kbPdX`(E(Wt]MqBNe\_C",HSG[")@+_eC;N\>'mTGQXTn0tZ4t+ni!rI>X^#ppWYIINr-P\h:!2e(BjmhHN7+X56Du@ucqsa2
%T<TS%E!(]'ld,tocgUb(jdMU?LfQ8[!,,?4cq(Hr#pts(rT<A.(7L0tp@9MJ*J2DcVm'5,>1=CsoR,&al@nJ/iAT4tmOS,i<bk;b
%j92aJ(TPm00KN"N3FAj/($L<M(D:"DI=N*"X.n4=[(-eLVGN*KSUKg-oK&HVBbfIRDQBQB!5IHY`iEh,6kRW==g>Q59H![n_Ws!L
%/h**L;4GP%jQ1G=PL:e!6#5W=i`cUn8TThIpU@agRgI"_C%\e3P9duWf+n6t`L7<mGFn'Ob??^FS?G1%/Xoah+Z/ZQg0hdKHE-.4
%>FMOjf;WXATp9D2Vg=G[.Tqd1h731j\D+!#'TSP)bGhq]-CI2$SPbEO?Q,La/(,NJ0B7o3iWl1Ha]rF:$1_6nrDhK4$)L`!oh!bR
%Xc#c_cRLDO"llZYI,1f`>d.A0B\$o*67H'.S-LoEdUJo\E1.50)DOfsAU8\L>uhEgUeWhE#'pVD)u$>G&XZ;DDPL(Qeh$TAP*6$J
%[o\H(ip6,SITJ+%Z&NgdX*=fWl&b7iVXZ_9GHNKmX^=W*j%"]n^78`[n`Ll%=qB"O+l]gZ70?Z#2G#D@+g6bjiaY)%V=:g(8>iuh
%7SEL]jQVY/W@HI0XZ'^4,.I<-@u8HY?,Lc+!i6<DT-S'+nBAeghg9(@]h?*En)hfafP,JIY\_n1k6K1>'29ju`j5trgljrc$3"JI
%Si"jiD`m@1A3F6:5ToRZf;4C!\aunE2'b;nbpSZ2G-\Buq]celmL7A8/5pR:dlS.OC#a97._1j'<qGsrG[YYS_0;#!(\8,?UqH;l
%&a#ZnqLe-#83C2bPRj=:p5`\`LNqj#KGklRDNj_bhKkXc\#\3[j2'\2=p=rrjSOH7m*ifFe3-^bY]HC80\1R5HYMr,3j^Ut7M]!(
%#7X,*VE<ZGEm,`P[TAVfimRXFl-aokHb,nCp>7UH#kIu4]\f4IJ(00tD*([n'^a'O=_cPA4pk:g5B`%p!rWf$r#SD9pEska8f>^i
%4)#g6hq3?ZX2AK4#J150@(#U\6h91;3k:f_*[a9lRgXN3+q.hVr?7u_if.X8A7+cSQLJ="]GAK8H>4!'-W0R21D(3!n`51)5!J[%
%/Qb*1j%Rh$:*e_?-DWkN43n$P[diHU7-W%HpCe*hX!,Ra3q88O.(\EJh$sT=P[!!?"W?K$S$?r[5BE-3Yk'Qa3rX:(aM8F4r'mFo
%B9j/NACkTZO2]I^MFa9)>`d=mn&GK:54P+`P!5[\V\QP-s!!dp8s9!mnp;Rse=F1sTTt_qa\%pQd>^!s![+#'SS/0=:X(7Ub19oV
%T>Un^.R'*/!JPK?*/&(uMXI5Z^Q@fK@tmjahts36K]otTSsae(ml[5<.:CnU4sffWDHt6._"G8.4J2r-6"jch7$gSE/e;+cC[T46
%_dG+1S=36Jo0k\.JjHHjh)1fmcoRbec_/f":X*Otr+?a.(O%^1k37=An/D%KSr#pgg8UJca`qSSVh4L^ictSTJBHtKo@5OMG&dWO
%+e?ZJ&G&*qBRX"kF(cXD,nPZ@E6Y9^]69b[S+sJ!@2WBjre8<_W3,#dEC+uLG0R4V[^*05FE5*81BCL"g9j:#jW;;ILXV"F`o%/a
%j(UaLZeF0)_)&XYna/5)QUAO:ADZ3=Wdb24jX5m1O6]gid/^&3+pmQm:&qSU$hAX-+YfkI?-#tEqYg"Y^Al$kM]61(o;AqF(c@oK
%nHH-HkcehM[TNkT+Fme]-qdVAZma!E)@h":a*WlQEF*:U"OGmL5$.5d'_RJWK-cfcp)):X%;oF@K7A<iqi5]BrRg0jE@PsX>37JO
%1F^T=&kQCI)sS9dKS,27(PoN!1mbbLi!Z_"gY&jSEB;jdp(F%B4Xdm&B?kYEN_abI[9S=c$BR;O_'oWDkBiDs'-EBJG#QheLD?Vt
%(f`u\kOjI?0h_@cX+,HDLb<%2?ohl5k,aS.H=U]*+9@.4b=BKTnLhe1NSA7HdP[#!,d=I`q5E/oPEqM]K3Sjk^*4q.f84gi`E@cY
%i9uZ_>+FX^k#)uY?k$#=<<>DhVK+H1Dl9;VH'&h9396TO6h).sg7<Ph.J->X'o(M5dBXZCYKQL>X8eISVg5R*#l:<<!DbVsCq&MY
%"\Qk!$@\Sa;XAX?n?S%@88cPt7`/cr@-oF(RrLkL3:_6XA<orDC8)`(muuLsp"9<\dT`)KXCJce-ED\D'O\<66o5np_!f'/[tSiP
%(a9KsqBfjjOXW"rC'c\!$;bn/^km.<>J((=W^;EVnD]PQS<5o[6]\O#=5"UnWqgQYib1leW!D#FmD4/[EOI]DeJ`i\81/L07oJ,I
%D+GoUaC_WEGY"94EmI*0'rjMSVJJ,/!q^T'='\gN2MtMbI6AWMORl$22Q<ehlgi:2_/iNO:BGG]ED!Ltn@_[a,cH#OVrB%B7oY-8
%-1>"m^':'(E"OGmrfVK>DCJr@7!XQIkJBVr$shtu,Y6T23t)ecO$WF;rp^`l4@YrlXngc%(HK[&ogOeY+?Q*;HG=apS@!PLn7BFV
%,@4^HXn2WaVR`9OEa?8AKp)5l1nS`G^lu5R9/iZ,f2-kqgCL@>J\LS"/J<]!k(QM3Y%2WUoAhq7`du@qQaHU?\49E$8!,D%h`iXW
%<Ni;4TB!G^FD888o]X,R;NO:3bbn#O7pOGCmkahVdLb!1@Bj.bFnYZF8M=%@-aPKEeE$7^E$Wg@1:3Q/Zq]0b[p>/eW&AA?>?m5T
%pSKuKZ9noeZa//,?(\3`%-nIb9:E+)S>&YhWE.;cYCNV8B?dL8'jP2=Mm:Kpf<*)hQaut?3kWgR.Q.IkX[2D8C(lGb5:t'6ed.(>
%R\k_uil[C)!!Gd"A&.k])tDm$VN95$#2QRnJ5;WSBTs:$H#>mP^bt;oOO64XT0_rYmuFu9;ZE$k;S(g>9ZG&b\0YgDP1Jf8,>hLY
%XkccVOgser[(aX*+Q(<7]),n&D?aTRrisK^RZ#2u=!^K>C[$C9*hD"&&n.!3Wra'<UeFgW/04ea[Wk7<'7Eo$Be<]-#qN@&!-Pko
%7uHAE8O8nZ.^;WH&9`gDfm6lC`uCa/NF4RjMZ.>GP^9Jl6Ojq!H>._#G*AC39qb8UF\2S\]"i;"IQD4Z$s;(tU6ZQ&-q9AC'QIBp
%bikeY6cNY9Lf.]acG.=Nm:N_1CZoNK%n2/C$aVhAcNpurViX$sO;^^$SKTgEOFm+-_!qNp<miPTNc24<[tmpNY8k"[_"-44TfC"b
%r"T]QG"PU-'5;l0aUYY?)5O_uXE#CO_FB+`V#M^QWDscn9$C&j%WMnB4UV9!G*DEX+Z..@a<EO_!`/k:1s6_HHJ\>%WrKiJUG,0/
%J)&.nO+*;nI1!k^DNnaiU4T0i3tg``DmabF_B51o,:/dd-HH0]d8?oKCI3o)hLg"![a]cIas]Tb7e76"f&`Y77Wi^"bGs>JKn8'Q
%@Nqf<$C`OWa\Bn[U>`sc,ZBDF`jJtr2\DM%f(>*CFn8`E!JJN409'A#S(jh#HPcf4;M/$dD+O3f(+[Y'grp0Z9jc'BCY&n"$9BbB
%Jf:Xfpb=C[E@42T_LnJS`kbqWK!q-a-n,f!jcp/(MT3SK*NZea6M;5JS0n(][>.3%Ws*O%R_qoZ/1hIeiMmi\&knc!Vh2OiOGlb4
%PEj#2d6tQ9.3DTThLr49CK@1Zr6[nuE[d8CM&:*cT"+%joA9cPO!Ph``Lk<Q59\3E2Cdt`&MHn;$.r8aCo_*eW\Otf"D@+k5t2e(
%$E'+J$`Z=<&pPnE2KMGqT87+m+BHuu]'5W?4XAN2=-_MbeUq&6*kaV1M\H^j@HnPlI4DOuC5XLk<I7,'C%7Nhe.Hd6(5uM;GfeX<
%mZiM.#J`0clD%H+;0jI!'6U?#MSe^oS!3%F!aC<=_iu%ZK#FJEB3Ig&U"%PsIM5lY:tKhs,je=.Mc@,RqY[]kl!]_P>blTrOrh`#
%7?US=DKMM$I$po`#A+GrdP?Ip;)AqNo)TaeTm"e(D0([EJi'Li1VpC9(c04ad0!mNVf[nuP#;*=V/oi#Q53G_A,9N4r/ZPH^Kr&2
%gT&]K\XGbfpIo'L<T*]fA?IC#:.5I4D$2:0<2.d+O">&[r_=D1#'"WtTg_[:-^nX%\>L?I\Y827^K8NjBpr\CBe.WUT'5=9X[q+b
%2ufbXBX[R.l)(W1iSGkRFkkK3,)r2b?!Y:m-QQt\FbP_?fbqi;($Q;Ho3GQdR3]]GVQHLpE]rmFMCU1:GATd-0b&qUg.IU^GeRrD
%Uqi(q[;.:DAt<j9C\kd.GLp)LA6E38,8<f<a=Ns^<[YFO4I<-H4_Pl1*&OinRcSbBBcG=o!\r+?*D5gAgUl0.4hB)^D0YF+7;d4J
%<AYP@+]eudT`*(3W`bq32FoURM\M4XPGoC`4ha)(qd&TI9W2(J/Iuh1E3a5,4./,WEb/s-,`XH(q<hdi-$isToa`WR.lTra38mS<
%g@:Irb8R@6(<L+>8VW=;:N'c>B?9+mGhQFf5<dBe`5UMdR;'8)G+7Mgq!+Cso7#;FrSsM_N?rs8)JTq]4f9^gkT(uHAk+ZjMrB'4
%?74o]o8;KAG@WUem,m8-/N\f9>ba5RA9fQ5IW8gCFh*X5Q>1,B6"*AOlci/JW2S6Cack>BRgGg(!SJ1.N:R^i2dg#\o>sdI?RHX&
%ciG%.&O8[Bni]fpV]bCrI4(Sl`Y,S)?#-g#<lS!`>1+K.D\Pseh#!_TkH\W1CnN2eXEP<5B3.QjCWY'uH7YPmXU=A4Xo;IgWePVS
%d]1%,*7<-@ES_@3?J;sRoVI3p`iU-[)OT34dSP1M4OAl*T(^ak-?]u>1UAcfXRa&f>L,)-;Jnp:[@9qT[9/7>Zct$hT_GjGpk^P?
%XT0A8Ed*5H$<Yb^5cG*?=Od*$[<F<qE?PMGC?t\Nq?[R)8ZN/QdrIIiU'`C'iPpR0L+k\4n,b=A>FeU+eZ3WeM(C=!O`+C&5VS*^
%,/D<;dKgR6S@M]GL>3J:.Z#M)(DaLA0dJO-;k@O)?(_p*Es:HR#/PP7_OQ)B3R)d)W:EOe8#ba02l;NgdA0Ap!>9#CduqH>[f75n
%R=!dn!sX:\[:M%'+at`Xoc^#O`W1T=$N2(p+s>76,IM(EiU0E"2hqiW[)$sd-U*X,=)p6qa$cG3HiOHhP;Oa$%jt7NqL-]F^0ur#
%Hj6*(WcZS8iC1dZO8.'L)<2r5Z[&$S5TrbJ@,)^#G"oc"TZRY=Xgu/"ru0M9GWpa3>p^!qqI)hMGIq93$/_a-/gb`=a6"[A3ou_T
%6X`L7k,-4XJ9+%mc-9L)#rM0seOY[qB,<A"+3=$(0\^)Iqdh<tnLpk;>B7Pq<M.`T7kpAqC*pM5-mb)0)\a5H8NDp&q7^]J>&m09
%&lMWYaB;)4^7n+IU%"t&9^cLRVd]])b0h68Q\.>8O1C"))t[iM5Fd*rKZ\Fp'`cd]HXDR#NGU-i-)u?Q'`f:d*roXm*^;-U_R-?f
%r]D5Dk26rM/SWf&'3X0QmTC!a$4&bc[TG$[4%>D""S"dCq/H"1Q''MAk2aou5\=4"YsW%\eiZZ;Qc3SlN_qY]Ck/(]*cYc:a[^+n
%pHY!fL=KjPON#L5<D_W_V2dc(Xlfp%c?)\-S-A/K(:<o\KqQ#R$:f$O)*jX$f-pp]\?;MoNTkKL2(Tc>%RoJ%%4nT1nIo'^)C\+I
%lK=PW=>W]d>Oa-;_F"r6[T!.sjocKdF3b()L4Z>*/ZQq@$MnOgHnZ,*20E%X=[632"[d]72,Z;7qF$X99&fu$BtugH9+c(LkQXbU
%,7gjO^3fjCSHB]_eZ7-Ql-lel9'F.+.mQbb,?KJde;QKm8/*@33!E^U;)=4C)U_SXjIXHMhoMVIMeM"^j@Q^IZu:R@=IGKb[\f.b
%68-dl$cN0Q!j^T\+4bd^BZglBVit)<DTr:Vqia("%1Ko0.hi&CdI=`EmqNr&EiN/E"I<^l*]7oAhN^aMd)eFF@j*>]#\6H$"Cn,_
%PuYM3a74cdWjfR4T?,pIaPt!7'6el(W*h^l<OCcN]42169I*@*J_Y<G?S_:IaP`b8%m*><ojlPF(Rb?jb?J>qhquL[pfP*(QNDag
%]fiL`qdop-3LrGbl8;RDqKWu9k"\\&3<BXZ;b[An,&+?B%pO;q\'cgg+Ibh6>CqCk2,+E-:4k0Y<#B@VG?WR.`U>XgB9B0[PkM66
%/#/fRD]]39gAp.*@?.r"9T<OC_cW(f]rr+L_-QlA_XiiW)$hj`LI$A6B]n)n2j%IHY47<dhV4TSN/L/b_L[f#-<(DBU^f[`9c`^k
%6<*6lQ\qXhM.<5n^n,;#TP<s/',m.2d)'!#6)2m;SKo*8$JrY[ZtGT3U/Au(X]hm^e"B,H()OX1\tqdSRW)M\oJC<(T%PqS^1B<Z
%;6&14*3*),3Fj>:14&EL+q8>QBh<enqgU/oN83EY.Sn*=TPe#&?gP@<e@fNi#?,``0/@4(6IX+M;S-Y6-',YggKTkG<+E.9$ULqR
%;j!/TQBC,_BZ8nnTK--s5NBsSX6R,f![9]^cs&3'8&TMtcrbtZo?>T&b(7u]/o*M]c=&'e+Y68QR*(.d/@@3)`^5h329T'S`r5hB
%U@5^*UiR?qV/Im'Q-$s\/4l.XH"*.bm?:d7M*``4k`s(9V+&R^N&7-/C@7.Dfr`&+@alqna@!l2F-=(&M%@1.H2k[bO!,.#lCgrk
%BPdNGEQ,,BEKn4>Eq=.2WAYPje4_oX06'O'8CEr?;RcloeTtKDP22"34,_\;,S0DiUJH%3ZkGcR>1IiQ[Ti<&P(F3-fsE<9F%9iS
%+rX)V@^h:H__E>M,"`7s<gAobeDgu#8^$KKr#;pZJ07_R<.3=^IW&ZPWfkfZ(_u]cG?Id7#n:Q6BJ'$KlZG4=RWa5./3@q#70,Q@
%j@j`Icn*LC#*6BQa4j;NX[/:W^?+W`&^W_V=)q)R-9ueGBOpnWc_#Ac,7b1Y^;l8XIck?mG3Wfn0UL3e;M$lue70_%oR;r*njJe<
%kF(u/1U.*DPM&LPr&&jOWh>S7`Bg[dM>aEHPV-$$Mb@k493-c4JekH;aU?h&]p61o0L+*Y%29ZY3@+GV$)OSrAE\\`P'A%jRUn5A
%i_(Gu26eLn18qLa^iS(Hb3`ac$B:ZYoUWIM*-+3k(tMP?dq"'5c5b/JaDnLLTeCHE<'g+qVR]bPJC%P\1\nb2%B[dnZDF*jWm^M`
%6G`/"j^(k0QU"pA=$e>[%pGrTd3o#/568:pDLF&c*ZsHJg*AW!$&@)4dW#e'Bf2ij`/W_UI?]eh\/*('J)S"=;(63=0$1>DYBeOb
%loZib2\VIKs'a:Rr]fQFp)ebXh`q/'hgYJ"?i=^NroQHFk+@,"J,]F+s8;h6J,e,MohYVaS,_Z\Dnl,(ms*T*s2Xo8[t"8QDu]J@
%s76'E^A[Btr@e1('HUEgr6=-sL]@"]s7KatIo<6/YQ~>
%AI9_PrivateDataEnd
